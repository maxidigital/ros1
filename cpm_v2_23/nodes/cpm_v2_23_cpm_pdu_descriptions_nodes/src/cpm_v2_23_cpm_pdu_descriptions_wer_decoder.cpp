/*
 *
 * Copyright (C) German Aerospace Center e.V. (https://www.dlr.de)
 * Institute of Transportation Systems. (https://www.dlr.de/ts/)
 *
 * 
 * Eclipse ADORe, Automated Driving Open Research https://eclipse.org/adore
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 *
 * 
 * File automatically generated with DLR Wind v2
 * 
 * This file belongs to the DLR Wind project de.dlr.ts.v2x:cpm_v2_23:1.0
 * 
 * Module: CPM_PDU_Descriptions {itu-t(0) identified-organization(4) etsi(0) itsDomain(5) 
 *         wg1(1) ts(103324) cpm(1) major-version-1(1) minor-version-1(1)}
 * 
 * For support contact v2x-ts@dlr.de
 * 
 *
 */
#include <cpm_v2_23_cpm_pdu_descriptions_wer_decoder.h>


/**
 *
 */
namespace wind
{
    namespace decoder_cpm_v2_23_cpm_pdu_descriptions
    {        
        
        #if WIND_ROS_VERSION == 1
          bool WerDecoder::decode(cpm_v2_23_cpm_pdu_descriptions_msgs::CollectivePerceptionMessage* ros, const uint8_t *buffer)
        #else
          bool WerDecoder::decode(cpm_v2_23_cpm_pdu_descriptions_msgs::msg::CollectivePerceptionMessage* ros, const uint8_t *buffer)
        #endif
        {
            const uint8_t *start = buffer;
            int64_t __aux64__;
	
    // CollectivePerceptionMessage  SEQUENCE
        //  its_header ItsPduHeader     
        //  payload    CpmPayload       
    
    // Field name: its_header
        // ItsPduHeader  SEQUENCE
            //  protocolVersion OrdinalNumber1B     
            //  messageId       MessageId           
            //  stationId       StationId           
        
        // Field name: protocol_version
        // Integer
        // UINT8  min(0) max(255) span(256) datatype(UInt8)
        uint8_t* _tmp_8870 = (uint8_t*) buffer++;
        __aux64__ = *_tmp_8870;
        ros->its_header.protocol_version.value = __aux64__;
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m007878\033[0m| " << tools::getTypeName(ros->its_header.protocol_version.value) << 
                         " its_header.protocol_version.value: " << static_cast<int>(ros->its_header.protocol_version.value);
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->warning() << "Error: Value in 'its_header.protocol_version.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 255) {
            logger->warning() << "Error: Value in 'its_header.protocol_version.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
            return false;
        }
        
        // Field name: message_id
        // Integer
        // UINT8  min(0) max(255) span(256) datatype(UInt8)
        uint8_t* _tmp_8871 = (uint8_t*) buffer++;
        __aux64__ = *_tmp_8871;
        ros->its_header.message_id.value = __aux64__;
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m007879\033[0m| " << tools::getTypeName(ros->its_header.message_id.value) << 
                         " its_header.message_id.value: " << static_cast<int>(ros->its_header.message_id.value);
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->warning() << "Error: Value in 'its_header.message_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 255) {
            logger->warning() << "Error: Value in 'its_header.message_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
            return false;
        }
        
        // Field name: station_id
        // Integer
        // UINT32  min(0) max(4294967295) span(4294967296) datatype(UInt32)
        uint32_t* _tmp_8872 = (uint32_t*) buffer; buffer += 4;
        __aux64__ = *_tmp_8872;
        ros->its_header.station_id.value = __aux64__;
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m007880\033[0m| " << tools::getTypeName(ros->its_header.station_id.value) << 
                         " its_header.station_id.value: " << ros->its_header.station_id.value;
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->warning() << "Error: Value in 'its_header.station_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 4294967295) {
            logger->warning() << "Error: Value in 'its_header.station_id.value' " << (__aux64__) << " exceeds max allowable (4294967295); message dropped.";
            return false;
        }
    
    // Field name: payload
        // CpmPayload  SEQUENCE
            //  managementContainer ManagementContainer                
            //  cpmContainers       ConstraintWrappedCpmContainers     
            //  ...
        uint8_t* _ext_flag_3942 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m007881\033[0m| Reading ext flag from ros->payload.: " << int(*_ext_flag_3942);
        }
        
        
        // Field name: management_container
            // ManagementContainer  SEQUENCE
                //  referenceTime     TimestampIts                
                //  referencePosition ReferencePosition           
                //  segmentationInfo  MessageSegmentationInfo   OPTIONAL  
                //  messageRateRange  MessageRateRange          OPTIONAL  
                //  ...
            uint8_t* _ext_flag_3943 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.management_container.
            
            if(debug) {
                logger->debug() << "|\033[38;5;94m007882\033[0m| Reading ext flag from ros->payload.management_container.: " << int(*_ext_flag_3943);
            }
            
            if(*(buffer++)) { 
                its_container_v3_etsi_its_cdd_msgs::MessageSegmentationInfo _tmp_8873;
                ros->payload.management_container.segmentation_info.push_back(_tmp_8873);
            
                if(debug)
                    logger->debug() << "|\033[38;5;94m007883\033[0m| ros->payload.management_container.segmentation_info " << tools::green("present");
            }
            if(*(buffer++)) { 
                cpm_v2_23_cpm_pdu_descriptions_msgs::MessageRateRange _tmp_8874;
                ros->payload.management_container.message_rate_range.push_back(_tmp_8874);
            
                if(debug)
                    logger->debug() << "|\033[38;5;94m007884\033[0m| ros->payload.management_container.message_rate_range " << tools::green("present");
            }
            
            // Field name: reference_time
            // Real
            // Float
            // FLOAT  min(0) max(4398046511103) span(4398046511104) scaleDivisor(1000.0) dataType(Float)
            uint64_t* _tmp_8875 = (uint64_t*)buffer; buffer += 8;
            ros->payload.management_container.reference_time.value = *_tmp_8875;
            __aux64__ = ros->payload.management_container.reference_time.value;
            ros->payload.management_container.reference_time.value /= 1000.0;
            
            // ******************* MIN validator *******************
            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                logger->warning() << "Error: Value in 'payload.management_container.reference_time.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                return false;
            }
            // ******************* MAX validator *******************
            if(VALIDATORS_ENABLED && __aux64__ > 4398046511103) {
                logger->warning() << "Error: Value in 'payload.management_container.reference_time.value' " << (__aux64__) << " exceeds max allowable (4398046511103); message dropped.";
                return false;
            }
            
            if(debug) {
                logger->debug() << "|\033[38;5;94m007885\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_time.value) << " payload.management_container.reference_time: " <<
                             ros->payload.management_container.reference_time.value << " (" << __aux64__ << ")";
            }
            
            // Field name: reference_position
                // ReferencePosition  SEQUENCE
                    //  latitude                  Latitude                 
                    //  longitude                 Longitude                
                    //  positionConfidenceEllipse PosConfidenceEllipse     
                    //  altitude                  Altitude                 
                
                // Field name: latitude
                // Real
                // Double
                // DOUBLE  min(-900000000) max(900000001) span(1800000002) scaleDivisor(1.0E7) dataType(Double)
                uint32_t* _tmp_8876 = (uint32_t*) buffer; buffer += 4;
                ros->payload.management_container.reference_position.latitude.value = *_tmp_8876;
                ros->payload.management_container.reference_position.latitude.value += -900000000;
                __aux64__ = ros->payload.management_container.reference_position.latitude.value;
                ros->payload.management_container.reference_position.latitude.value /= 1.0E7;
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < -900000000) {
                    logger->warning() << "Error: Value in 'payload.management_container.reference_position.latitude.value' " << (__aux64__) << " is less than allowable (-900000000); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 900000001) {
                    logger->warning() << "Error: Value in 'payload.management_container.reference_position.latitude.value' " << (__aux64__) << " exceeds max allowable (900000001); message dropped.";
                    return false;
                }
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m007886\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.latitude.value) << " payload.management_container.reference_position.latitude: " <<
                                 ros->payload.management_container.reference_position.latitude.value << " (" << __aux64__ << ")";
                }
                
                // Field name: longitude
                // Real
                // Double
                // DOUBLE  min(-1800000000) max(1800000001) span(3600000002) scaleDivisor(1.0E7) dataType(Double)
                uint32_t* _tmp_8877 = (uint32_t*) buffer; buffer += 4;
                ros->payload.management_container.reference_position.longitude.value = *_tmp_8877;
                ros->payload.management_container.reference_position.longitude.value += -1800000000;
                __aux64__ = ros->payload.management_container.reference_position.longitude.value;
                ros->payload.management_container.reference_position.longitude.value /= 1.0E7;
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < -1800000000) {
                    logger->warning() << "Error: Value in 'payload.management_container.reference_position.longitude.value' " << (__aux64__) << " is less than allowable (-1800000000); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 1800000001) {
                    logger->warning() << "Error: Value in 'payload.management_container.reference_position.longitude.value' " << (__aux64__) << " exceeds max allowable (1800000001); message dropped.";
                    return false;
                }
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m007887\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.longitude.value) << " payload.management_container.reference_position.longitude: " <<
                                 ros->payload.management_container.reference_position.longitude.value << " (" << __aux64__ << ")";
                }
                
                // Field name: position_confidence_ellipse
                    // PosConfidenceEllipse  SEQUENCE
                        //  semiMajorConfidence  SemiAxisLength     
                        //  semiMinorConfidence  SemiAxisLength     
                        //  semiMajorOrientation HeadingValue       
                    
                    // Field name: semi_major_confidence
                    // Real
                    // Float
                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                    uint16_t* _tmp_8878 = (uint16_t*) buffer; buffer += 2;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value = *_tmp_8878;
                    __aux64__ = ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value /= 100.0;
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                        return false;
                    }
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m007888\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value) << " payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence: " <<
                                     ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value << " (" << __aux64__ << ")";
                    }
                    
                    // Field name: semi_minor_confidence
                    // Real
                    // Float
                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                    uint16_t* _tmp_8879 = (uint16_t*) buffer; buffer += 2;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value = *_tmp_8879;
                    __aux64__ = ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value /= 100.0;
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                        return false;
                    }
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m007889\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value) << " payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence: " <<
                                     ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value << " (" << __aux64__ << ")";
                    }
                    
                    // Field name: semi_major_orientation
                    // Integer
                    // UINT16  min(0) max(3601) span(3602) datatype(UInt16)
                    uint16_t* _tmp_8880 = (uint16_t*) buffer; buffer += 2;
                    __aux64__ = *_tmp_8880;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value = __aux64__;
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m007890\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value) << 
                                     " payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value: " << ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value;
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                        return false;
                    }
                
                // Field name: altitude
                    // Altitude  SEQUENCE
                        //  altitudeValue      AltitudeValue          
                        //  altitudeConfidence AltitudeConfidence     
                    
                    // Field name: altitude_value
                    // Real
                    // Float
                    // FLOAT  min(-100000) max(800001) span(900002) scaleDivisor(100.0) dataType(Float)
                    uint32_t* _tmp_8881 = (uint32_t*) buffer; buffer += 4;
                    ros->payload.management_container.reference_position.altitude.altitude_value.value = *_tmp_8881;
                    ros->payload.management_container.reference_position.altitude.altitude_value.value += -100000;
                    __aux64__ = ros->payload.management_container.reference_position.altitude.altitude_value.value;
                    ros->payload.management_container.reference_position.altitude.altitude_value.value /= 100.0;
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < -100000) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.altitude.altitude_value.value' " << (__aux64__) << " is less than allowable (-100000); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 800001) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.altitude.altitude_value.value' " << (__aux64__) << " exceeds max allowable (800001); message dropped.";
                        return false;
                    }
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m007891\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.altitude.altitude_value.value) << " payload.management_container.reference_position.altitude.altitude_value: " <<
                                     ros->payload.management_container.reference_position.altitude.altitude_value.value << " (" << __aux64__ << ")";
                    }
                    
                    // Field name: altitude_confidence
                    // Enumerated
                    // INT32  min(0) max(15) span(16) datatype(Int32)
                    uint8_t* _tmp_8882 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_8882;
                    __aux64__ += 0;
                    ros->payload.management_container.reference_position.altitude.altitude_confidence.value = __aux64__;
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.altitude.altitude_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 15) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.altitude.altitude_confidence.value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                        return false;
                    }
                    
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m007892\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.altitude.altitude_confidence.value) << 
                                     " payload.management_container.reference_position.altitude.altitude_confidence.value: " << static_cast<int>(ros->payload.management_container.reference_position.altitude.altitude_confidence.value);
                    }
            
            if(ros->payload.management_container.segmentation_info.size() != 0) {
                // Field name: segmentation_info
                    // MessageSegmentationInfo  SEQUENCE
                        //  totalMsgNo CardinalNumber3b     
                        //  thisMsgNo  OrdinalNumber3b      
                    
                    // Field name: total_msg_no
                    // Integer
                    // UINT8  min(1) max(8) span(8) datatype(UInt8)
                    uint8_t* _tmp_8883 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_8883;
                    __aux64__ += 1;
                    ros->payload.management_container.segmentation_info[0].total_msg_no.value = __aux64__;
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m007893\033[0m| " << tools::getTypeName(ros->payload.management_container.segmentation_info[0].total_msg_no.value) << 
                                     " payload.management_container.segmentation_info[0].total_msg_no.value: " << static_cast<int>(ros->payload.management_container.segmentation_info[0].total_msg_no.value);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                        logger->warning() << "Error: Value in 'payload.management_container.segmentation_info[0].total_msg_no.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 8) {
                        logger->warning() << "Error: Value in 'payload.management_container.segmentation_info[0].total_msg_no.value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                        return false;
                    }
                    
                    // Field name: this_msg_no
                    // Integer
                    // UINT8  min(1) max(8) span(8) datatype(UInt8)
                    uint8_t* _tmp_8884 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_8884;
                    __aux64__ += 1;
                    ros->payload.management_container.segmentation_info[0].this_msg_no.value = __aux64__;
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m007894\033[0m| " << tools::getTypeName(ros->payload.management_container.segmentation_info[0].this_msg_no.value) << 
                                     " payload.management_container.segmentation_info[0].this_msg_no.value: " << static_cast<int>(ros->payload.management_container.segmentation_info[0].this_msg_no.value);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                        logger->warning() << "Error: Value in 'payload.management_container.segmentation_info[0].this_msg_no.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 8) {
                        logger->warning() << "Error: Value in 'payload.management_container.segmentation_info[0].this_msg_no.value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                        return false;
                    }
            }
            
            if(ros->payload.management_container.message_rate_range.size() != 0) {
                // Field name: message_rate_range
                    // MessageRateRange  SEQUENCE
                        //  messageRateMin MessageRateHz     
                        //  messageRateMax MessageRateHz     
                    
                    // Field name: message_rate_min
                        // MessageRateHz  SEQUENCE
                            //  mantissa   MessageRateHz_mantissa     
                            //  exponent   MessageRateHz_exponent     
                        
                        // Field name: mantissa
                        // Integer
                        // UINT8  min(1) max(100) span(100) datatype(UInt8)
                        uint8_t* _tmp_8885 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_8885;
                        __aux64__ += 1;
                        ros->payload.management_container.message_rate_range[0].message_rate_min.mantissa.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m007895\033[0m| " << tools::getTypeName(ros->payload.management_container.message_rate_range[0].message_rate_min.mantissa.value) << 
                                         " payload.management_container.message_rate_range[0].message_rate_min.mantissa.value: " << static_cast<int>(ros->payload.management_container.message_rate_range[0].message_rate_min.mantissa.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_min.mantissa.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 100) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_min.mantissa.value' " << (__aux64__) << " exceeds max allowable (100); message dropped.";
                            return false;
                        }
                        
                        // Field name: exponent
                        // Integer
                        // INT8  min(-5) max(2) span(8) datatype(Int8)
                        uint8_t* _tmp_8886 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_8886;
                        __aux64__ += -5;
                        ros->payload.management_container.message_rate_range[0].message_rate_min.exponent.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m007896\033[0m| " << tools::getTypeName(ros->payload.management_container.message_rate_range[0].message_rate_min.exponent.value) << 
                                         " payload.management_container.message_rate_range[0].message_rate_min.exponent.value: " << static_cast<int>(ros->payload.management_container.message_rate_range[0].message_rate_min.exponent.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < -5) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_min.exponent.value' " << (__aux64__) << " is less than allowable (-5); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 2) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_min.exponent.value' " << (__aux64__) << " exceeds max allowable (2); message dropped.";
                            return false;
                        }
                    
                    // Field name: message_rate_max
                        // MessageRateHz  SEQUENCE
                            //  mantissa   MessageRateHz_mantissa     
                            //  exponent   MessageRateHz_exponent     
                        
                        // Field name: mantissa
                        // Integer
                        // UINT8  min(1) max(100) span(100) datatype(UInt8)
                        uint8_t* _tmp_8887 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_8887;
                        __aux64__ += 1;
                        ros->payload.management_container.message_rate_range[0].message_rate_max.mantissa.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m007897\033[0m| " << tools::getTypeName(ros->payload.management_container.message_rate_range[0].message_rate_max.mantissa.value) << 
                                         " payload.management_container.message_rate_range[0].message_rate_max.mantissa.value: " << static_cast<int>(ros->payload.management_container.message_rate_range[0].message_rate_max.mantissa.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_max.mantissa.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 100) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_max.mantissa.value' " << (__aux64__) << " exceeds max allowable (100); message dropped.";
                            return false;
                        }
                        
                        // Field name: exponent
                        // Integer
                        // INT8  min(-5) max(2) span(8) datatype(Int8)
                        uint8_t* _tmp_8888 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_8888;
                        __aux64__ += -5;
                        ros->payload.management_container.message_rate_range[0].message_rate_max.exponent.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m007898\033[0m| " << tools::getTypeName(ros->payload.management_container.message_rate_range[0].message_rate_max.exponent.value) << 
                                         " payload.management_container.message_rate_range[0].message_rate_max.exponent.value: " << static_cast<int>(ros->payload.management_container.message_rate_range[0].message_rate_max.exponent.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < -5) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_max.exponent.value' " << (__aux64__) << " is less than allowable (-5); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 2) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_max.exponent.value' " << (__aux64__) << " exceeds max allowable (2); message dropped.";
                            return false;
                        }
            }
            if(*_ext_flag_3943) { // from ros->payload.management_container. 
                uint8_t* _tmp_8889 = (uint8_t*) buffer++;  // number of extensions
                bool _array_105[*_tmp_8889];
                
                if(debug)
                    logger->debug() << "|\033[38;5;94m007899\033[0m| Reading number of exts from ros->payload.management_container.: " << static_cast<unsigned int>(*_tmp_8889);
                
                // Extensions bytemap
                for(int i = 0; i < *_tmp_8889; i++)
                    _array_105[i] = (*buffer++) != 0;
                
                // Discarding unknown OpenType containers
                for(int i = 0; i < *_tmp_8889; i++) {
                    uint16_t* _tmp_8890 = (uint16_t*)buffer;  // OpenType length
                    buffer += 2;
                
                    if(debug) {
                    }
                
                    for(int i = 0; i < *_tmp_8890; i++)
                        buffer++;
                }
                
            }
        
        // Field name: cpm_containers
        // SequenceOf
        // Data Type UInt8
        // SEQUENCE_OF  min(1) max(8) span(8)
        int16_t* _tmp_8891 = (int16_t*)buffer;
        buffer += 2;
        __aux64__ = *_tmp_8891;
        __aux64__ += 1;     // +min
        
        int _if__tmp_8891 = __aux64__;
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m007900\033[0m| SequenceOf ros->payload.cpm_containers. size: " << int(*_tmp_8891);
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 1) {
            logger->warning() << "Error: Value in 'payload.cpm_containers.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 8) {
            logger->warning() << "Error: Value in 'payload.cpm_containers.value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
            return false;
        }
        
        
        for(int e = 0; e < _if__tmp_8891; e++) {
            cpm_v2_23_cpm_pdu_descriptions_msgs::WrappedCpmContainer seqof_e;  // CHOICE
            ros->payload.cpm_containers.elements.push_back(seqof_e);
        
            // Choice
               // #0  originatingVehicleContainer   OriginatingVehicleContainer   
               // #1  originatingRsuContainer   OriginatingRsuContainer   
               // #2  sensorInformationContainer   SensorInformationContainer   
               // #3  perceptionRegionContainer   PerceptionRegionContainer   
               // #4  perceivedObjectContainer   PerceivedObjectContainer   
            uint8_t _choice_287 = *(buffer++);
            
            if(_choice_287 == 0) {
                cpm_v2_23_cpm_originatingstationcontainers_msgs::OriginatingVehicleContainer _tmp_8892;
                ros->payload.cpm_containers.elements[e].originating_vehicle_container.push_back(_tmp_8892);
            
                    // OriginatingVehicleContainer  SEQUENCE
                        //  orientationAngle Wgs84Angle         
                        //  pitchAngle       CartesianAngle   OPTIONAL  
                        //  rollAngle        CartesianAngle   OPTIONAL  
                        //  trailerDataSet   TrailerDataSet   OPTIONAL  
                        //  ...
                    uint8_t* _ext_flag_3952 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m007901\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].: " << int(*_ext_flag_3952);
                    }
                    
                    if(*(buffer++)) { 
                        its_container_v3_etsi_its_cdd_msgs::CartesianAngle _tmp_8893;
                        ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].pitch_angle.push_back(_tmp_8893);
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m007902\033[0m| ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].pitch_angle " << tools::green("present");
                    }
                    if(*(buffer++)) { 
                        its_container_v3_etsi_its_cdd_msgs::CartesianAngle _tmp_8894;
                        ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].roll_angle.push_back(_tmp_8894);
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m007903\033[0m| ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].roll_angle " << tools::green("present");
                    }
                    if(*(buffer++)) { 
                        cpm_v2_23_cpm_originatingstationcontainers_msgs::TrailerDataSet _tmp_8895;
                        ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set.push_back(_tmp_8895);
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m007904\033[0m| ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set " << tools::green("present");
                    }
                    
                    // Field name: orientation_angle
                        // Wgs84Angle  SEQUENCE
                            //  value      Wgs84AngleValue          
                            //  confidence Wgs84AngleConfidence     
                        
                        // Field name: value
                        // Real
                        // Float
                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                        uint16_t* _tmp_8896 = (uint16_t*) buffer; buffer += 2;
                        ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].orientation_angle.value.value = *_tmp_8896;
                        __aux64__ = ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].orientation_angle.value.value;
                        ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].orientation_angle.value.value /= 10.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].orientation_angle.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].orientation_angle.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m007905\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].orientation_angle.value.value) << " payload.cpm_containers.elements[e].originating_vehicle_container[0].orientation_angle.value: " <<
                                         ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].orientation_angle.value.value << " (" << __aux64__ << ")";
                        }
                        
                        // Field name: confidence
                        // Real
                        // Float
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                        uint8_t* _tmp_8897 = (uint8_t*) buffer++;
                        ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].orientation_angle.confidence.value = *_tmp_8897;
                        ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].orientation_angle.confidence.value += 1;
                        __aux64__ = ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].orientation_angle.confidence.value;
                        ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].orientation_angle.confidence.value /= 10.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].orientation_angle.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].orientation_angle.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m007906\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].orientation_angle.confidence.value) << " payload.cpm_containers.elements[e].originating_vehicle_container[0].orientation_angle.confidence: " <<
                                         ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].orientation_angle.confidence.value << " (" << __aux64__ << ")";
                        }
                    
                    if(ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].pitch_angle.size() != 0) {
                        // Field name: pitch_angle
                            // CartesianAngle  SEQUENCE
                                //  value      CartesianAngleValue     
                                //  confidence AngleConfidence         
                            
                            // Field name: value
                            // Real
                            // Float
                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                            uint16_t* _tmp_8898 = (uint16_t*) buffer; buffer += 2;
                            ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].pitch_angle[0].value.value = *_tmp_8898;
                            __aux64__ = ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].pitch_angle[0].value.value;
                            ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].pitch_angle[0].value.value /= 10.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].pitch_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].pitch_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m007907\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].pitch_angle[0].value.value) << " payload.cpm_containers.elements[e].originating_vehicle_container[0].pitch_angle[0].value: " <<
                                             ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].pitch_angle[0].value.value << " (" << __aux64__ << ")";
                            }
                            
                            // Field name: confidence
                            // Real
                            // Float
                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                            uint8_t* _tmp_8899 = (uint8_t*) buffer++;
                            ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].pitch_angle[0].confidence.value = *_tmp_8899;
                            ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].pitch_angle[0].confidence.value += 1;
                            __aux64__ = ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].pitch_angle[0].confidence.value;
                            ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].pitch_angle[0].confidence.value /= 10.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].pitch_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].pitch_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m007908\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].pitch_angle[0].confidence.value) << " payload.cpm_containers.elements[e].originating_vehicle_container[0].pitch_angle[0].confidence: " <<
                                             ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].pitch_angle[0].confidence.value << " (" << __aux64__ << ")";
                            }
                    }
                    
                    if(ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].roll_angle.size() != 0) {
                        // Field name: roll_angle
                            // CartesianAngle  SEQUENCE
                                //  value      CartesianAngleValue     
                                //  confidence AngleConfidence         
                            
                            // Field name: value
                            // Real
                            // Float
                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                            uint16_t* _tmp_8900 = (uint16_t*) buffer; buffer += 2;
                            ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].roll_angle[0].value.value = *_tmp_8900;
                            __aux64__ = ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].roll_angle[0].value.value;
                            ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].roll_angle[0].value.value /= 10.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].roll_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].roll_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m007909\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].roll_angle[0].value.value) << " payload.cpm_containers.elements[e].originating_vehicle_container[0].roll_angle[0].value: " <<
                                             ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].roll_angle[0].value.value << " (" << __aux64__ << ")";
                            }
                            
                            // Field name: confidence
                            // Real
                            // Float
                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                            uint8_t* _tmp_8901 = (uint8_t*) buffer++;
                            ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].roll_angle[0].confidence.value = *_tmp_8901;
                            ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].roll_angle[0].confidence.value += 1;
                            __aux64__ = ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].roll_angle[0].confidence.value;
                            ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].roll_angle[0].confidence.value /= 10.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].roll_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].roll_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m007910\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].roll_angle[0].confidence.value) << " payload.cpm_containers.elements[e].originating_vehicle_container[0].roll_angle[0].confidence: " <<
                                             ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].roll_angle[0].confidence.value << " (" << __aux64__ << ")";
                            }
                    }
                    
                    if(ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set.size() != 0) {
                        // Field name: trailer_data_set
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(8) span(8)
                        uint8_t* _ext_flag_3959 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m007911\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].: " << int(*_ext_flag_3959);
                        }
                        
                        int16_t* _tmp_8902 = (int16_t*)buffer;
                        buffer += 2;
                        __aux64__ = *_tmp_8902;
                        __aux64__ += 1;     // +min
                        
                        int _if__tmp_8902 = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m007912\033[0m| SequenceOf ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0]. size: " << int(*_tmp_8902);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 8) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                            return false;
                        }
                        
                        
                        for(int f = 0; f < _if__tmp_8902; f++) {
                            its_container_v3_etsi_its_cdd_msgs::TrailerData seqof_f;  // SEQUENCE
                            ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements.push_back(seqof_f);
                        
                                // TrailerData  SEQUENCE
                                    //  refPointId       Identifier1B         
                                    //  hitchPointOffset StandardLength1B     
                                    //  frontOverhang    StandardLength1B   OPTIONAL  
                                    //  rearOverhang     StandardLength1B   OPTIONAL  
                                    //  trailerWidth     VehicleWidth       OPTIONAL  
                                    //  hitchAngle       CartesianAngle       
                                    //  ...
                                uint8_t* _ext_flag_3960 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m007913\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].: " << int(*_ext_flag_3960);
                                }
                                
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::StandardLength1B _tmp_8903;
                                    ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].front_overhang.push_back(_tmp_8903);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m007914\033[0m| ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].front_overhang " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::StandardLength1B _tmp_8904;
                                    ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].rear_overhang.push_back(_tmp_8904);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m007915\033[0m| ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].rear_overhang " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::VehicleWidth _tmp_8905;
                                    ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].trailer_width.push_back(_tmp_8905);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m007916\033[0m| ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].trailer_width " << tools::green("present");
                                }
                                
                                // Field name: ref_point_id
                                // Integer
                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                uint8_t* _tmp_8906 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_8906;
                                ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].ref_point_id.value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m007917\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].ref_point_id.value) << 
                                                 " payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].ref_point_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].ref_point_id.value);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].ref_point_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].ref_point_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                    return false;
                                }
                                
                                // Field name: hitch_point_offset
                                // Real
                                // Float
                                // FLOAT  min(0) max(255) span(256) scaleDivisor(10.0) dataType(Float)
                                uint8_t* _tmp_8907 = (uint8_t*) buffer++;
                                ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_point_offset.value = *_tmp_8907;
                                __aux64__ = ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_point_offset.value;
                                ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_point_offset.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_point_offset.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_point_offset.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m007918\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_point_offset.value) << " payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_point_offset: " <<
                                                 ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_point_offset.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].front_overhang.size() != 0) {
                                    // Field name: front_overhang
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(255) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_8908 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].front_overhang[0].value = *_tmp_8908;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].front_overhang[0].value;
                                    ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].front_overhang[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].front_overhang[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].front_overhang[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m007919\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].front_overhang[0].value) << " payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].front_overhang[0]: " <<
                                                     ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].front_overhang[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].rear_overhang.size() != 0) {
                                    // Field name: rear_overhang
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(255) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_8909 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].rear_overhang[0].value = *_tmp_8909;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].rear_overhang[0].value;
                                    ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].rear_overhang[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].rear_overhang[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].rear_overhang[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m007920\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].rear_overhang[0].value) << " payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].rear_overhang[0]: " <<
                                                     ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].rear_overhang[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].trailer_width.size() != 0) {
                                    // Field name: trailer_width
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(62) span(62) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_8910 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].trailer_width[0].value = *_tmp_8910;
                                    ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].trailer_width[0].value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].trailer_width[0].value;
                                    ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].trailer_width[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].trailer_width[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 62) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].trailer_width[0].value' " << (__aux64__) << " exceeds max allowable (62); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m007921\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].trailer_width[0].value) << " payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].trailer_width[0]: " <<
                                                     ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].trailer_width[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                // Field name: hitch_angle
                                    // CartesianAngle  SEQUENCE
                                        //  value      CartesianAngleValue     
                                        //  confidence AngleConfidence         
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_8911 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_angle.value.value = *_tmp_8911;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_angle.value.value;
                                    ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_angle.value.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_angle.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_angle.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m007922\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_angle.value.value) << " payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_angle.value: " <<
                                                     ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_angle.value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_8912 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_angle.confidence.value = *_tmp_8912;
                                    ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_angle.confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_angle.confidence.value;
                                    ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_angle.confidence.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_angle.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_angle.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m007923\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_angle.confidence.value) << " payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_angle.confidence: " <<
                                                     ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].hitch_angle.confidence.value << " (" << __aux64__ << ")";
                                    }
                                if(*_ext_flag_3960) { // from ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f]. 
                                    uint8_t* _tmp_8913 = (uint8_t*) buffer++;  // number of extensions
                                    bool _array_106[*_tmp_8913];
                                    
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m007924\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].trailer_data_set[0].elements[f].: " << static_cast<unsigned int>(*_tmp_8913);
                                    
                                    // Extensions bytemap
                                    for(int i = 0; i < *_tmp_8913; i++)
                                        _array_106[i] = (*buffer++) != 0;
                                    
                                    // Discarding unknown OpenType containers
                                    for(int i = 0; i < *_tmp_8913; i++) {
                                        uint16_t* _tmp_8914 = (uint16_t*)buffer;  // OpenType length
                                        buffer += 2;
                                    
                                        if(debug) {
                                        }
                                    
                                        for(int i = 0; i < *_tmp_8914; i++)
                                            buffer++;
                                    }
                                    
                                }
                        }
                    }
                    if(*_ext_flag_3952) { // from ros->payload.cpm_containers.elements[e].originating_vehicle_container[0]. 
                        uint8_t* _tmp_8915 = (uint8_t*) buffer++;  // number of extensions
                        bool _array_107[*_tmp_8915];
                        
                        if(debug)
                            logger->debug() << "|\033[38;5;94m007925\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[e].originating_vehicle_container[0].: " << static_cast<unsigned int>(*_tmp_8915);
                        
                        // Extensions bytemap
                        for(int i = 0; i < *_tmp_8915; i++)
                            _array_107[i] = (*buffer++) != 0;
                        
                        // Discarding unknown OpenType containers
                        for(int i = 0; i < *_tmp_8915; i++) {
                            uint16_t* _tmp_8916 = (uint16_t*)buffer;  // OpenType length
                            buffer += 2;
                        
                            if(debug) {
                            }
                        
                            for(int i = 0; i < *_tmp_8916; i++)
                                buffer++;
                        }
                        
                    }
            }
            else if(_choice_287 == 1)  // CHOICE WrappedCpmContainer  fieldName(originating_rsu_container)
            {
                cpm_v2_23_cpm_originatingstationcontainers_msgs::OriginatingRsuContainer _tmp_8917;
                ros->payload.cpm_containers.elements[e].originating_rsu_container.push_back(_tmp_8917);
            
                    // OriginatingRsuContainer  SEQUENCE
                        //  mapReference MapReference   OPTIONAL  
                        //  ...
                    uint8_t* _ext_flag_3967 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].originating_rsu_container[0].
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m007926\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].originating_rsu_container[0].: " << int(*_ext_flag_3967);
                    }
                    
                    if(*(buffer++)) { 
                        its_container_v3_etsi_its_cdd_msgs::MapReference _tmp_8918;
                        ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference.push_back(_tmp_8918);
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m007927\033[0m| ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference " << tools::green("present");
                    }
                    
                    if(ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference.size() != 0) {
                        // Field name: map_reference
                        // Choice
                           // #0  roadsegment   RoadSegmentReferenceId   
                           // #1  intersection   IntersectionReferenceId   
                        uint8_t _choice_288 = *(buffer++);
                        
                        if(_choice_288 == 0) {
                            its_container_v3_etsi_its_cdd_msgs::RoadSegmentReferenceId _tmp_8919;
                            ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].roadsegment.push_back(_tmp_8919);
                        
                                // RoadSegmentReferenceId  SEQUENCE
                                    //  region     Identifier2B   OPTIONAL  
                                    //  id         Identifier2B     
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::Identifier2B _tmp_8920;
                                    ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].roadsegment[0].region.push_back(_tmp_8920);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m007928\033[0m| ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].roadsegment[0].region " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].roadsegment[0].region.size() != 0) {
                                    // Field name: region
                                    // Integer
                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                    uint16_t* _tmp_8921 = (uint16_t*) buffer; buffer += 2;
                                    __aux64__ = *_tmp_8921;
                                    ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m007929\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value) << 
                                                     " payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value: " << ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value;
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                        return false;
                                    }
                                }
                                
                                // Field name: id
                                // Integer
                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                uint16_t* _tmp_8922 = (uint16_t*) buffer; buffer += 2;
                                __aux64__ = *_tmp_8922;
                                ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m007930\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value) << 
                                                 " payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value: " << ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                        }
                        else if(_choice_288 == 1)  // CHOICE MapReference  fieldName(intersection)
                        {
                            its_container_v3_etsi_its_cdd_msgs::IntersectionReferenceId _tmp_8923;
                            ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].intersection.push_back(_tmp_8923);
                        
                                // IntersectionReferenceId  SEQUENCE
                                    //  region     Identifier2B   OPTIONAL  
                                    //  id         Identifier2B     
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::Identifier2B _tmp_8924;
                                    ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].intersection[0].region.push_back(_tmp_8924);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m007931\033[0m| ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].intersection[0].region " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].intersection[0].region.size() != 0) {
                                    // Field name: region
                                    // Integer
                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                    uint16_t* _tmp_8925 = (uint16_t*) buffer; buffer += 2;
                                    __aux64__ = *_tmp_8925;
                                    ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m007932\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value) << 
                                                     " payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value: " << ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value;
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                        return false;
                                    }
                                }
                                
                                // Field name: id
                                // Integer
                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                uint16_t* _tmp_8926 = (uint16_t*) buffer; buffer += 2;
                                __aux64__ = *_tmp_8926;
                                ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].intersection[0].id.value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m007933\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].intersection[0].id.value) << 
                                                 " payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].intersection[0].id.value: " << ros->payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].intersection[0].id.value;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                        }
                        else
                        {
                            logger->warning() << "Wrong option (" << static_cast<int>(_choice_288) << ") selected in CHOICE MapReference in 'payload.cpm_containers.elements[e].originating_rsu_container[0].map_reference[0]'; message dropped.";
                            return false;
                        }
                    }
                    if(*_ext_flag_3967) { // from ros->payload.cpm_containers.elements[e].originating_rsu_container[0]. 
                        uint8_t* _tmp_8927 = (uint8_t*) buffer++;  // number of extensions
                        bool _array_108[*_tmp_8927];
                        
                        if(debug)
                            logger->debug() << "|\033[38;5;94m007934\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[e].originating_rsu_container[0].: " << static_cast<unsigned int>(*_tmp_8927);
                        
                        // Extensions bytemap
                        for(int i = 0; i < *_tmp_8927; i++)
                            _array_108[i] = (*buffer++) != 0;
                        
                        // Discarding unknown OpenType containers
                        for(int i = 0; i < *_tmp_8927; i++) {
                            uint16_t* _tmp_8928 = (uint16_t*)buffer;  // OpenType length
                            buffer += 2;
                        
                            if(debug) {
                            }
                        
                            for(int i = 0; i < *_tmp_8928; i++)
                                buffer++;
                        }
                        
                    }
            }
            else if(_choice_287 == 2)  // CHOICE WrappedCpmContainer  fieldName(sensor_information_container)
            {
                cpm_v2_23_cpm_sensorinformationcontainer_msgs::SensorInformationContainer _tmp_8929;
                ros->payload.cpm_containers.elements[e].sensor_information_container.push_back(_tmp_8929);
            
                // SequenceOf
                // Data Type UInt8
                // SEQUENCE_OF  min(1) max(128) span(128)
                uint8_t* _ext_flag_3969 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].sensor_information_container[0].
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m007935\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].sensor_information_container[0].: " << int(*_ext_flag_3969);
                }
                
                int16_t* _tmp_8930 = (int16_t*)buffer;
                buffer += 2;
                __aux64__ = *_tmp_8930;
                __aux64__ += 1;     // +min
                
                int _if__tmp_8930 = __aux64__;
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m007936\033[0m| SequenceOf ros->payload.cpm_containers.elements[e].sensor_information_container[0]. size: " << int(*_tmp_8930);
                }
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 128) {
                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].value' " << (__aux64__) << " exceeds max allowable (128); message dropped.";
                    return false;
                }
                
                
                for(int g = 0; g < _if__tmp_8930; g++) {
                    cpm_v2_23_cpm_sensorinformationcontainer_msgs::SensorInformation seqof_g;  // SEQUENCE
                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements.push_back(seqof_g);
                
                        // SensorInformation  SEQUENCE
                            //  sensorId                   Identifier1B                           
                            //  sensorType                 SensorType                             
                            //  perceptionRegionShape      Shape                                OPTIONAL  
                            //  perceptionRegionConfidence ConfidenceLevel                      OPTIONAL  
                            //  shadowingApplies           SensorInformation_shadowingApplies     
                            //  ...
                        uint8_t* _ext_flag_3970 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m007937\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].: " << int(*_ext_flag_3970);
                        }
                        
                        if(*(buffer++)) { 
                            its_container_v3_etsi_its_cdd_msgs::Shape _tmp_8931;
                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape.push_back(_tmp_8931);
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m007938\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v3_etsi_its_cdd_msgs::ConfidenceLevel _tmp_8932;
                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_confidence.push_back(_tmp_8932);
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m007939\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_confidence " << tools::green("present");
                        }
                        
                        // Field name: sensor_id
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_8933 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_8933;
                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].sensor_id.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m007940\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].sensor_id.value) << 
                                         " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].sensor_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].sensor_id.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].sensor_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].sensor_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                        
                        // Field name: sensor_type
                        // Integer
                        // UINT8  min(0) max(31) span(32) datatype(UInt8)
                        uint8_t* _tmp_8934 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_8934;
                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].sensor_type.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m007941\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].sensor_type.value) << 
                                         " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].sensor_type.value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].sensor_type.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].sensor_type.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 31) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].sensor_type.value' " << (__aux64__) << " exceeds max allowable (31); message dropped.";
                            return false;
                        }
                        
                        if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape.size() != 0) {
                            // Field name: perception_region_shape
                            // Choice
                            uint8_t* _ext_flag_3971 = (uint8_t*)buffer++; // ext flag
                            
                               // #0  rectangular   RectangularShape   
                               // #1  circular   CircularShape   
                               // #2  polygonal   PolygonalShape   
                               // #3  elliptical   EllipticalShape   
                               // #4  radial   RadialShape   
                               // #5  radialShapes   RadialShapes   
                            uint8_t _choice_289 = *(buffer++);
                            
                            if(*_ext_flag_3971)
                                _choice_289 += 5 + 1; // Ext addition
                            
                            if(_choice_289 == 0) {
                                its_container_v3_etsi_its_cdd_msgs::RectangularShape _tmp_8935;
                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular.push_back(_tmp_8935);
                            
                                    // RectangularShape  SEQUENCE
                                        //  centerPoint CartesianPosition3d   OPTIONAL  
                                        //  semiLength  StandardLength12b       
                                        //  semiBreadth StandardLength12b       
                                        //  orientation Wgs84AngleValue       OPTIONAL  
                                        //  height      StandardLength12b     OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_8936;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point.push_back(_tmp_8936);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m007942\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::Wgs84AngleValue _tmp_8937;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].orientation.push_back(_tmp_8937);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m007943\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].orientation " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_8938;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].height.push_back(_tmp_8938);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m007944\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].height " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point.size() != 0) {
                                        // Field name: center_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_8939;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate.push_back(_tmp_8939);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m007945\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_8940 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value = *_tmp_8940;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m007946\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_8941 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value = *_tmp_8941;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m007947\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_8942 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value = *_tmp_8942;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m007948\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: semi_length
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_8943 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].semi_length.value = *_tmp_8943;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].semi_length.value;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].semi_length.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m007949\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].semi_length.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].semi_length: " <<
                                                     ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].semi_length.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: semi_breadth
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_8944 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].semi_breadth.value = *_tmp_8944;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].semi_breadth.value;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].semi_breadth.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m007950\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].semi_breadth.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].semi_breadth: " <<
                                                     ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].semi_breadth.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].orientation.size() != 0) {
                                        // Field name: orientation
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_8945 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].orientation[0].value = *_tmp_8945;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].orientation[0].value;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].orientation[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m007951\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].orientation[0].value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].orientation[0]: " <<
                                                         ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].orientation[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].height.size() != 0) {
                                        // Field name: height
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_8946 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].height[0].value = *_tmp_8946;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].height[0].value;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].height[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m007952\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].height[0].value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].height[0]: " <<
                                                         ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].rectangular[0].height[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_289 == 1)  // CHOICE Shape  fieldName(circular)
                            {
                                its_container_v3_etsi_its_cdd_msgs::CircularShape _tmp_8947;
                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular.push_back(_tmp_8947);
                            
                                    // CircularShape  SEQUENCE
                                        //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                        //  radius              StandardLength12b       
                                        //  height              StandardLength12b     OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_8948;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point.push_back(_tmp_8948);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m007953\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_8949;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].height.push_back(_tmp_8949);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m007954\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].height " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point.size() != 0) {
                                        // Field name: shape_reference_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_8950;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate.push_back(_tmp_8950);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m007955\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_8951 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value = *_tmp_8951;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m007956\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_8952 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value = *_tmp_8952;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m007957\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_8953 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_8953;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m007958\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: radius
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_8954 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].radius.value = *_tmp_8954;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].radius.value;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].radius.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].radius.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].radius.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m007959\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].radius.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].radius: " <<
                                                     ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].radius.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].height.size() != 0) {
                                        // Field name: height
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_8955 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].height[0].value = *_tmp_8955;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].height[0].value;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].height[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m007960\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].height[0].value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].height[0]: " <<
                                                         ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].circular[0].height[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_289 == 2)  // CHOICE Shape  fieldName(polygonal)
                            {
                                its_container_v3_etsi_its_cdd_msgs::PolygonalShape _tmp_8956;
                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal.push_back(_tmp_8956);
                            
                                    // PolygonalShape  SEQUENCE
                                        //  shapeReferencePoint CartesianPosition3d             OPTIONAL  
                                        //  polygon             SequenceOfCartesianPosition3d     
                                        //  height              StandardLength12b               OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_8957;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point.push_back(_tmp_8957);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m007961\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_8958;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].height.push_back(_tmp_8958);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m007962\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].height " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point.size() != 0) {
                                        // Field name: shape_reference_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_8959;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.push_back(_tmp_8959);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m007963\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_8960 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value = *_tmp_8960;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m007964\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_8961 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value = *_tmp_8961;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m007965\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_8962 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_8962;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m007966\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: polygon
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(1) max(16) span(16)
                                    uint8_t* _ext_flag_3987 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m007967\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.: " << int(*_ext_flag_3987);
                                    }
                                    
                                    int16_t* _tmp_8963 = (int16_t*)buffer;
                                    buffer += 2;
                                    __aux64__ = *_tmp_8963;
                                    __aux64__ += 1;     // +min
                                    
                                    int _if__tmp_8963 = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m007968\033[0m| SequenceOf ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon. size: " << int(*_tmp_8963);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    for(int h = 0; h < _if__tmp_8963; h++) {
                                        its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d seqof_h;  // SEQUENCE
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements.push_back(seqof_h);
                                    
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_8964;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].z_coordinate.push_back(_tmp_8964);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m007969\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_8965 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].x_coordinate.value = *_tmp_8965;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m007970\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].x_coordinate.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_8966 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].y_coordinate.value = *_tmp_8966;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m007971\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].y_coordinate.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_8967 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].z_coordinate[0].value = *_tmp_8967;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m007972\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].z_coordinate[0].value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].polygon.elements[h].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].height.size() != 0) {
                                        // Field name: height
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_8968 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].height[0].value = *_tmp_8968;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].height[0].value;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].height[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m007973\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].height[0].value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].height[0]: " <<
                                                         ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].polygonal[0].height[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_289 == 3)  // CHOICE Shape  fieldName(elliptical)
                            {
                                its_container_v3_etsi_its_cdd_msgs::EllipticalShape _tmp_8969;
                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical.push_back(_tmp_8969);
                            
                                    // EllipticalShape  SEQUENCE
                                        //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                        //  semiMajorAxisLength StandardLength12b       
                                        //  semiMinorAxisLength StandardLength12b       
                                        //  orientation         Wgs84AngleValue       OPTIONAL  
                                        //  height              StandardLength12b     OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_8970;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point.push_back(_tmp_8970);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m007974\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::Wgs84AngleValue _tmp_8971;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].orientation.push_back(_tmp_8971);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m007975\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].orientation " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_8972;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].height.push_back(_tmp_8972);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m007976\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].height " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point.size() != 0) {
                                        // Field name: shape_reference_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_8973;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.push_back(_tmp_8973);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m007977\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_8974 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value = *_tmp_8974;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m007978\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_8975 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value = *_tmp_8975;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m007979\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_8976 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_8976;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m007980\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: semi_major_axis_length
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_8977 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].semi_major_axis_length.value = *_tmp_8977;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].semi_major_axis_length.value;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].semi_major_axis_length.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m007981\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].semi_major_axis_length.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].semi_major_axis_length: " <<
                                                     ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].semi_major_axis_length.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: semi_minor_axis_length
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_8978 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value = *_tmp_8978;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m007982\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].semi_minor_axis_length: " <<
                                                     ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].orientation.size() != 0) {
                                        // Field name: orientation
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_8979 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].orientation[0].value = *_tmp_8979;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].orientation[0].value;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].orientation[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m007983\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].orientation[0].value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].orientation[0]: " <<
                                                         ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].orientation[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].height.size() != 0) {
                                        // Field name: height
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_8980 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].height[0].value = *_tmp_8980;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].height[0].value;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].height[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m007984\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].height[0].value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].height[0]: " <<
                                                         ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].elliptical[0].height[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_289 == 4)  // CHOICE Shape  fieldName(radial)
                            {
                                its_container_v3_etsi_its_cdd_msgs::RadialShape _tmp_8981;
                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial.push_back(_tmp_8981);
                            
                                    // RadialShape  SEQUENCE
                                        //  shapeReferencePoint                   CartesianPosition3d   OPTIONAL  
                                        //  range                                 StandardLength12b       
                                        //  stationaryHorizontalOpeningAngleStart Wgs84AngleValue         
                                        //  stationaryHorizontalOpeningAngleEnd   Wgs84AngleValue         
                                        //  verticalOpeningAngleStart             CartesianAngleValue   OPTIONAL  
                                        //  verticalOpeningAngleEnd               CartesianAngleValue   OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_8982;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point.push_back(_tmp_8982);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m007985\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_8983;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_start.push_back(_tmp_8983);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m007986\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_start " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_8984;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_end.push_back(_tmp_8984);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m007987\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_end " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point.size() != 0) {
                                        // Field name: shape_reference_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_8985;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate.push_back(_tmp_8985);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m007988\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_8986 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value = *_tmp_8986;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m007989\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_8987 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value = *_tmp_8987;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m007990\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_8988 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_8988;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m007991\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: range
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_8989 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].range.value = *_tmp_8989;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].range.value;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].range.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m007992\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].range.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].range: " <<
                                                     ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].range.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: stationary_horizontal_opening_angle_start
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_8990 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value = *_tmp_8990;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m007993\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start: " <<
                                                     ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: stationary_horizontal_opening_angle_end
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_8991 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value = *_tmp_8991;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m007994\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end: " <<
                                                     ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_start.size() != 0) {
                                        // Field name: vertical_opening_angle_start
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_8992 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value = *_tmp_8992;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m007995\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_start[0]: " <<
                                                         ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_end.size() != 0) {
                                        // Field name: vertical_opening_angle_end
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_8993 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value = *_tmp_8993;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m007996\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_end[0]: " <<
                                                         ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_289 == 5)  // CHOICE Shape  fieldName(radial_shapes)
                            {
                                its_container_v3_etsi_its_cdd_msgs::RadialShapes _tmp_8994;
                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes.push_back(_tmp_8994);
                            
                                    // RadialShapes  SEQUENCE
                                        //  refPointId       Identifier1B                 
                                        //  xCoordinate      CartesianCoordinateSmall     
                                        //  yCoordinate      CartesianCoordinateSmall     
                                        //  zCoordinate      CartesianCoordinateSmall   OPTIONAL  
                                        //  radialShapesList RadialShapesList             
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::CartesianCoordinateSmall _tmp_8995;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].z_coordinate.push_back(_tmp_8995);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m007997\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].z_coordinate " << tools::green("present");
                                    }
                                    
                                    // Field name: ref_point_id
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_8996 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_8996;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].ref_point_id.value = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m007998\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].ref_point_id.value) << 
                                                     " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].ref_point_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].ref_point_id.value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                    
                                    // Field name: x_coordinate
                                    // Real
                                    // Float
                                    // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_8997 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].x_coordinate.value = *_tmp_8997;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].x_coordinate.value += -3094;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].x_coordinate.value;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].x_coordinate.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m007999\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].x_coordinate.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].x_coordinate: " <<
                                                     ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].x_coordinate.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: y_coordinate
                                    // Real
                                    // Float
                                    // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_8998 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].y_coordinate.value = *_tmp_8998;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].y_coordinate.value += -3094;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].y_coordinate.value;
                                    ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].y_coordinate.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008000\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].y_coordinate.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].y_coordinate: " <<
                                                     ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].y_coordinate.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].z_coordinate.size() != 0) {
                                        // Field name: z_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_8999 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value = *_tmp_8999;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value += -3094;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value;
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008001\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].z_coordinate[0]: " <<
                                                         ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                                    
                                    // Field name: radial_shapes_list
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(1) max(16) span(16)
                                    uint8_t* _ext_flag_4010 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008002\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.: " << int(*_ext_flag_4010);
                                    }
                                    
                                    int16_t* _tmp_9000 = (int16_t*)buffer;
                                    buffer += 2;
                                    __aux64__ = *_tmp_9000;
                                    __aux64__ += 1;     // +min
                                    
                                    int _if__tmp_9000 = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008003\033[0m| SequenceOf ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list. size: " << int(*_tmp_9000);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    for(int i = 0; i < _if__tmp_9000; i++) {
                                        its_container_v3_etsi_its_cdd_msgs::RadialShapeDetails seqof_i;  // SEQUENCE
                                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements.push_back(seqof_i);
                                    
                                            // RadialShapeDetails  SEQUENCE
                                                //  range                       StandardLength12b       
                                                //  horizontalOpeningAngleStart CartesianAngleValue     
                                                //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                                //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                                //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_9001;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_start.push_back(_tmp_9001);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m008004\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_start " << tools::green("present");
                                            }
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_9002;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_end.push_back(_tmp_9002);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m008005\033[0m| ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_end " << tools::green("present");
                                            }
                                            
                                            // Field name: range
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_9003 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].range.value = *_tmp_9003;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].range.value;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].range.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008006\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].range.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].range: " <<
                                                             ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].range.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: horizontal_opening_angle_start
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_9004 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].horizontal_opening_angle_start.value = *_tmp_9004;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].horizontal_opening_angle_start.value;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].horizontal_opening_angle_start.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008007\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].horizontal_opening_angle_start: " <<
                                                             ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: horizontal_opening_angle_end
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_9005 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].horizontal_opening_angle_end.value = *_tmp_9005;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].horizontal_opening_angle_end.value;
                                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].horizontal_opening_angle_end.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008008\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].horizontal_opening_angle_end: " <<
                                                             ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_start.size() != 0) {
                                                // Field name: vertical_opening_angle_start
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_9006 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_start[0].value = *_tmp_9006;
                                                __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_start[0].value;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_start[0].value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008009\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_start[0]: " <<
                                                                 ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_end.size() != 0) {
                                                // Field name: vertical_opening_angle_end
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_9007 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_end[0].value = *_tmp_9007;
                                                __aux64__ = ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_end[0].value;
                                                ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_end[0].value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008010\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_end[0]: " <<
                                                                 ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[i].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                            }
                            else
                            {
                                uint16_t* _tmp_9008 = (uint16_t*)buffer;  // OpenType length
                                buffer += 2 + int(*_tmp_9008);            // Ignoring opentype data
                            }
                        }
                        
                        if(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_confidence.size() != 0) {
                            // Field name: perception_region_confidence
                            // Integer
                            // UINT8  min(1) max(101) span(101) datatype(UInt8)
                            uint8_t* _tmp_9009 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_9009;
                            __aux64__ += 1;
                            ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_confidence[0].value = __aux64__;
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m008011\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_confidence[0].value) << 
                                             " payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_confidence[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_confidence[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_confidence[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 101) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].perception_region_confidence[0].value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                                return false;
                            }
                        }
                        
                        // Field name: shadowing_applies
                        // Value
                        // Boolean
                        uint8_t* _tmp_9010 = (uint8_t*)buffer;
                        buffer++;
                        ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].shadowing_applies.value = (*_tmp_9010 == 1);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m008012\033[0m| \033[37;1mbool  \033[0m ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].shadowing_applies.: " << (*_tmp_9010);
                        if(*_ext_flag_3970) { // from ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g]. 
                            uint8_t* _tmp_9011 = (uint8_t*) buffer++;  // number of extensions
                            bool _array_109[*_tmp_9011];
                            
                            if(debug)
                                logger->debug() << "|\033[38;5;94m008013\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[e].sensor_information_container[0].elements[g].: " << static_cast<unsigned int>(*_tmp_9011);
                            
                            // Extensions bytemap
                            for(int i = 0; i < *_tmp_9011; i++)
                                _array_109[i] = (*buffer++) != 0;
                            
                            // Discarding unknown OpenType containers
                            for(int i = 0; i < *_tmp_9011; i++) {
                                uint16_t* _tmp_9012 = (uint16_t*)buffer;  // OpenType length
                                buffer += 2;
                            
                                if(debug) {
                                }
                            
                                for(int i = 0; i < *_tmp_9012; i++)
                                    buffer++;
                            }
                            
                        }
                }
            }
            else if(_choice_287 == 3)  // CHOICE WrappedCpmContainer  fieldName(perception_region_container)
            {
                cpm_v2_23_cpm_perceptionregioncontainer_msgs::PerceptionRegionContainer _tmp_9013;
                ros->payload.cpm_containers.elements[e].perception_region_container.push_back(_tmp_9013);
            
                // SequenceOf
                // Data Type UInt16
                // SEQUENCE_OF  min(1) max(256) span(256)
                uint8_t* _ext_flag_4016 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].perception_region_container[0].
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m008014\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].perception_region_container[0].: " << int(*_ext_flag_4016);
                }
                
                int16_t* _tmp_9014 = (int16_t*)buffer;
                buffer += 2;
                __aux64__ = *_tmp_9014;
                __aux64__ += 1;     // +min
                
                int _if__tmp_9014 = __aux64__;
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m008015\033[0m| SequenceOf ros->payload.cpm_containers.elements[e].perception_region_container[0]. size: " << int(*_tmp_9014);
                }
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 256) {
                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                    return false;
                }
                
                
                for(int j = 0; j < _if__tmp_9014; j++) {
                    cpm_v2_23_cpm_perceptionregioncontainer_msgs::PerceptionRegion seqof_j;  // SEQUENCE
                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements.push_back(seqof_j);
                
                        // PerceptionRegion  SEQUENCE
                            //  measurementDeltaTime       DeltaTimeMilliSecondSigned            
                            //  perceptionRegionConfidence ConfidenceLevel                       
                            //  perceptionRegionShape      Shape                                 
                            //  shadowingApplies           PerceptionRegion_shadowingApplies     
                            //  sensorIdList               SequenceOfIdentifier1B              OPTIONAL  
                            //  numberOfPerceivedObjects   CardinalNumber1B                    OPTIONAL  
                            //  perceivedObjectIds         PerceivedObjectIds                  OPTIONAL  
                            //  ...
                        uint8_t* _ext_flag_4017 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m008016\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].: " << int(*_ext_flag_4017);
                        }
                        
                        if(*(buffer++)) { 
                            its_container_v3_etsi_its_cdd_msgs::SequenceOfIdentifier1B _tmp_9015;
                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].sensor_id_list.push_back(_tmp_9015);
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m008017\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].sensor_id_list " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v3_etsi_its_cdd_msgs::CardinalNumber1B _tmp_9016;
                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].number_of_perceived_objects.push_back(_tmp_9016);
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m008018\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].number_of_perceived_objects " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            cpm_v2_23_cpm_perceptionregioncontainer_msgs::PerceivedObjectIds _tmp_9017;
                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perceived_object_ids.push_back(_tmp_9017);
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m008019\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perceived_object_ids " << tools::green("present");
                        }
                        
                        // Field name: measurement_delta_time
                        // Real
                        // Float
                        // FLOAT  min(-2048) max(2047) span(4096) scaleDivisor(1000.0) dataType(Float)
                        uint16_t* _tmp_9018 = (uint16_t*) buffer; buffer += 2;
                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].measurement_delta_time.value = *_tmp_9018;
                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].measurement_delta_time.value += -2048;
                        __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].measurement_delta_time.value;
                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].measurement_delta_time.value /= 1000.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < -2048) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].measurement_delta_time.value' " << (__aux64__) << " is less than allowable (-2048); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 2047) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].measurement_delta_time.value' " << (__aux64__) << " exceeds max allowable (2047); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m008020\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].measurement_delta_time.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].measurement_delta_time: " <<
                                         ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].measurement_delta_time.value << " (" << __aux64__ << ")";
                        }
                        
                        // Field name: perception_region_confidence
                        // Integer
                        // UINT8  min(1) max(101) span(101) datatype(UInt8)
                        uint8_t* _tmp_9019 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_9019;
                        __aux64__ += 1;
                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_confidence.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m008021\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_confidence.value) << 
                                         " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_confidence.value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_confidence.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 101) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_confidence.value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                            return false;
                        }
                        
                        // Field name: perception_region_shape
                        // Choice
                        uint8_t* _ext_flag_4019 = (uint8_t*)buffer++; // ext flag
                        
                           // #0  rectangular   RectangularShape   
                           // #1  circular   CircularShape   
                           // #2  polygonal   PolygonalShape   
                           // #3  elliptical   EllipticalShape   
                           // #4  radial   RadialShape   
                           // #5  radialShapes   RadialShapes   
                        uint8_t _choice_290 = *(buffer++);
                        
                        if(*_ext_flag_4019)
                            _choice_290 += 5 + 1; // Ext addition
                        
                        if(_choice_290 == 0) {
                            its_container_v3_etsi_its_cdd_msgs::RectangularShape _tmp_9020;
                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular.push_back(_tmp_9020);
                        
                                // RectangularShape  SEQUENCE
                                    //  centerPoint CartesianPosition3d   OPTIONAL  
                                    //  semiLength  StandardLength12b       
                                    //  semiBreadth StandardLength12b       
                                    //  orientation Wgs84AngleValue       OPTIONAL  
                                    //  height      StandardLength12b     OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_9021;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point.push_back(_tmp_9021);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008022\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::Wgs84AngleValue _tmp_9022;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].orientation.push_back(_tmp_9022);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008023\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].orientation " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_9023;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].height.push_back(_tmp_9023);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008024\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].height " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point.size() != 0) {
                                    // Field name: center_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_9024;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].z_coordinate.push_back(_tmp_9024);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008025\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_9025 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value = *_tmp_9025;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008026\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_9026 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value = *_tmp_9026;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008027\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_9027 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value = *_tmp_9027;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008028\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: semi_length
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_9028 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].semi_length.value = *_tmp_9028;
                                __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].semi_length.value;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].semi_length.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].semi_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].semi_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008029\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].semi_length.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].semi_length: " <<
                                                 ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].semi_length.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: semi_breadth
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_9029 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].semi_breadth.value = *_tmp_9029;
                                __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].semi_breadth.value;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].semi_breadth.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].semi_breadth.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].semi_breadth.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008030\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].semi_breadth.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].semi_breadth: " <<
                                                 ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].semi_breadth.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].orientation.size() != 0) {
                                    // Field name: orientation
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_9030 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].orientation[0].value = *_tmp_9030;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].orientation[0].value;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].orientation[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008031\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].orientation[0].value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].orientation[0]: " <<
                                                     ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].orientation[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].height.size() != 0) {
                                    // Field name: height
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_9031 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].height[0].value = *_tmp_9031;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].height[0].value;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].height[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008032\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].height[0].value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].height[0]: " <<
                                                     ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.rectangular[0].height[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_290 == 1)  // CHOICE Shape  fieldName(circular)
                        {
                            its_container_v3_etsi_its_cdd_msgs::CircularShape _tmp_9032;
                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular.push_back(_tmp_9032);
                        
                                // CircularShape  SEQUENCE
                                    //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                    //  radius              StandardLength12b       
                                    //  height              StandardLength12b     OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_9033;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point.push_back(_tmp_9033);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008033\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_9034;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].height.push_back(_tmp_9034);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008034\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].height " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point.size() != 0) {
                                    // Field name: shape_reference_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_9035;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate.push_back(_tmp_9035);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008035\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_9036 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value = *_tmp_9036;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008036\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_9037 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value = *_tmp_9037;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008037\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_9038 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_9038;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008038\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: radius
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_9039 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].radius.value = *_tmp_9039;
                                __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].radius.value;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].radius.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].radius.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].radius.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008039\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].radius.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].radius: " <<
                                                 ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].radius.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].height.size() != 0) {
                                    // Field name: height
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_9040 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].height[0].value = *_tmp_9040;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].height[0].value;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].height[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008040\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].height[0].value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].height[0]: " <<
                                                     ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.circular[0].height[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_290 == 2)  // CHOICE Shape  fieldName(polygonal)
                        {
                            its_container_v3_etsi_its_cdd_msgs::PolygonalShape _tmp_9041;
                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal.push_back(_tmp_9041);
                        
                                // PolygonalShape  SEQUENCE
                                    //  shapeReferencePoint CartesianPosition3d             OPTIONAL  
                                    //  polygon             SequenceOfCartesianPosition3d     
                                    //  height              StandardLength12b               OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_9042;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point.push_back(_tmp_9042);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008041\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_9043;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].height.push_back(_tmp_9043);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008042\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].height " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point.size() != 0) {
                                    // Field name: shape_reference_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_9044;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate.push_back(_tmp_9044);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008043\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_9045 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value = *_tmp_9045;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008044\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_9046 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value = *_tmp_9046;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008045\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_9047 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_9047;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008046\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: polygon
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(16) span(16)
                                uint8_t* _ext_flag_4035 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008047\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.: " << int(*_ext_flag_4035);
                                }
                                
                                int16_t* _tmp_9048 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_9048;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_9048 = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008048\033[0m| SequenceOf ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon. size: " << int(*_tmp_9048);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int k = 0; k < _if__tmp_9048; k++) {
                                    its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d seqof_k;  // SEQUENCE
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements.push_back(seqof_k);
                                
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_9049;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].z_coordinate.push_back(_tmp_9049);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008049\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_9050 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].x_coordinate.value = *_tmp_9050;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008050\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].x_coordinate.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_9051 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].y_coordinate.value = *_tmp_9051;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008051\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].y_coordinate.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_9052 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].z_coordinate[0].value = *_tmp_9052;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008052\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].z_coordinate[0].value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].polygon.elements[k].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].height.size() != 0) {
                                    // Field name: height
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_9053 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].height[0].value = *_tmp_9053;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].height[0].value;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].height[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008053\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].height[0].value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].height[0]: " <<
                                                     ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.polygonal[0].height[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_290 == 3)  // CHOICE Shape  fieldName(elliptical)
                        {
                            its_container_v3_etsi_its_cdd_msgs::EllipticalShape _tmp_9054;
                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical.push_back(_tmp_9054);
                        
                                // EllipticalShape  SEQUENCE
                                    //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                    //  semiMajorAxisLength StandardLength12b       
                                    //  semiMinorAxisLength StandardLength12b       
                                    //  orientation         Wgs84AngleValue       OPTIONAL  
                                    //  height              StandardLength12b     OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_9055;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point.push_back(_tmp_9055);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008054\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::Wgs84AngleValue _tmp_9056;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].orientation.push_back(_tmp_9056);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008055\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].orientation " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_9057;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].height.push_back(_tmp_9057);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008056\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].height " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point.size() != 0) {
                                    // Field name: shape_reference_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_9058;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate.push_back(_tmp_9058);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008057\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_9059 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value = *_tmp_9059;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008058\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_9060 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value = *_tmp_9060;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008059\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_9061 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_9061;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008060\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: semi_major_axis_length
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_9062 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].semi_major_axis_length.value = *_tmp_9062;
                                __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].semi_major_axis_length.value;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].semi_major_axis_length.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008061\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].semi_major_axis_length.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].semi_major_axis_length: " <<
                                                 ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].semi_major_axis_length.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: semi_minor_axis_length
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_9063 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].semi_minor_axis_length.value = *_tmp_9063;
                                __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].semi_minor_axis_length.value;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].semi_minor_axis_length.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008062\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].semi_minor_axis_length.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].semi_minor_axis_length: " <<
                                                 ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].semi_minor_axis_length.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].orientation.size() != 0) {
                                    // Field name: orientation
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_9064 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].orientation[0].value = *_tmp_9064;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].orientation[0].value;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].orientation[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008063\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].orientation[0].value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].orientation[0]: " <<
                                                     ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].orientation[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].height.size() != 0) {
                                    // Field name: height
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_9065 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].height[0].value = *_tmp_9065;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].height[0].value;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].height[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008064\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].height[0].value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].height[0]: " <<
                                                     ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.elliptical[0].height[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_290 == 4)  // CHOICE Shape  fieldName(radial)
                        {
                            its_container_v3_etsi_its_cdd_msgs::RadialShape _tmp_9066;
                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial.push_back(_tmp_9066);
                        
                                // RadialShape  SEQUENCE
                                    //  shapeReferencePoint                   CartesianPosition3d   OPTIONAL  
                                    //  range                                 StandardLength12b       
                                    //  stationaryHorizontalOpeningAngleStart Wgs84AngleValue         
                                    //  stationaryHorizontalOpeningAngleEnd   Wgs84AngleValue         
                                    //  verticalOpeningAngleStart             CartesianAngleValue   OPTIONAL  
                                    //  verticalOpeningAngleEnd               CartesianAngleValue   OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_9067;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point.push_back(_tmp_9067);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008065\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_9068;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_start.push_back(_tmp_9068);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008066\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_start " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_9069;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_end.push_back(_tmp_9069);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008067\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_end " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point.size() != 0) {
                                    // Field name: shape_reference_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_9070;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate.push_back(_tmp_9070);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008068\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_9071 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value = *_tmp_9071;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008069\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_9072 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value = *_tmp_9072;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008070\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_9073 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_9073;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008071\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: range
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_9074 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].range.value = *_tmp_9074;
                                __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].range.value;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].range.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008072\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].range.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].range: " <<
                                                 ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].range.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: stationary_horizontal_opening_angle_start
                                // Real
                                // Float
                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_9075 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value = *_tmp_9075;
                                __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008073\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start: " <<
                                                 ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: stationary_horizontal_opening_angle_end
                                // Real
                                // Float
                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_9076 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value = *_tmp_9076;
                                __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008074\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end: " <<
                                                 ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_start.size() != 0) {
                                    // Field name: vertical_opening_angle_start
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_9077 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_start[0].value = *_tmp_9077;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_start[0].value;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_start[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008075\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_start[0]: " <<
                                                     ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_end.size() != 0) {
                                    // Field name: vertical_opening_angle_end
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_9078 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_end[0].value = *_tmp_9078;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_end[0].value;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_end[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008076\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_end[0]: " <<
                                                     ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial[0].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_290 == 5)  // CHOICE Shape  fieldName(radial_shapes)
                        {
                            its_container_v3_etsi_its_cdd_msgs::RadialShapes _tmp_9079;
                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes.push_back(_tmp_9079);
                        
                                // RadialShapes  SEQUENCE
                                    //  refPointId       Identifier1B                 
                                    //  xCoordinate      CartesianCoordinateSmall     
                                    //  yCoordinate      CartesianCoordinateSmall     
                                    //  zCoordinate      CartesianCoordinateSmall   OPTIONAL  
                                    //  radialShapesList RadialShapesList             
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::CartesianCoordinateSmall _tmp_9080;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].z_coordinate.push_back(_tmp_9080);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008077\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].z_coordinate " << tools::green("present");
                                }
                                
                                // Field name: ref_point_id
                                // Integer
                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                uint8_t* _tmp_9081 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_9081;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].ref_point_id.value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008078\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].ref_point_id.value) << 
                                                 " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].ref_point_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].ref_point_id.value);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].ref_point_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].ref_point_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                    return false;
                                }
                                
                                // Field name: x_coordinate
                                // Real
                                // Float
                                // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                uint16_t* _tmp_9082 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].x_coordinate.value = *_tmp_9082;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].x_coordinate.value += -3094;
                                __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].x_coordinate.value;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].x_coordinate.value /= 100.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008079\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].x_coordinate.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].x_coordinate: " <<
                                                 ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].x_coordinate.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: y_coordinate
                                // Real
                                // Float
                                // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                uint16_t* _tmp_9083 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].y_coordinate.value = *_tmp_9083;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].y_coordinate.value += -3094;
                                __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].y_coordinate.value;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].y_coordinate.value /= 100.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008080\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].y_coordinate.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].y_coordinate: " <<
                                                 ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].y_coordinate.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].z_coordinate.size() != 0) {
                                    // Field name: z_coordinate
                                    // Real
                                    // Float
                                    // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_9084 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].z_coordinate[0].value = *_tmp_9084;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].z_coordinate[0].value += -3094;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].z_coordinate[0].value;
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].z_coordinate[0].value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008081\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].z_coordinate[0].value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].z_coordinate[0]: " <<
                                                     ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                // Field name: radial_shapes_list
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(16) span(16)
                                uint8_t* _ext_flag_4058 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008082\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.: " << int(*_ext_flag_4058);
                                }
                                
                                int16_t* _tmp_9085 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_9085;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_9085 = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008083\033[0m| SequenceOf ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list. size: " << int(*_tmp_9085);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int l = 0; l < _if__tmp_9085; l++) {
                                    its_container_v3_etsi_its_cdd_msgs::RadialShapeDetails seqof_l;  // SEQUENCE
                                    ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements.push_back(seqof_l);
                                
                                        // RadialShapeDetails  SEQUENCE
                                            //  range                       StandardLength12b       
                                            //  horizontalOpeningAngleStart CartesianAngleValue     
                                            //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                            //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                            //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_9086;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_start.push_back(_tmp_9086);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008084\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_start " << tools::green("present");
                                        }
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_9087;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_end.push_back(_tmp_9087);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008085\033[0m| ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_end " << tools::green("present");
                                        }
                                        
                                        // Field name: range
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_9088 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].range.value = *_tmp_9088;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].range.value;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].range.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008086\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].range.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].range: " <<
                                                         ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].range.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: horizontal_opening_angle_start
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_9089 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].horizontal_opening_angle_start.value = *_tmp_9089;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].horizontal_opening_angle_start.value;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].horizontal_opening_angle_start.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008087\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].horizontal_opening_angle_start: " <<
                                                         ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: horizontal_opening_angle_end
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_9090 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].horizontal_opening_angle_end.value = *_tmp_9090;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].horizontal_opening_angle_end.value;
                                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].horizontal_opening_angle_end.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008088\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].horizontal_opening_angle_end: " <<
                                                         ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_start.size() != 0) {
                                            // Field name: vertical_opening_angle_start
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_9091 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_start[0].value = *_tmp_9091;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_start[0].value;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_start[0].value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008089\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_start[0]: " <<
                                                             ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_end.size() != 0) {
                                            // Field name: vertical_opening_angle_end
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_9092 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_end[0].value = *_tmp_9092;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_end[0].value;
                                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_end[0].value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008090\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_end[0]: " <<
                                                             ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[l].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                        }
                        else
                        {
                            uint16_t* _tmp_9093 = (uint16_t*)buffer;  // OpenType length
                            buffer += 2 + int(*_tmp_9093);            // Ignoring opentype data
                        }
                        
                        // Field name: shadowing_applies
                        // Value
                        // Boolean
                        uint8_t* _tmp_9094 = (uint8_t*)buffer;
                        buffer++;
                        ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].shadowing_applies.value = (*_tmp_9094 == 1);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m008091\033[0m| \033[37;1mbool  \033[0m ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].shadowing_applies.: " << (*_tmp_9094);
                        
                        if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].sensor_id_list.size() != 0) {
                            // Field name: sensor_id_list
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(128) span(128)
                            uint8_t* _ext_flag_4064 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].sensor_id_list[0].
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m008092\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].sensor_id_list[0].: " << int(*_ext_flag_4064);
                            }
                            
                            int16_t* _tmp_9095 = (int16_t*)buffer;
                            buffer += 2;
                            __aux64__ = *_tmp_9095;
                            __aux64__ += 1;     // +min
                            
                            int _if__tmp_9095 = __aux64__;
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m008093\033[0m| SequenceOf ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].sensor_id_list[0]. size: " << int(*_tmp_9095);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].sensor_id_list[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 128) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].sensor_id_list[0].value' " << (__aux64__) << " exceeds max allowable (128); message dropped.";
                                return false;
                            }
                            
                            
                            for(int m = 0; m < _if__tmp_9095; m++) {
                                its_container_v3_etsi_its_cdd_msgs::Identifier1B seqof_m;  // INTEGER
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].sensor_id_list[0].elements.push_back(seqof_m);
                            
                                // Integer
                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                uint8_t* _tmp_9096 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_9096;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].sensor_id_list[0].elements[m].value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008094\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].sensor_id_list[0].elements[m].value) << 
                                                 " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].sensor_id_list[0].elements[m].value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].sensor_id_list[0].elements[m].value);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].sensor_id_list[0].elements[m].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].sensor_id_list[0].elements[m].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                    return false;
                                }
                                
                                
                            }
                        }
                        
                        if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].number_of_perceived_objects.size() != 0) {
                            // Field name: number_of_perceived_objects
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_9097 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_9097;
                            ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].number_of_perceived_objects[0].value = __aux64__;
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m008095\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].number_of_perceived_objects[0].value) << 
                                             " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].number_of_perceived_objects[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].number_of_perceived_objects[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].number_of_perceived_objects[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].number_of_perceived_objects[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        
                        if(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perceived_object_ids.size() != 0) {
                            // Field name: perceived_object_ids
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(0) max(255) span(256)
                            uint8_t* _ext_flag_4065 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perceived_object_ids[0].
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m008096\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perceived_object_ids[0].: " << int(*_ext_flag_4065);
                            }
                            
                            int16_t* _tmp_9098 = (int16_t*)buffer;
                            buffer += 2;
                            __aux64__ = *_tmp_9098;
                            
                            int _if__tmp_9098 = __aux64__;
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m008097\033[0m| SequenceOf ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perceived_object_ids[0]. size: " << int(*_tmp_9098);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perceived_object_ids[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perceived_object_ids[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                            
                            
                            for(int n = 0; n < _if__tmp_9098; n++) {
                                its_container_v3_etsi_its_cdd_msgs::Identifier2B seqof_n;  // INTEGER
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perceived_object_ids[0].elements.push_back(seqof_n);
                            
                                // Integer
                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                uint16_t* _tmp_9099 = (uint16_t*) buffer; buffer += 2;
                                __aux64__ = *_tmp_9099;
                                ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perceived_object_ids[0].elements[n].value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008098\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perceived_object_ids[0].elements[n].value) << 
                                                 " payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perceived_object_ids[0].elements[n].value: " << ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perceived_object_ids[0].elements[n].value;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perceived_object_ids[0].elements[n].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perception_region_container[0].elements[j].perceived_object_ids[0].elements[n].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                                
                                
                            }
                        }
                        if(*_ext_flag_4017) { // from ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j]. 
                            uint8_t* _tmp_9100 = (uint8_t*) buffer++;  // number of extensions
                            bool _array_110[*_tmp_9100];
                            
                            if(debug)
                                logger->debug() << "|\033[38;5;94m008099\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[e].perception_region_container[0].elements[j].: " << static_cast<unsigned int>(*_tmp_9100);
                            
                            // Extensions bytemap
                            for(int i = 0; i < *_tmp_9100; i++)
                                _array_110[i] = (*buffer++) != 0;
                            
                            // Discarding unknown OpenType containers
                            for(int i = 0; i < *_tmp_9100; i++) {
                                uint16_t* _tmp_9101 = (uint16_t*)buffer;  // OpenType length
                                buffer += 2;
                            
                                if(debug) {
                                }
                            
                                for(int i = 0; i < *_tmp_9101; i++)
                                    buffer++;
                            }
                            
                        }
                }
            }
            else if(_choice_287 == 4)  // CHOICE WrappedCpmContainer  fieldName(perceived_object_container)
            {
                cpm_v2_23_cpm_perceivedobjectcontainer_msgs::PerceivedObjectContainer _tmp_9102;
                ros->payload.cpm_containers.elements[e].perceived_object_container.push_back(_tmp_9102);
            
                    // PerceivedObjectContainer  SEQUENCE
                        //  numberOfPerceivedObjects CardinalNumber1B     
                        //  perceivedObjects         PerceivedObjects     
                        //  ...
                    uint8_t* _ext_flag_4066 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].perceived_object_container[0].
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m008100\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].perceived_object_container[0].: " << int(*_ext_flag_4066);
                    }
                    
                    
                    // Field name: number_of_perceived_objects
                    // Integer
                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                    uint8_t* _tmp_9103 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_9103;
                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].number_of_perceived_objects.value = __aux64__;
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m008101\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].number_of_perceived_objects.value) << 
                                     " payload.cpm_containers.elements[e].perceived_object_container[0].number_of_perceived_objects.value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].perceived_object_container[0].number_of_perceived_objects.value);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].number_of_perceived_objects.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].number_of_perceived_objects.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                        return false;
                    }
                    
                    // Field name: perceived_objects
                    // SequenceOf
                    // Data Type UInt8
                    // SEQUENCE_OF  min(0) max(255) span(256)
                    uint8_t* _ext_flag_4067 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m008102\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.: " << int(*_ext_flag_4067);
                    }
                    
                    int16_t* _tmp_9104 = (int16_t*)buffer;
                    buffer += 2;
                    __aux64__ = *_tmp_9104;
                    
                    int _if__tmp_9104 = __aux64__;
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m008103\033[0m| SequenceOf ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects. size: " << int(*_tmp_9104);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                        return false;
                    }
                    
                    
                    for(int o = 0; o < _if__tmp_9104; o++) {
                        its_container_v3_etsi_its_cdd_msgs::PerceivedObject seqof_o;  // SEQUENCE
                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements.push_back(seqof_o);
                    
                            // PerceivedObject  SEQUENCE
                                //  objectId                           Identifier2B                                           OPTIONAL  
                                //  measurementDeltaTime               DeltaTimeMilliSecondSigned                               
                                //  position                           CartesianPosition3dWithConfidence                        
                                //  velocity                           Velocity3dWithConfidence                               OPTIONAL  
                                //  acceleration                       Acceleration3dWithConfidence                           OPTIONAL  
                                //  angles                             EulerAnglesWithConfidence                              OPTIONAL  
                                //  zAngularVelocity                   CartesianAngularVelocityComponent                      OPTIONAL  
                                //  lowerTriangularCorrelationMatrices LowerTriangularPositiveSemidefiniteMatrices            OPTIONAL  
                                //  objectDimensionZ                   ObjectDimension                                        OPTIONAL  
                                //  objectDimensionY                   ObjectDimension                                        OPTIONAL  
                                //  objectDimensionX                   ObjectDimension                                        OPTIONAL  
                                //  objectAge                          PerceivedObject_DeltaTimeMilliSecondSigned_objectAge   OPTIONAL  
                                //  objectPerceptionQuality            ObjectPerceptionQuality                                OPTIONAL  
                                //  sensorIdList                       SequenceOfIdentifier1B                                 OPTIONAL  
                                //  classification                     ObjectClassDescription                                 OPTIONAL  
                                //  mapPosition                        MapPosition                                            OPTIONAL  
                                //  ...
                            uint8_t* _ext_flag_4068 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m008104\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].: " << int(*_ext_flag_4068);
                            }
                            
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::Identifier2B _tmp_9105;
                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_id.push_back(_tmp_9105);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008105\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_id " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::Velocity3dWithConfidence _tmp_9106;
                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity.push_back(_tmp_9106);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008106\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::Acceleration3dWithConfidence _tmp_9107;
                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration.push_back(_tmp_9107);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008107\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::EulerAnglesWithConfidence _tmp_9108;
                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles.push_back(_tmp_9108);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008108\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::CartesianAngularVelocityComponent _tmp_9109;
                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].z_angular_velocity.push_back(_tmp_9109);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008109\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].z_angular_velocity " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::LowerTriangularPositiveSemidefiniteMatrices _tmp_9110;
                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices.push_back(_tmp_9110);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008110\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::ObjectDimension _tmp_9111;
                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_z.push_back(_tmp_9111);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008111\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_z " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::ObjectDimension _tmp_9112;
                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_y.push_back(_tmp_9112);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008112\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_y " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::ObjectDimension _tmp_9113;
                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_x.push_back(_tmp_9113);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008113\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_x " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::PerceivedObjectDeltaTimeMilliSecondSignedObjectAge _tmp_9114;
                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_age.push_back(_tmp_9114);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008114\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_age " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::ObjectPerceptionQuality _tmp_9115;
                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_perception_quality.push_back(_tmp_9115);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008115\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_perception_quality " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::SequenceOfIdentifier1B _tmp_9116;
                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].sensor_id_list.push_back(_tmp_9116);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008116\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].sensor_id_list " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::ObjectClassDescription _tmp_9117;
                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification.push_back(_tmp_9117);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008117\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::MapPosition _tmp_9118;
                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position.push_back(_tmp_9118);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008118\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position " << tools::green("present");
                            }
                            
                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_id.size() != 0) {
                                // Field name: object_id
                                // Integer
                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                uint16_t* _tmp_9119 = (uint16_t*) buffer; buffer += 2;
                                __aux64__ = *_tmp_9119;
                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_id[0].value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008119\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_id[0].value) << 
                                                 " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_id[0].value: " << ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_id[0].value;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_id[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                            }
                            
                            // Field name: measurement_delta_time
                            // Real
                            // Float
                            // FLOAT  min(-2048) max(2047) span(4096) scaleDivisor(1000.0) dataType(Float)
                            uint16_t* _tmp_9120 = (uint16_t*) buffer; buffer += 2;
                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].measurement_delta_time.value = *_tmp_9120;
                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].measurement_delta_time.value += -2048;
                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].measurement_delta_time.value;
                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].measurement_delta_time.value /= 1000.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < -2048) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].measurement_delta_time.value' " << (__aux64__) << " is less than allowable (-2048); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 2047) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].measurement_delta_time.value' " << (__aux64__) << " exceeds max allowable (2047); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m008120\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].measurement_delta_time.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].measurement_delta_time: " <<
                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].measurement_delta_time.value << " (" << __aux64__ << ")";
                            }
                            
                            // Field name: position
                                // CartesianPosition3dWithConfidence  SEQUENCE
                                    //  xCoordinate CartesianCoordinateWithConfidence     
                                    //  yCoordinate CartesianCoordinateWithConfidence     
                                    //  zCoordinate CartesianCoordinateWithConfidence   OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::CartesianCoordinateWithConfidence _tmp_9121;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.z_coordinate.push_back(_tmp_9121);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008121\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.z_coordinate " << tools::green("present");
                                }
                                
                                // Field name: x_coordinate
                                    // CartesianCoordinateWithConfidence  SEQUENCE
                                        //  value      CartesianCoordinateLarge     
                                        //  confidence CoordinateConfidence         
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                    uint32_t* _tmp_9122 = (uint32_t*) buffer; buffer += 4;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.x_coordinate.value.value = *_tmp_9122;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.x_coordinate.value.value += -131072;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.x_coordinate.value.value;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.x_coordinate.value.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -131072) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.x_coordinate.value.value' " << (__aux64__) << " is less than allowable (-131072); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 131071) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.x_coordinate.value.value' " << (__aux64__) << " exceeds max allowable (131071); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008122\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.x_coordinate.value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.x_coordinate.value: " <<
                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.x_coordinate.value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_9123 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.x_coordinate.confidence.value = *_tmp_9123;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.x_coordinate.confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.x_coordinate.confidence.value;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.x_coordinate.confidence.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.x_coordinate.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4096) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.x_coordinate.confidence.value' " << (__aux64__) << " exceeds max allowable (4096); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008123\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.x_coordinate.confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.x_coordinate.confidence: " <<
                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.x_coordinate.confidence.value << " (" << __aux64__ << ")";
                                    }
                                
                                // Field name: y_coordinate
                                    // CartesianCoordinateWithConfidence  SEQUENCE
                                        //  value      CartesianCoordinateLarge     
                                        //  confidence CoordinateConfidence         
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                    uint32_t* _tmp_9124 = (uint32_t*) buffer; buffer += 4;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.y_coordinate.value.value = *_tmp_9124;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.y_coordinate.value.value += -131072;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.y_coordinate.value.value;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.y_coordinate.value.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -131072) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.y_coordinate.value.value' " << (__aux64__) << " is less than allowable (-131072); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 131071) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.y_coordinate.value.value' " << (__aux64__) << " exceeds max allowable (131071); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008124\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.y_coordinate.value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.y_coordinate.value: " <<
                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.y_coordinate.value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_9125 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.y_coordinate.confidence.value = *_tmp_9125;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.y_coordinate.confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.y_coordinate.confidence.value;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.y_coordinate.confidence.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.y_coordinate.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4096) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.y_coordinate.confidence.value' " << (__aux64__) << " exceeds max allowable (4096); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008125\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.y_coordinate.confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.y_coordinate.confidence: " <<
                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.y_coordinate.confidence.value << " (" << __aux64__ << ")";
                                    }
                                
                                if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.z_coordinate.size() != 0) {
                                    // Field name: z_coordinate
                                        // CartesianCoordinateWithConfidence  SEQUENCE
                                            //  value      CartesianCoordinateLarge     
                                            //  confidence CoordinateConfidence         
                                        
                                        // Field name: value
                                        // Real
                                        // Float
                                        // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                        uint32_t* _tmp_9126 = (uint32_t*) buffer; buffer += 4;
                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.z_coordinate[0].value.value = *_tmp_9126;
                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.z_coordinate[0].value.value += -131072;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.z_coordinate[0].value.value;
                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.z_coordinate[0].value.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -131072) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.z_coordinate[0].value.value' " << (__aux64__) << " is less than allowable (-131072); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 131071) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.z_coordinate[0].value.value' " << (__aux64__) << " exceeds max allowable (131071); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008126\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.z_coordinate[0].value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.z_coordinate[0].value: " <<
                                                         ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.z_coordinate[0].value.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: confidence
                                        // Real
                                        // Float
                                        // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_9127 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.z_coordinate[0].confidence.value = *_tmp_9127;
                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.z_coordinate[0].confidence.value += 1;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.z_coordinate[0].confidence.value;
                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.z_coordinate[0].confidence.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.z_coordinate[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4096) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.z_coordinate[0].confidence.value' " << (__aux64__) << " exceeds max allowable (4096); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008127\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.z_coordinate[0].confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.z_coordinate[0].confidence: " <<
                                                         ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].position.z_coordinate[0].confidence.value << " (" << __aux64__ << ")";
                                        }
                                }
                            
                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity.size() != 0) {
                                // Field name: velocity
                                // Choice
                                   // #0  polarVelocity   VelocityPolarWithZ   
                                   // #1  cartesianVelocity   VelocityCartesian   
                                uint8_t _choice_291 = *(buffer++);
                                
                                if(_choice_291 == 0) {
                                    its_container_v3_etsi_its_cdd_msgs::VelocityPolarWithZ _tmp_9128;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity.push_back(_tmp_9128);
                                
                                        // VelocityPolarWithZ  SEQUENCE
                                            //  velocityMagnitude Speed                 
                                            //  velocityDirection CartesianAngle        
                                            //  zVelocity         VelocityComponent   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::VelocityComponent _tmp_9129;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].z_velocity.push_back(_tmp_9129);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008128\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].z_velocity " << tools::green("present");
                                        }
                                        
                                        // Field name: velocity_magnitude
                                            // Speed  SEQUENCE
                                                //  speedValue      SpeedValue          
                                                //  speedConfidence SpeedConfidence     
                                            
                                            // Field name: speed_value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(16383) span(16384) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_9130 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value = *_tmp_9130;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008129\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_magnitude.speed_value: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: speed_confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                            uint8_t* _tmp_9131 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value = *_tmp_9131;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008130\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        // Field name: velocity_direction
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_9132 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_direction.value.value = *_tmp_9132;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_direction.value.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_direction.value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_direction.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_direction.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008131\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_direction.value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_direction.value: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_direction.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_9133 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_direction.confidence.value = *_tmp_9133;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_direction.confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_direction.confidence.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_direction.confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_direction.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_direction.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008132\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_direction.confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_direction.confidence: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].velocity_direction.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].z_velocity.size() != 0) {
                                            // Field name: z_velocity
                                                // VelocityComponent  SEQUENCE
                                                    //  value      VelocityComponentValue     
                                                    //  confidence SpeedConfidence            
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_9134 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].z_velocity[0].value.value = *_tmp_9134;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].z_velocity[0].value.value += -16383;
                                                __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].z_velocity[0].value.value;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].z_velocity[0].value.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008133\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].z_velocity[0].value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].z_velocity[0].value: " <<
                                                                 ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].z_velocity[0].value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                uint8_t* _tmp_9135 = (uint8_t*) buffer++;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].z_velocity[0].confidence.value = *_tmp_9135;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].z_velocity[0].confidence.value += 1;
                                                __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].z_velocity[0].confidence.value;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].z_velocity[0].confidence.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008134\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].z_velocity[0].confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].z_velocity[0].confidence: " <<
                                                                 ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].polar_velocity[0].z_velocity[0].confidence.value << " (" << __aux64__ << ")";
                                                }
                                        }
                                }
                                else if(_choice_291 == 1)  // CHOICE Velocity3dWithConfidence  fieldName(cartesian_velocity)
                                {
                                    its_container_v3_etsi_its_cdd_msgs::VelocityCartesian _tmp_9136;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity.push_back(_tmp_9136);
                                
                                        // VelocityCartesian  SEQUENCE
                                            //  xVelocity  VelocityComponent     
                                            //  yVelocity  VelocityComponent     
                                            //  zVelocity  VelocityComponent   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::VelocityComponent _tmp_9137;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].z_velocity.push_back(_tmp_9137);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008135\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].z_velocity " << tools::green("present");
                                        }
                                        
                                        // Field name: x_velocity
                                            // VelocityComponent  SEQUENCE
                                                //  value      VelocityComponentValue     
                                                //  confidence SpeedConfidence            
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_9138 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].x_velocity.value.value = *_tmp_9138;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].x_velocity.value.value += -16383;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].x_velocity.value.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].x_velocity.value.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].x_velocity.value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].x_velocity.value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008136\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].x_velocity.value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].x_velocity.value: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].x_velocity.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                            uint8_t* _tmp_9139 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].x_velocity.confidence.value = *_tmp_9139;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].x_velocity.confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].x_velocity.confidence.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].x_velocity.confidence.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].x_velocity.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].x_velocity.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008137\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].x_velocity.confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].x_velocity.confidence: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].x_velocity.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        // Field name: y_velocity
                                            // VelocityComponent  SEQUENCE
                                                //  value      VelocityComponentValue     
                                                //  confidence SpeedConfidence            
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_9140 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].y_velocity.value.value = *_tmp_9140;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].y_velocity.value.value += -16383;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].y_velocity.value.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].y_velocity.value.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].y_velocity.value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].y_velocity.value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008138\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].y_velocity.value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].y_velocity.value: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].y_velocity.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                            uint8_t* _tmp_9141 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].y_velocity.confidence.value = *_tmp_9141;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].y_velocity.confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].y_velocity.confidence.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].y_velocity.confidence.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].y_velocity.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].y_velocity.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008139\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].y_velocity.confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].y_velocity.confidence: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].y_velocity.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].z_velocity.size() != 0) {
                                            // Field name: z_velocity
                                                // VelocityComponent  SEQUENCE
                                                    //  value      VelocityComponentValue     
                                                    //  confidence SpeedConfidence            
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_9142 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].z_velocity[0].value.value = *_tmp_9142;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].z_velocity[0].value.value += -16383;
                                                __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].z_velocity[0].value.value;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].z_velocity[0].value.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008140\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].z_velocity[0].value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].z_velocity[0].value: " <<
                                                                 ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].z_velocity[0].value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                uint8_t* _tmp_9143 = (uint8_t*) buffer++;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value = *_tmp_9143;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value += 1;
                                                __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008141\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].z_velocity[0].confidence: " <<
                                                                 ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value << " (" << __aux64__ << ")";
                                                }
                                        }
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(_choice_291) << ") selected in CHOICE Velocity3dWithConfidence in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].velocity[0]'; message dropped.";
                                    return false;
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration.size() != 0) {
                                // Field name: acceleration
                                // Choice
                                   // #0  polarAcceleration   AccelerationPolarWithZ   
                                   // #1  cartesianAcceleration   AccelerationCartesian   
                                uint8_t _choice_292 = *(buffer++);
                                
                                if(_choice_292 == 0) {
                                    its_container_v3_etsi_its_cdd_msgs::AccelerationPolarWithZ _tmp_9144;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration.push_back(_tmp_9144);
                                
                                        // AccelerationPolarWithZ  SEQUENCE
                                            //  accelerationMagnitude AccelerationMagnitude     
                                            //  accelerationDirection CartesianAngle            
                                            //  zAcceleration         AccelerationComponent   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::AccelerationComponent _tmp_9145;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].z_acceleration.push_back(_tmp_9145);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008142\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].z_acceleration " << tools::green("present");
                                        }
                                        
                                        // Field name: acceleration_magnitude
                                            // AccelerationMagnitude  SEQUENCE
                                                //  accelerationMagnitudeValue AccelerationMagnitudeValue     
                                                //  accelerationConfidence     AccelerationConfidence         
                                            
                                            // Field name: acceleration_magnitude_value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(161) span(162) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_9146 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value = *_tmp_9146;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008143\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: acceleration_confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_9147 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value = *_tmp_9147;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008144\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        // Field name: acceleration_direction
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_9148 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_direction.value.value = *_tmp_9148;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_direction.value.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_direction.value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_direction.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_direction.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008145\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_direction.value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_direction.value: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_direction.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_9149 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value = *_tmp_9149;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008146\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_direction.confidence: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].z_acceleration.size() != 0) {
                                            // Field name: z_acceleration
                                                // AccelerationComponent  SEQUENCE
                                                    //  value      AccelerationValue          
                                                    //  confidence AccelerationConfidence     
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_9150 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value = *_tmp_9150;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value += -160;
                                                __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008147\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].z_acceleration[0].value: " <<
                                                                 ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                uint8_t* _tmp_9151 = (uint8_t*) buffer++;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value = *_tmp_9151;
                                                __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008148\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence: " <<
                                                                 ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value << " (" << __aux64__ << ")";
                                                }
                                        }
                                }
                                else if(_choice_292 == 1)  // CHOICE Acceleration3dWithConfidence  fieldName(cartesian_acceleration)
                                {
                                    its_container_v3_etsi_its_cdd_msgs::AccelerationCartesian _tmp_9152;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration.push_back(_tmp_9152);
                                
                                        // AccelerationCartesian  SEQUENCE
                                            //  xAcceleration AccelerationComponent     
                                            //  yAcceleration AccelerationComponent     
                                            //  zAcceleration AccelerationComponent   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::AccelerationComponent _tmp_9153;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].z_acceleration.push_back(_tmp_9153);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008149\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].z_acceleration " << tools::green("present");
                                        }
                                        
                                        // Field name: x_acceleration
                                            // AccelerationComponent  SEQUENCE
                                                //  value      AccelerationValue          
                                                //  confidence AccelerationConfidence     
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_9154 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value = *_tmp_9154;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value += -160;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008150\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].x_acceleration.value: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_9155 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value = *_tmp_9155;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008151\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        // Field name: y_acceleration
                                            // AccelerationComponent  SEQUENCE
                                                //  value      AccelerationValue          
                                                //  confidence AccelerationConfidence     
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_9156 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value = *_tmp_9156;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value += -160;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008152\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].y_acceleration.value: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_9157 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value = *_tmp_9157;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008153\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].z_acceleration.size() != 0) {
                                            // Field name: z_acceleration
                                                // AccelerationComponent  SEQUENCE
                                                    //  value      AccelerationValue          
                                                    //  confidence AccelerationConfidence     
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_9158 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value = *_tmp_9158;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value += -160;
                                                __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008154\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value: " <<
                                                                 ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                uint8_t* _tmp_9159 = (uint8_t*) buffer++;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value = *_tmp_9159;
                                                __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008155\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence: " <<
                                                                 ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value << " (" << __aux64__ << ")";
                                                }
                                        }
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(_choice_292) << ") selected in CHOICE Acceleration3dWithConfidence in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].acceleration[0]'; message dropped.";
                                    return false;
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles.size() != 0) {
                                // Field name: angles
                                    // EulerAnglesWithConfidence  SEQUENCE
                                        //  zAngle     CartesianAngle     
                                        //  yAngle     CartesianAngle   OPTIONAL  
                                        //  xAngle     CartesianAngle   OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::CartesianAngle _tmp_9160;
                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].y_angle.push_back(_tmp_9160);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008156\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].y_angle " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::CartesianAngle _tmp_9161;
                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].x_angle.push_back(_tmp_9161);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008157\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].x_angle " << tools::green("present");
                                    }
                                    
                                    // Field name: z_angle
                                        // CartesianAngle  SEQUENCE
                                            //  value      CartesianAngleValue     
                                            //  confidence AngleConfidence         
                                        
                                        // Field name: value
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_9162 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].z_angle.value.value = *_tmp_9162;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].z_angle.value.value;
                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].z_angle.value.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].z_angle.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].z_angle.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008158\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].z_angle.value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].z_angle.value: " <<
                                                         ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].z_angle.value.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: confidence
                                        // Real
                                        // Float
                                        // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                        uint8_t* _tmp_9163 = (uint8_t*) buffer++;
                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].z_angle.confidence.value = *_tmp_9163;
                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].z_angle.confidence.value += 1;
                                        __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].z_angle.confidence.value;
                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].z_angle.confidence.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].z_angle.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].z_angle.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008159\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].z_angle.confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].z_angle.confidence: " <<
                                                         ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].z_angle.confidence.value << " (" << __aux64__ << ")";
                                        }
                                    
                                    if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].y_angle.size() != 0) {
                                        // Field name: y_angle
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_9164 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].y_angle[0].value.value = *_tmp_9164;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].y_angle[0].value.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].y_angle[0].value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].y_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].y_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008160\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].y_angle[0].value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].y_angle[0].value: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].y_angle[0].value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_9165 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].y_angle[0].confidence.value = *_tmp_9165;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].y_angle[0].confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].y_angle[0].confidence.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].y_angle[0].confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].y_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].y_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008161\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].y_angle[0].confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].y_angle[0].confidence: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].y_angle[0].confidence.value << " (" << __aux64__ << ")";
                                            }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].x_angle.size() != 0) {
                                        // Field name: x_angle
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_9166 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].x_angle[0].value.value = *_tmp_9166;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].x_angle[0].value.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].x_angle[0].value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].x_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].x_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008162\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].x_angle[0].value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].x_angle[0].value: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].x_angle[0].value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_9167 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].x_angle[0].confidence.value = *_tmp_9167;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].x_angle[0].confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].x_angle[0].confidence.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].x_angle[0].confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].x_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].x_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008163\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].x_angle[0].confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].x_angle[0].confidence: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].angles[0].x_angle[0].confidence.value << " (" << __aux64__ << ")";
                                            }
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].z_angular_velocity.size() != 0) {
                                // Field name: z_angular_velocity
                                    // CartesianAngularVelocityComponent  SEQUENCE
                                        //  value      CartesianAngularVelocityComponentValue     
                                        //  confidence AngularSpeedConfidence                     
                                    
                                    // Field name: value
                                    // Integer
                                    // INT16  min(-255) max(256) span(512) datatype(Int16)
                                    uint16_t* _tmp_9168 = (uint16_t*) buffer; buffer += 2;
                                    __aux64__ = *_tmp_9168;
                                    __aux64__ += -255;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].z_angular_velocity[0].value.value = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008164\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].z_angular_velocity[0].value.value) << 
                                                     " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].z_angular_velocity[0].value.value: " << ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].z_angular_velocity[0].value.value;
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -255) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].z_angular_velocity[0].value.value' " << (__aux64__) << " is less than allowable (-255); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].z_angular_velocity[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                        return false;
                                    }
                                    
                                    // Field name: confidence
                                    // Enumerated
                                    // INT32  min(0) max(7) span(8) datatype(Int32)
                                    uint8_t* _tmp_9169 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_9169;
                                    __aux64__ += 0;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].z_angular_velocity[0].confidence.value = __aux64__;
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].z_angular_velocity[0].confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 7) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].z_angular_velocity[0].confidence.value' " << (__aux64__) << " exceeds max allowable (7); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008165\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].z_angular_velocity[0].confidence.value) << 
                                                     " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].z_angular_velocity[0].confidence.value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].z_angular_velocity[0].confidence.value);
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices.size() != 0) {
                                // Field name: lower_triangular_correlation_matrices
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(4) span(4)
                                int16_t* _tmp_9170 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_9170;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_9170 = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008166\033[0m| SequenceOf ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0]. size: " << int(*_tmp_9170);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].value' " << (__aux64__) << " exceeds max allowable (4); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int p = 0; p < _if__tmp_9170; p++) {
                                    its_container_v3_etsi_its_cdd_msgs::LowerTriangularPositiveSemidefiniteMatrix seqof_p;  // SEQUENCE
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements.push_back(seqof_p);
                                
                                        // LowerTriangularPositiveSemidefiniteMatrix  SEQUENCE
                                            //  componentsIncludedIntheMatrix MatrixIncludedComponents                             
                                            //  matrix                        LowerTriangularPositiveSemidefiniteMatrixColumns     
                                        
                                        // Field name: components_included_inthe_matrix
                                        // BitString
                                        // BIT_STRING  min(13) max(13) span(1)
                                        uint8_t* _ext_flag_4109 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].components_included_inthe_matrix.
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008167\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].components_included_inthe_matrix.: " << int(*_ext_flag_4109);
                                        }
                                        
                                        uint8_t* _tmp_9171 = (uint8_t*)buffer;
                                        __aux64__ = *_tmp_9171 + 13;
                                        buffer += 1;
                                        
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008168\033[0m| payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].components_included_inthe_matrix.value: " << __aux64__;
                                        
                                        int _if__tmp_9171 = __aux64__;
                                        for(int q = 0; q < _if__tmp_9171; q++) {
                                            uint8_t __c__;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].components_included_inthe_matrix.values.push_back(__c__);
                                            uint8_t* __b__ = (uint8_t*)buffer++;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].components_included_inthe_matrix.values[q] = (*__b__ == 1);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 13) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].components_included_inthe_matrix.value' " << (__aux64__) << " is less than allowable (13); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 13) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].components_included_inthe_matrix.value' " << (__aux64__) << " exceeds max allowable (13); message dropped.";
                                            return false;
                                        }
                                        
                                        // Field name: matrix
                                        // SequenceOf
                                        // Data Type UInt8
                                        // SEQUENCE_OF  min(1) max(13) span(13)
                                        int16_t* _tmp_9172 = (int16_t*)buffer;
                                        buffer += 2;
                                        __aux64__ = *_tmp_9172;
                                        __aux64__ += 1;     // +min
                                        
                                        int _if__tmp_9172 = __aux64__;
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008169\033[0m| SequenceOf ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].matrix. size: " << int(*_tmp_9172);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].matrix.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 13) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].matrix.value' " << (__aux64__) << " exceeds max allowable (13); message dropped.";
                                            return false;
                                        }
                                        
                                        
                                        for(int r = 0; r < _if__tmp_9172; r++) {
                                            its_container_v3_etsi_its_cdd_msgs::CorrelationColumn seqof_r;  // SEQUENCE_OF
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].matrix.elements.push_back(seqof_r);
                                        
                                            // SequenceOf
                                            // Data Type UInt8
                                            // SEQUENCE_OF  min(1) max(13) span(13)
                                            uint8_t* _ext_flag_4110 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].matrix.elements[r].
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008170\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].matrix.elements[r].: " << int(*_ext_flag_4110);
                                            }
                                            
                                            int16_t* _tmp_9173 = (int16_t*)buffer;
                                            buffer += 2;
                                            __aux64__ = *_tmp_9173;
                                            __aux64__ += 1;     // +min
                                            
                                            int _if__tmp_9173 = __aux64__;
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008171\033[0m| SequenceOf ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].matrix.elements[r]. size: " << int(*_tmp_9173);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].matrix.elements[r].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 13) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].matrix.elements[r].value' " << (__aux64__) << " exceeds max allowable (13); message dropped.";
                                                return false;
                                            }
                                            
                                            
                                            for(int s = 0; s < _if__tmp_9173; s++) {
                                                its_container_v3_etsi_its_cdd_msgs::CorrelationCellValue seqof_s;  // INTEGER
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].matrix.elements[r].elements.push_back(seqof_s);
                                            
                                                // Integer
                                                // INT8  min(-100) max(101) span(202) datatype(Int8)
                                                uint8_t* _tmp_9174 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_9174;
                                                __aux64__ += -100;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].matrix.elements[r].elements[s].value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008172\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].matrix.elements[r].elements[s].value) << 
                                                                 " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].matrix.elements[r].elements[s].value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].matrix.elements[r].elements[s].value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -100) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].matrix.elements[r].elements[s].value' " << (__aux64__) << " is less than allowable (-100); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 101) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].lower_triangular_correlation_matrices[0].elements[p].matrix.elements[r].elements[s].value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                            }
                                            
                                        }
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_z.size() != 0) {
                                // Field name: object_dimension_z
                                    // ObjectDimension  SEQUENCE
                                        //  value      ObjectDimensionValue          
                                        //  confidence ObjectDimensionConfidence     
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_9175 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_z[0].value.value = *_tmp_9175;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_z[0].value.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_z[0].value.value;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_z[0].value.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_z[0].value.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_z[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008173\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_z[0].value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_z[0].value: " <<
                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_z[0].value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_9176 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_z[0].confidence.value = *_tmp_9176;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_z[0].confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_z[0].confidence.value;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_z[0].confidence.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_z[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 32) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_z[0].confidence.value' " << (__aux64__) << " exceeds max allowable (32); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008174\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_z[0].confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_z[0].confidence: " <<
                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_z[0].confidence.value << " (" << __aux64__ << ")";
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_y.size() != 0) {
                                // Field name: object_dimension_y
                                    // ObjectDimension  SEQUENCE
                                        //  value      ObjectDimensionValue          
                                        //  confidence ObjectDimensionConfidence     
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_9177 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_y[0].value.value = *_tmp_9177;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_y[0].value.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_y[0].value.value;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_y[0].value.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_y[0].value.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_y[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008175\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_y[0].value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_y[0].value: " <<
                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_y[0].value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_9178 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_y[0].confidence.value = *_tmp_9178;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_y[0].confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_y[0].confidence.value;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_y[0].confidence.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_y[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 32) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_y[0].confidence.value' " << (__aux64__) << " exceeds max allowable (32); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008176\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_y[0].confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_y[0].confidence: " <<
                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_y[0].confidence.value << " (" << __aux64__ << ")";
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_x.size() != 0) {
                                // Field name: object_dimension_x
                                    // ObjectDimension  SEQUENCE
                                        //  value      ObjectDimensionValue          
                                        //  confidence ObjectDimensionConfidence     
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_9179 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_x[0].value.value = *_tmp_9179;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_x[0].value.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_x[0].value.value;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_x[0].value.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_x[0].value.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_x[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008177\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_x[0].value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_x[0].value: " <<
                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_x[0].value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_9180 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_x[0].confidence.value = *_tmp_9180;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_x[0].confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_x[0].confidence.value;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_x[0].confidence.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_x[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 32) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_x[0].confidence.value' " << (__aux64__) << " exceeds max allowable (32); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008178\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_x[0].confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_x[0].confidence: " <<
                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_dimension_x[0].confidence.value << " (" << __aux64__ << ")";
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_age.size() != 0) {
                                // Field name: object_age
                                // Real
                                // Float
                                // FLOAT  min(0) max(2047) span(2048) scaleDivisor(1000.0) dataType(Float)
                                uint16_t* _tmp_9181 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_age[0].value = *_tmp_9181;
                                __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_age[0].value;
                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_age[0].value /= 1000.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_age[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 2047) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_age[0].value' " << (__aux64__) << " exceeds max allowable (2047); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008179\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_age[0].value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_age[0]: " <<
                                                 ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_age[0].value << " (" << __aux64__ << ")";
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_perception_quality.size() != 0) {
                                // Field name: object_perception_quality
                                // Integer
                                // UINT8  min(0) max(15) span(16) datatype(UInt8)
                                uint8_t* _tmp_9182 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_9182;
                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_perception_quality[0].value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008180\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_perception_quality[0].value) << 
                                                 " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_perception_quality[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_perception_quality[0].value);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_perception_quality[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].object_perception_quality[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                    return false;
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].sensor_id_list.size() != 0) {
                                // Field name: sensor_id_list
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(128) span(128)
                                uint8_t* _ext_flag_4118 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].sensor_id_list[0].
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008181\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].sensor_id_list[0].: " << int(*_ext_flag_4118);
                                }
                                
                                int16_t* _tmp_9183 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_9183;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_9183 = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008182\033[0m| SequenceOf ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].sensor_id_list[0]. size: " << int(*_tmp_9183);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].sensor_id_list[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 128) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].sensor_id_list[0].value' " << (__aux64__) << " exceeds max allowable (128); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int t = 0; t < _if__tmp_9183; t++) {
                                    its_container_v3_etsi_its_cdd_msgs::Identifier1B seqof_t;  // INTEGER
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].sensor_id_list[0].elements.push_back(seqof_t);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_9184 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_9184;
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].sensor_id_list[0].elements[t].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008183\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].sensor_id_list[0].elements[t].value) << 
                                                     " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].sensor_id_list[0].elements[t].value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].sensor_id_list[0].elements[t].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].sensor_id_list[0].elements[t].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].sensor_id_list[0].elements[t].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification.size() != 0) {
                                // Field name: classification
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(8) span(8)
                                int16_t* _tmp_9185 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_9185;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_9185 = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008184\033[0m| SequenceOf ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0]. size: " << int(*_tmp_9185);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 8) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int u = 0; u < _if__tmp_9185; u++) {
                                    its_container_v3_etsi_its_cdd_msgs::ObjectClassWithConfidence seqof_u;  // SEQUENCE
                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements.push_back(seqof_u);
                                
                                        // ObjectClassWithConfidence  SEQUENCE
                                            //  objectClass ObjectClass         
                                            //  confidence  ConfidenceLevel     
                                        
                                        // Field name: object_class
                                        // Choice
                                        uint8_t* _ext_flag_4119 = (uint8_t*)buffer++; // ext flag
                                        
                                           // #0  vehicleSubClass   TrafficParticipantType   
                                           // #1  vruSubClass   VruProfileAndSubprofile   
                                           // #2  groupSubClass   VruClusterInformation   
                                           // #3  otherSubClass   OtherSubClass   
                                        uint8_t _choice_293 = *(buffer++);
                                        
                                        if(*_ext_flag_4119)
                                            _choice_293 += 3 + 1; // Ext addition
                                        
                                        if(_choice_293 == 0) {
                                            its_container_v3_etsi_its_cdd_msgs::TrafficParticipantType _tmp_9186;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vehicle_sub_class.push_back(_tmp_9186);
                                        
                                            // Integer
                                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                            uint8_t* _tmp_9187 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_9187;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vehicle_sub_class[0].value = __aux64__;
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008185\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vehicle_sub_class[0].value) << 
                                                             " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vehicle_sub_class[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vehicle_sub_class[0].value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vehicle_sub_class[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vehicle_sub_class[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                return false;
                                            }
                                        }
                                        else if(_choice_293 == 1)  // CHOICE ObjectClass  fieldName(vru_sub_class)
                                        {
                                            its_container_v3_etsi_its_cdd_msgs::VruProfileAndSubprofile _tmp_9188;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class.push_back(_tmp_9188);
                                        
                                            // Choice
                                            uint8_t* _ext_flag_4120 = (uint8_t*)buffer++; // ext flag
                                            
                                               // #0  pedestrian   VruSubProfilePedestrian   
                                               // #1  bicyclistAndLightVruVehicle   VruSubProfileBicyclist   
                                               // #2  motorcyclist   VruSubProfileMotorcyclist   
                                               // #3  animal   VruSubProfileAnimal   
                                            uint8_t _choice_294 = *(buffer++);
                                            
                                            if(*_ext_flag_4120)
                                                _choice_294 += 3 + 1; // Ext addition
                                            
                                            if(_choice_294 == 0) {
                                                its_container_v3_etsi_its_cdd_msgs::VruSubProfilePedestrian _tmp_9189;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].pedestrian.push_back(_tmp_9189);
                                            
                                                // Enumerated
                                                // INT32  min(0) max(15) span(16) datatype(Int32)
                                                uint8_t* _tmp_9190 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_9190;
                                                __aux64__ += 0;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].pedestrian[0].value = __aux64__;
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].pedestrian[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].pedestrian[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008186\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].pedestrian[0].value) << 
                                                                 " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].pedestrian[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].pedestrian[0].value);
                                                }
                                            }
                                            else if(_choice_294 == 1)  // CHOICE VruProfileAndSubprofile  fieldName(bicyclist_and_light_vru_vehicle)
                                            {
                                                its_container_v3_etsi_its_cdd_msgs::VruSubProfileBicyclist _tmp_9191;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle.push_back(_tmp_9191);
                                            
                                                // Enumerated
                                                // INT32  min(0) max(15) span(16) datatype(Int32)
                                                uint8_t* _tmp_9192 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_9192;
                                                __aux64__ += 0;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value = __aux64__;
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008187\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value) << 
                                                                 " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value);
                                                }
                                            }
                                            else if(_choice_294 == 2)  // CHOICE VruProfileAndSubprofile  fieldName(motorcyclist)
                                            {
                                                its_container_v3_etsi_its_cdd_msgs::VruSubProfileMotorcyclist _tmp_9193;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].motorcyclist.push_back(_tmp_9193);
                                            
                                                // Enumerated
                                                // INT32  min(0) max(15) span(16) datatype(Int32)
                                                uint8_t* _tmp_9194 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_9194;
                                                __aux64__ += 0;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].motorcyclist[0].value = __aux64__;
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].motorcyclist[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].motorcyclist[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008188\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].motorcyclist[0].value) << 
                                                                 " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].motorcyclist[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].motorcyclist[0].value);
                                                }
                                            }
                                            else if(_choice_294 == 3)  // CHOICE VruProfileAndSubprofile  fieldName(animal)
                                            {
                                                its_container_v3_etsi_its_cdd_msgs::VruSubProfileAnimal _tmp_9195;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].animal.push_back(_tmp_9195);
                                            
                                                // Enumerated
                                                // INT32  min(0) max(15) span(16) datatype(Int32)
                                                uint8_t* _tmp_9196 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_9196;
                                                __aux64__ += 0;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].animal[0].value = __aux64__;
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].animal[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].animal[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008189\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].animal[0].value) << 
                                                                 " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].animal[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.vru_sub_class[0].animal[0].value);
                                                }
                                            }
                                            else
                                            {
                                                uint16_t* _tmp_9197 = (uint16_t*)buffer;  // OpenType length
                                                buffer += 2 + int(*_tmp_9197);            // Ignoring opentype data
                                            }
                                        }
                                        else if(_choice_293 == 2)  // CHOICE ObjectClass  fieldName(group_sub_class)
                                        {
                                            its_container_v3_etsi_its_cdd_msgs::VruClusterInformation _tmp_9198;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class.push_back(_tmp_9198);
                                        
                                                // VruClusterInformation  SEQUENCE
                                                    //  clusterId               Identifier1B         OPTIONAL  
                                                    //  clusterBoundingBoxShape Shape                OPTIONAL  
                                                    //  clusterCardinalitySize  CardinalNumber1B       
                                                    //  clusterProfiles         VruClusterProfiles   OPTIONAL  
                                                    //  ...
                                                uint8_t* _ext_flag_4125 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008190\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].: " << int(*_ext_flag_4125);
                                                }
                                                
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::Identifier1B _tmp_9199;
                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_id.push_back(_tmp_9199);
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m008191\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_id " << tools::green("present");
                                                }
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::Shape _tmp_9200;
                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape.push_back(_tmp_9200);
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m008192\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape " << tools::green("present");
                                                }
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::VruClusterProfiles _tmp_9201;
                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_profiles.push_back(_tmp_9201);
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m008193\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_profiles " << tools::green("present");
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_id.size() != 0) {
                                                    // Field name: cluster_id
                                                    // Integer
                                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                    uint8_t* _tmp_9202 = (uint8_t*) buffer++;
                                                    __aux64__ = *_tmp_9202;
                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_id[0].value = __aux64__;
                                                    
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m008194\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_id[0].value) << 
                                                                     " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_id[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_id[0].value);
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape.size() != 0) {
                                                    // Field name: cluster_bounding_box_shape
                                                    // Choice
                                                    uint8_t* _ext_flag_4126 = (uint8_t*)buffer++; // ext flag
                                                    
                                                       // #0  rectangular   RectangularShape   
                                                       // #1  circular   CircularShape   
                                                       // #2  polygonal   PolygonalShape   
                                                       // #3  elliptical   EllipticalShape   
                                                       // #4  radial   RadialShape   
                                                       // #5  radialShapes   RadialShapes   
                                                    uint8_t _choice_295 = *(buffer++);
                                                    
                                                    if(*_ext_flag_4126)
                                                        _choice_295 += 5 + 1; // Ext addition
                                                    
                                                    if(_choice_295 == 0) {
                                                        its_container_v3_etsi_its_cdd_msgs::RectangularShape _tmp_9203;
                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular.push_back(_tmp_9203);
                                                    
                                                            // RectangularShape  SEQUENCE
                                                                //  centerPoint CartesianPosition3d   OPTIONAL  
                                                                //  semiLength  StandardLength12b       
                                                                //  semiBreadth StandardLength12b       
                                                                //  orientation Wgs84AngleValue       OPTIONAL  
                                                                //  height      StandardLength12b     OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_9204;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point.push_back(_tmp_9204);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m008195\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::Wgs84AngleValue _tmp_9205;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation.push_back(_tmp_9205);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m008196\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_9206;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height.push_back(_tmp_9206);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m008197\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point.size() != 0) {
                                                                // Field name: center_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_9207;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate.push_back(_tmp_9207);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m008198\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_9208 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value = *_tmp_9208;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m008199\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_9209 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value = *_tmp_9209;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m008200\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_9210 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value = *_tmp_9210;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m008201\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: semi_length
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_9211 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value = *_tmp_9211;
                                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m008202\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length: " <<
                                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: semi_breadth
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_9212 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value = *_tmp_9212;
                                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m008203\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth: " <<
                                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation.size() != 0) {
                                                                // Field name: orientation
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_9213 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value = *_tmp_9213;
                                                                __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m008204\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height.size() != 0) {
                                                                // Field name: height
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_9214 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value = *_tmp_9214;
                                                                __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m008205\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_295 == 1)  // CHOICE Shape  fieldName(circular)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::CircularShape _tmp_9215;
                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular.push_back(_tmp_9215);
                                                    
                                                            // CircularShape  SEQUENCE
                                                                //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                //  radius              StandardLength12b       
                                                                //  height              StandardLength12b     OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_9216;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point.push_back(_tmp_9216);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m008206\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_9217;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height.push_back(_tmp_9217);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m008207\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point.size() != 0) {
                                                                // Field name: shape_reference_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_9218;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate.push_back(_tmp_9218);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m008208\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_9219 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value = *_tmp_9219;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m008209\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_9220 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value = *_tmp_9220;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m008210\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_9221 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_9221;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m008211\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: radius
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_9222 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value = *_tmp_9222;
                                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m008212\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius: " <<
                                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height.size() != 0) {
                                                                // Field name: height
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_9223 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value = *_tmp_9223;
                                                                __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m008213\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_295 == 2)  // CHOICE Shape  fieldName(polygonal)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::PolygonalShape _tmp_9224;
                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal.push_back(_tmp_9224);
                                                    
                                                            // PolygonalShape  SEQUENCE
                                                                //  shapeReferencePoint CartesianPosition3d             OPTIONAL  
                                                                //  polygon             SequenceOfCartesianPosition3d     
                                                                //  height              StandardLength12b               OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_9225;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point.push_back(_tmp_9225);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m008214\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_9226;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height.push_back(_tmp_9226);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m008215\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point.size() != 0) {
                                                                // Field name: shape_reference_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_9227;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.push_back(_tmp_9227);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m008216\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_9228 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value = *_tmp_9228;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m008217\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_9229 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value = *_tmp_9229;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m008218\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_9230 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_9230;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m008219\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: polygon
                                                            // SequenceOf
                                                            // Data Type UInt8
                                                            // SEQUENCE_OF  min(1) max(16) span(16)
                                                            uint8_t* _ext_flag_4142 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m008220\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.: " << int(*_ext_flag_4142);
                                                            }
                                                            
                                                            int16_t* _tmp_9231 = (int16_t*)buffer;
                                                            buffer += 2;
                                                            __aux64__ = *_tmp_9231;
                                                            __aux64__ += 1;     // +min
                                                            
                                                            int _if__tmp_9231 = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m008221\033[0m| SequenceOf ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon. size: " << int(*_tmp_9231);
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            
                                                            for(int v = 0; v < _if__tmp_9231; v++) {
                                                                its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d seqof_v;  // SEQUENCE
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements.push_back(seqof_v);
                                                            
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_9232;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].z_coordinate.push_back(_tmp_9232);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m008222\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_9233 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].x_coordinate.value = *_tmp_9233;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m008223\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].x_coordinate.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_9234 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].y_coordinate.value = *_tmp_9234;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m008224\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].y_coordinate.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_9235 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].z_coordinate[0].value = *_tmp_9235;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m008225\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].z_coordinate[0].value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[v].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height.size() != 0) {
                                                                // Field name: height
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_9236 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value = *_tmp_9236;
                                                                __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m008226\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_295 == 3)  // CHOICE Shape  fieldName(elliptical)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::EllipticalShape _tmp_9237;
                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical.push_back(_tmp_9237);
                                                    
                                                            // EllipticalShape  SEQUENCE
                                                                //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                //  semiMajorAxisLength StandardLength12b       
                                                                //  semiMinorAxisLength StandardLength12b       
                                                                //  orientation         Wgs84AngleValue       OPTIONAL  
                                                                //  height              StandardLength12b     OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_9238;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point.push_back(_tmp_9238);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m008227\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::Wgs84AngleValue _tmp_9239;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation.push_back(_tmp_9239);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m008228\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_9240;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height.push_back(_tmp_9240);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m008229\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point.size() != 0) {
                                                                // Field name: shape_reference_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_9241;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.push_back(_tmp_9241);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m008230\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_9242 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value = *_tmp_9242;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m008231\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_9243 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value = *_tmp_9243;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m008232\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_9244 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_9244;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m008233\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: semi_major_axis_length
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_9245 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value = *_tmp_9245;
                                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m008234\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length: " <<
                                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: semi_minor_axis_length
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_9246 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value = *_tmp_9246;
                                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m008235\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length: " <<
                                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation.size() != 0) {
                                                                // Field name: orientation
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_9247 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value = *_tmp_9247;
                                                                __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m008236\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height.size() != 0) {
                                                                // Field name: height
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_9248 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value = *_tmp_9248;
                                                                __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m008237\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_295 == 4)  // CHOICE Shape  fieldName(radial)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::RadialShape _tmp_9249;
                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial.push_back(_tmp_9249);
                                                    
                                                            // RadialShape  SEQUENCE
                                                                //  shapeReferencePoint                   CartesianPosition3d   OPTIONAL  
                                                                //  range                                 StandardLength12b       
                                                                //  stationaryHorizontalOpeningAngleStart Wgs84AngleValue         
                                                                //  stationaryHorizontalOpeningAngleEnd   Wgs84AngleValue         
                                                                //  verticalOpeningAngleStart             CartesianAngleValue   OPTIONAL  
                                                                //  verticalOpeningAngleEnd               CartesianAngleValue   OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_9250;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point.push_back(_tmp_9250);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m008238\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_9251;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start.push_back(_tmp_9251);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m008239\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_9252;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end.push_back(_tmp_9252);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m008240\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point.size() != 0) {
                                                                // Field name: shape_reference_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_9253;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate.push_back(_tmp_9253);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m008241\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_9254 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value = *_tmp_9254;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m008242\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_9255 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value = *_tmp_9255;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m008243\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_9256 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_9256;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m008244\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: range
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_9257 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value = *_tmp_9257;
                                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m008245\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range: " <<
                                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: stationary_horizontal_opening_angle_start
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_9258 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value = *_tmp_9258;
                                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m008246\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start: " <<
                                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: stationary_horizontal_opening_angle_end
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_9259 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value = *_tmp_9259;
                                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m008247\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end: " <<
                                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start.size() != 0) {
                                                                // Field name: vertical_opening_angle_start
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_9260 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value = *_tmp_9260;
                                                                __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m008248\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end.size() != 0) {
                                                                // Field name: vertical_opening_angle_end
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_9261 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value = *_tmp_9261;
                                                                __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m008249\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_295 == 5)  // CHOICE Shape  fieldName(radial_shapes)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::RadialShapes _tmp_9262;
                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes.push_back(_tmp_9262);
                                                    
                                                            // RadialShapes  SEQUENCE
                                                                //  refPointId       Identifier1B                 
                                                                //  xCoordinate      CartesianCoordinateSmall     
                                                                //  yCoordinate      CartesianCoordinateSmall     
                                                                //  zCoordinate      CartesianCoordinateSmall   OPTIONAL  
                                                                //  radialShapesList RadialShapesList             
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::CartesianCoordinateSmall _tmp_9263;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate.push_back(_tmp_9263);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m008250\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate " << tools::green("present");
                                                            }
                                                            
                                                            // Field name: ref_point_id
                                                            // Integer
                                                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                            uint8_t* _tmp_9264 = (uint8_t*) buffer++;
                                                            __aux64__ = *_tmp_9264;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m008251\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value) << 
                                                                             " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value);
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            // Field name: x_coordinate
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                            uint16_t* _tmp_9265 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value = *_tmp_9265;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value += -3094;
                                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value /= 100.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m008252\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate: " <<
                                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: y_coordinate
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                            uint16_t* _tmp_9266 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value = *_tmp_9266;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value += -3094;
                                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value;
                                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value /= 100.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m008253\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate: " <<
                                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate.size() != 0) {
                                                                // Field name: z_coordinate
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                                uint16_t* _tmp_9267 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value = *_tmp_9267;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value += -3094;
                                                                __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value;
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value /= 100.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m008254\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                            
                                                            // Field name: radial_shapes_list
                                                            // SequenceOf
                                                            // Data Type UInt8
                                                            // SEQUENCE_OF  min(1) max(16) span(16)
                                                            uint8_t* _ext_flag_4165 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m008255\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.: " << int(*_ext_flag_4165);
                                                            }
                                                            
                                                            int16_t* _tmp_9268 = (int16_t*)buffer;
                                                            buffer += 2;
                                                            __aux64__ = *_tmp_9268;
                                                            __aux64__ += 1;     // +min
                                                            
                                                            int _if__tmp_9268 = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m008256\033[0m| SequenceOf ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list. size: " << int(*_tmp_9268);
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            
                                                            for(int w = 0; w < _if__tmp_9268; w++) {
                                                                its_container_v3_etsi_its_cdd_msgs::RadialShapeDetails seqof_w;  // SEQUENCE
                                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements.push_back(seqof_w);
                                                            
                                                                    // RadialShapeDetails  SEQUENCE
                                                                        //  range                       StandardLength12b       
                                                                        //  horizontalOpeningAngleStart CartesianAngleValue     
                                                                        //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                                                        //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                                                        //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_9269;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start.push_back(_tmp_9269);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m008257\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start " << tools::green("present");
                                                                    }
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_9270;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end.push_back(_tmp_9270);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m008258\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: range
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_9271 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].range.value = *_tmp_9271;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].range.value;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].range.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m008259\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].range.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].range: " <<
                                                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].range.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: horizontal_opening_angle_start
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_9272 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_start.value = *_tmp_9272;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_start.value;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_start.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m008260\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_start: " <<
                                                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: horizontal_opening_angle_end
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_9273 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_end.value = *_tmp_9273;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_end.value;
                                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_end.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m008261\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_end: " <<
                                                                                     ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start.size() != 0) {
                                                                        // Field name: vertical_opening_angle_start
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                        uint16_t* _tmp_9274 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start[0].value = *_tmp_9274;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start[0].value;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start[0].value /= 10.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m008262\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end.size() != 0) {
                                                                        // Field name: vertical_opening_angle_end
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                        uint16_t* _tmp_9275 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end[0].value = *_tmp_9275;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end[0].value;
                                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end[0].value /= 10.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m008263\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                    }
                                                    else
                                                    {
                                                        uint16_t* _tmp_9276 = (uint16_t*)buffer;  // OpenType length
                                                        buffer += 2 + int(*_tmp_9276);            // Ignoring opentype data
                                                    }
                                                }
                                                
                                                // Field name: cluster_cardinality_size
                                                // Integer
                                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                uint8_t* _tmp_9277 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_9277;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_cardinality_size.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008264\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_cardinality_size.value) << 
                                                                 " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_cardinality_size.value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_cardinality_size.value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_cardinality_size.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_cardinality_size.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_profiles.size() != 0) {
                                                    // Field name: cluster_profiles
                                                    // BitString
                                                    // BIT_STRING  min(4) max(4) span(1)
                                                    uint8_t* _tmp_9278 = (uint8_t*)buffer;
                                                    __aux64__ = *_tmp_9278 + 4;
                                                    buffer += 1;
                                                    
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m008265\033[0m| payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_profiles[0].value: " << __aux64__;
                                                    
                                                    int _if__tmp_9278 = __aux64__;
                                                    for(int x = 0; x < _if__tmp_9278; x++) {
                                                        uint8_t __c__;
                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_profiles[0].values.push_back(__c__);
                                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_profiles[0].values[x] = (*__b__ == 1);
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 4) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_profiles[0].value' " << (__aux64__) << " is less than allowable (4); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 4) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].cluster_profiles[0].value' " << (__aux64__) << " exceeds max allowable (4); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                if(*_ext_flag_4125) { // from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0]. 
                                                    uint8_t* _tmp_9279 = (uint8_t*) buffer++;  // number of extensions
                                                    bool _array_111[*_tmp_9279];
                                                    
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m008266\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.group_sub_class[0].: " << static_cast<unsigned int>(*_tmp_9279);
                                                    
                                                    // Extensions bytemap
                                                    for(int i = 0; i < *_tmp_9279; i++)
                                                        _array_111[i] = (*buffer++) != 0;
                                                    
                                                    // Discarding unknown OpenType containers
                                                    for(int i = 0; i < *_tmp_9279; i++) {
                                                        uint16_t* _tmp_9280 = (uint16_t*)buffer;  // OpenType length
                                                        buffer += 2;
                                                    
                                                        if(debug) {
                                                        }
                                                    
                                                        for(int i = 0; i < *_tmp_9280; i++)
                                                            buffer++;
                                                    }
                                                    
                                                }
                                        }
                                        else if(_choice_293 == 3)  // CHOICE ObjectClass  fieldName(other_sub_class)
                                        {
                                            its_container_v3_etsi_its_cdd_msgs::OtherSubClass _tmp_9281;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.other_sub_class.push_back(_tmp_9281);
                                        
                                            // Integer
                                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                            uint8_t* _tmp_9282 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_9282;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.other_sub_class[0].value = __aux64__;
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008267\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.other_sub_class[0].value) << 
                                                             " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.other_sub_class[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.other_sub_class[0].value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.other_sub_class[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].object_class.other_sub_class[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                return false;
                                            }
                                        }
                                        else
                                        {
                                            uint16_t* _tmp_9283 = (uint16_t*)buffer;  // OpenType length
                                            buffer += 2 + int(*_tmp_9283);            // Ignoring opentype data
                                        }
                                        
                                        // Field name: confidence
                                        // Integer
                                        // UINT8  min(1) max(101) span(101) datatype(UInt8)
                                        uint8_t* _tmp_9284 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_9284;
                                        __aux64__ += 1;
                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].confidence.value = __aux64__;
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008268\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].confidence.value) << 
                                                         " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].confidence.value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].confidence.value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 101) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].classification[0].elements[u].confidence.value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                                            return false;
                                        }
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position.size() != 0) {
                                // Field name: map_position
                                    // MapPosition  SEQUENCE
                                        //  mapReference             MapReference               OPTIONAL  
                                        //  laneId                   Identifier1B               OPTIONAL  
                                        //  connectionId             Identifier1B               OPTIONAL  
                                        //  longitudinalLanePosition LongitudinalLanePosition   OPTIONAL  
                                        //  ...
                                    uint8_t* _ext_flag_4171 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008269\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].: " << int(*_ext_flag_4171);
                                    }
                                    
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::MapReference _tmp_9285;
                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference.push_back(_tmp_9285);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008270\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::Identifier1B _tmp_9286;
                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].lane_id.push_back(_tmp_9286);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008271\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].lane_id " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::Identifier1B _tmp_9287;
                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].connection_id.push_back(_tmp_9287);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008272\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].connection_id " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::LongitudinalLanePosition _tmp_9288;
                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].longitudinal_lane_position.push_back(_tmp_9288);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008273\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].longitudinal_lane_position " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference.size() != 0) {
                                        // Field name: map_reference
                                        // Choice
                                           // #0  roadsegment   RoadSegmentReferenceId   
                                           // #1  intersection   IntersectionReferenceId   
                                        uint8_t _choice_296 = *(buffer++);
                                        
                                        if(_choice_296 == 0) {
                                            its_container_v3_etsi_its_cdd_msgs::RoadSegmentReferenceId _tmp_9289;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].roadsegment.push_back(_tmp_9289);
                                        
                                                // RoadSegmentReferenceId  SEQUENCE
                                                    //  region     Identifier2B   OPTIONAL  
                                                    //  id         Identifier2B     
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::Identifier2B _tmp_9290;
                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].roadsegment[0].region.push_back(_tmp_9290);
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m008274\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].roadsegment[0].region " << tools::green("present");
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].roadsegment[0].region.size() != 0) {
                                                    // Field name: region
                                                    // Integer
                                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                    uint16_t* _tmp_9291 = (uint16_t*) buffer; buffer += 2;
                                                    __aux64__ = *_tmp_9291;
                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].roadsegment[0].region[0].value = __aux64__;
                                                    
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m008275\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].roadsegment[0].region[0].value) << 
                                                                     " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].roadsegment[0].region[0].value: " << ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].roadsegment[0].region[0].value;
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                
                                                // Field name: id
                                                // Integer
                                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                uint16_t* _tmp_9292 = (uint16_t*) buffer; buffer += 2;
                                                __aux64__ = *_tmp_9292;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].roadsegment[0].id.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008276\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].roadsegment[0].id.value) << 
                                                                 " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].roadsegment[0].id.value: " << ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].roadsegment[0].id.value;
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                    return false;
                                                }
                                        }
                                        else if(_choice_296 == 1)  // CHOICE MapReference  fieldName(intersection)
                                        {
                                            its_container_v3_etsi_its_cdd_msgs::IntersectionReferenceId _tmp_9293;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].intersection.push_back(_tmp_9293);
                                        
                                                // IntersectionReferenceId  SEQUENCE
                                                    //  region     Identifier2B   OPTIONAL  
                                                    //  id         Identifier2B     
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::Identifier2B _tmp_9294;
                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].intersection[0].region.push_back(_tmp_9294);
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m008277\033[0m| ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].intersection[0].region " << tools::green("present");
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].intersection[0].region.size() != 0) {
                                                    // Field name: region
                                                    // Integer
                                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                    uint16_t* _tmp_9295 = (uint16_t*) buffer; buffer += 2;
                                                    __aux64__ = *_tmp_9295;
                                                    ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].intersection[0].region[0].value = __aux64__;
                                                    
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m008278\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].intersection[0].region[0].value) << 
                                                                     " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].intersection[0].region[0].value: " << ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].intersection[0].region[0].value;
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                
                                                // Field name: id
                                                // Integer
                                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                uint16_t* _tmp_9296 = (uint16_t*) buffer; buffer += 2;
                                                __aux64__ = *_tmp_9296;
                                                ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].intersection[0].id.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008279\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].intersection[0].id.value) << 
                                                                 " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].intersection[0].id.value: " << ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].intersection[0].id.value;
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                    return false;
                                                }
                                        }
                                        else
                                        {
                                            logger->warning() << "Wrong option (" << static_cast<int>(_choice_296) << ") selected in CHOICE MapReference in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].map_reference[0]'; message dropped.";
                                            return false;
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].lane_id.size() != 0) {
                                        // Field name: lane_id
                                        // Integer
                                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                        uint8_t* _tmp_9297 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_9297;
                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].lane_id[0].value = __aux64__;
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008280\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].lane_id[0].value) << 
                                                         " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].lane_id[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].lane_id[0].value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].lane_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].lane_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                            return false;
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].connection_id.size() != 0) {
                                        // Field name: connection_id
                                        // Integer
                                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                        uint8_t* _tmp_9298 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_9298;
                                        ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].connection_id[0].value = __aux64__;
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008281\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].connection_id[0].value) << 
                                                         " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].connection_id[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].connection_id[0].value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].connection_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].connection_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                            return false;
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].longitudinal_lane_position.size() != 0) {
                                        // Field name: longitudinal_lane_position
                                            // LongitudinalLanePosition  SEQUENCE
                                                //  longitudinalLanePositionValue      LongitudinalLanePositionValue          
                                                //  longitudinalLanePositionConfidence LongitudinalLanePositionConfidence     
                                            
                                            // Field name: longitudinal_lane_position_value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(32767) span(32768) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_9299 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value = *_tmp_9299;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008282\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: longitudinal_lane_position_confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(1023) span(1024) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_9300 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value = *_tmp_9300;
                                            __aux64__ = ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                            ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 1023) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' " << (__aux64__) << " exceeds max allowable (1023); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008283\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value) << " payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence: " <<
                                                             ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value << " (" << __aux64__ << ")";
                                            }
                                    }
                                    if(*_ext_flag_4171) { // from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0]. 
                                        uint8_t* _tmp_9301 = (uint8_t*) buffer++;  // number of extensions
                                        bool _array_112[*_tmp_9301];
                                        
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008284\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].map_position[0].: " << static_cast<unsigned int>(*_tmp_9301);
                                        
                                        // Extensions bytemap
                                        for(int i = 0; i < *_tmp_9301; i++)
                                            _array_112[i] = (*buffer++) != 0;
                                        
                                        // Discarding unknown OpenType containers
                                        for(int i = 0; i < *_tmp_9301; i++) {
                                            uint16_t* _tmp_9302 = (uint16_t*)buffer;  // OpenType length
                                            buffer += 2;
                                        
                                            if(debug) {
                                            }
                                        
                                            for(int i = 0; i < *_tmp_9302; i++)
                                                buffer++;
                                        }
                                        
                                    }
                            }
                            if(*_ext_flag_4068) { // from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o]. 
                                uint8_t* _tmp_9303 = (uint8_t*) buffer++;  // number of extensions
                                bool _array_113[*_tmp_9303];
                                
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008285\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[e].perceived_object_container[0].perceived_objects.elements[o].: " << static_cast<unsigned int>(*_tmp_9303);
                                
                                // Extensions bytemap
                                for(int i = 0; i < *_tmp_9303; i++)
                                    _array_113[i] = (*buffer++) != 0;
                                
                                // Discarding unknown OpenType containers
                                for(int i = 0; i < *_tmp_9303; i++) {
                                    uint16_t* _tmp_9304 = (uint16_t*)buffer;  // OpenType length
                                    buffer += 2;
                                
                                    if(debug) {
                                    }
                                
                                    for(int i = 0; i < *_tmp_9304; i++)
                                        buffer++;
                                }
                                
                            }
                    }
                    if(*_ext_flag_4066) { // from ros->payload.cpm_containers.elements[e].perceived_object_container[0]. 
                        uint8_t* _tmp_9305 = (uint8_t*) buffer++;  // number of extensions
                        bool _array_114[*_tmp_9305];
                        
                        if(debug)
                            logger->debug() << "|\033[38;5;94m008286\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[e].perceived_object_container[0].: " << static_cast<unsigned int>(*_tmp_9305);
                        
                        // Extensions bytemap
                        for(int i = 0; i < *_tmp_9305; i++)
                            _array_114[i] = (*buffer++) != 0;
                        
                        // Discarding unknown OpenType containers
                        for(int i = 0; i < *_tmp_9305; i++) {
                            uint16_t* _tmp_9306 = (uint16_t*)buffer;  // OpenType length
                            buffer += 2;
                        
                            if(debug) {
                            }
                        
                            for(int i = 0; i < *_tmp_9306; i++)
                                buffer++;
                        }
                        
                    }
            }
            else
            {
                logger->warning() << "Wrong option (" << static_cast<int>(_choice_287) << ") selected in CHOICE WrappedCpmContainer in 'payload.cpm_containers.elements[e]'; message dropped.";
                return false;
            }
        }
        if(*_ext_flag_3942) { // from ros->payload. 
            uint8_t* _tmp_9307 = (uint8_t*) buffer++;  // number of extensions
            bool _array_115[*_tmp_9307];
            
            if(debug)
                logger->debug() << "|\033[38;5;94m008287\033[0m| Reading number of exts from ros->payload.: " << static_cast<unsigned int>(*_tmp_9307);
            
            // Extensions bytemap
            for(int i = 0; i < *_tmp_9307; i++)
                _array_115[i] = (*buffer++) != 0;
            
            // Discarding unknown OpenType containers
            for(int i = 0; i < *_tmp_9307; i++) {
                uint16_t* _tmp_9308 = (uint16_t*)buffer;  // OpenType length
                buffer += 2;
            
                if(debug) {
                }
            
                for(int i = 0; i < *_tmp_9308; i++)
                    buffer++;
            }
            
        }
	
	        return true;
        }
    }
}