/*
 *
 * Copyright (C) German Aerospace Center e.V. (https://www.dlr.de)
 * Institute of Transportation Systems. (https://www.dlr.de/ts/)
 *
 * 
 * Eclipse ADORe, Automated Driving Open Research https://eclipse.org/adore
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 *
 * 
 * File automatically generated with DLR Wind v2
 * 
 * This file belongs to the DLR Wind project de.dlr.ts.v2x:cpm_v1_23:1.0
 * 
 * Module: CPM_PDU_Descriptions {itu-t(0) identified-organization(4) etsi(0) itsDomain(5) 
 *         wg1(1) ts(103324) cpm(1) major-version-1(1) minor-version-1(1)}
 * 
 * For support contact v2x-ts@dlr.de
 * 
 *
 */
#include <cpm_v1_23_cpm_pdu_descriptions_wer_decoder.h>


/**
 *
 */
namespace wind
{
    namespace decoder_cpm_v1_23_cpm_pdu_descriptions
    {        
        
        #if WIND_ROS_VERSION == 1
          bool WerDecoder::decode(cpm_v1_23_cpm_pdu_descriptions_msgs::CollectivePerceptionMessage* ros, const uint8_t *buffer)
        #else
          bool WerDecoder::decode(cpm_v1_23_cpm_pdu_descriptions_msgs::msg::CollectivePerceptionMessage* ros, const uint8_t *buffer)
        #endif
        {
            const uint8_t *start = buffer;
            int64_t __aux64__;
	
    // CollectivePerceptionMessage  SEQUENCE
        //  its_header ItsPduHeader     
        //  payload    CpmPayload       
    
    // Field name: its_header
        // ItsPduHeader  SEQUENCE
            //  protocolVersion OrdinalNumber1B     
            //  messageId       MessageId           
            //  stationId       StationId           
        
        // Field name: protocol_version
        // Integer
        // UINT8  min(0) max(255) span(256) datatype(UInt8)
        uint8_t* _tmp_576 = (uint8_t*) buffer++;
        __aux64__ = *_tmp_576;
        ros->its_header.protocol_version.value = __aux64__;
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m000412\033[0m| " << tools::getTypeName(ros->its_header.protocol_version.value) << 
                         " its_header.protocol_version.value: " << static_cast<int>(ros->its_header.protocol_version.value);
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->warning() << "Error: Value in 'its_header.protocol_version.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 255) {
            logger->warning() << "Error: Value in 'its_header.protocol_version.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
            return false;
        }
        
        // Field name: message_id
        // Integer
        // UINT8  min(0) max(255) span(256) datatype(UInt8)
        uint8_t* _tmp_577 = (uint8_t*) buffer++;
        __aux64__ = *_tmp_577;
        ros->its_header.message_id.value = __aux64__;
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m000413\033[0m| " << tools::getTypeName(ros->its_header.message_id.value) << 
                         " its_header.message_id.value: " << static_cast<int>(ros->its_header.message_id.value);
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->warning() << "Error: Value in 'its_header.message_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 255) {
            logger->warning() << "Error: Value in 'its_header.message_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
            return false;
        }
        
        // Field name: station_id
        // Integer
        // UINT32  min(0) max(4294967295) span(4294967296) datatype(UInt32)
        uint32_t* _tmp_578 = (uint32_t*) buffer; buffer += 4;
        __aux64__ = *_tmp_578;
        ros->its_header.station_id.value = __aux64__;
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m000414\033[0m| " << tools::getTypeName(ros->its_header.station_id.value) << 
                         " its_header.station_id.value: " << ros->its_header.station_id.value;
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->warning() << "Error: Value in 'its_header.station_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 4294967295) {
            logger->warning() << "Error: Value in 'its_header.station_id.value' " << (__aux64__) << " exceeds max allowable (4294967295); message dropped.";
            return false;
        }
    
    // Field name: payload
        // CpmPayload  SEQUENCE
            //  managementContainer ManagementContainer                
            //  cpmContainers       ConstraintWrappedCpmContainers     
            //  ...
        uint8_t* _ext_flag_277 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m000415\033[0m| Reading ext flag from ros->payload.: " << int(*_ext_flag_277);
        }
        
        
        // Field name: management_container
            // ManagementContainer  SEQUENCE
                //  referenceTime     TimestampIts                
                //  referencePosition ReferencePosition           
                //  segmentationInfo  MessageSegmentationInfo   OPTIONAL  
                //  messageRateRange  MessageRateRange          OPTIONAL  
                //  ...
            uint8_t* _ext_flag_278 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.management_container.
            
            if(debug) {
                logger->debug() << "|\033[38;5;94m000416\033[0m| Reading ext flag from ros->payload.management_container.: " << int(*_ext_flag_278);
            }
            
            if(*(buffer++)) { 
                its_container_v3_etsi_its_cdd_msgs::MessageSegmentationInfo _tmp_579;
                ros->payload.management_container.segmentation_info.push_back(_tmp_579);
            
                if(debug)
                    logger->debug() << "|\033[38;5;94m000417\033[0m| ros->payload.management_container.segmentation_info " << tools::green("present");
            }
            if(*(buffer++)) { 
                cpm_v1_23_cpm_pdu_descriptions_msgs::MessageRateRange _tmp_580;
                ros->payload.management_container.message_rate_range.push_back(_tmp_580);
            
                if(debug)
                    logger->debug() << "|\033[38;5;94m000418\033[0m| ros->payload.management_container.message_rate_range " << tools::green("present");
            }
            
            // Field name: reference_time
            // Real
            // Float
            // FLOAT  min(0) max(4398046511103) span(4398046511104) scaleDivisor(1000.0) dataType(Float)
            uint64_t* _tmp_581 = (uint64_t*)buffer; buffer += 8;
            ros->payload.management_container.reference_time.value = *_tmp_581;
            __aux64__ = ros->payload.management_container.reference_time.value;
            ros->payload.management_container.reference_time.value /= 1000.0;
            
            // ******************* MIN validator *******************
            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                logger->warning() << "Error: Value in 'payload.management_container.reference_time.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                return false;
            }
            // ******************* MAX validator *******************
            if(VALIDATORS_ENABLED && __aux64__ > 4398046511103) {
                logger->warning() << "Error: Value in 'payload.management_container.reference_time.value' " << (__aux64__) << " exceeds max allowable (4398046511103); message dropped.";
                return false;
            }
            
            if(debug) {
                logger->debug() << "|\033[38;5;94m000419\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_time.value) << " payload.management_container.reference_time: " <<
                             ros->payload.management_container.reference_time.value << " (" << __aux64__ << ")";
            }
            
            // Field name: reference_position
                // ReferencePosition  SEQUENCE
                    //  latitude                  Latitude                 
                    //  longitude                 Longitude                
                    //  positionConfidenceEllipse PosConfidenceEllipse     
                    //  altitude                  Altitude                 
                
                // Field name: latitude
                // Real
                // Double
                // DOUBLE  min(-900000000) max(900000001) span(1800000002) scaleDivisor(1.0E7) dataType(Double)
                uint32_t* _tmp_582 = (uint32_t*) buffer; buffer += 4;
                ros->payload.management_container.reference_position.latitude.value = *_tmp_582;
                ros->payload.management_container.reference_position.latitude.value += -900000000;
                __aux64__ = ros->payload.management_container.reference_position.latitude.value;
                ros->payload.management_container.reference_position.latitude.value /= 1.0E7;
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < -900000000) {
                    logger->warning() << "Error: Value in 'payload.management_container.reference_position.latitude.value' " << (__aux64__) << " is less than allowable (-900000000); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 900000001) {
                    logger->warning() << "Error: Value in 'payload.management_container.reference_position.latitude.value' " << (__aux64__) << " exceeds max allowable (900000001); message dropped.";
                    return false;
                }
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m000420\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.latitude.value) << " payload.management_container.reference_position.latitude: " <<
                                 ros->payload.management_container.reference_position.latitude.value << " (" << __aux64__ << ")";
                }
                
                // Field name: longitude
                // Real
                // Double
                // DOUBLE  min(-1800000000) max(1800000001) span(3600000002) scaleDivisor(1.0E7) dataType(Double)
                uint32_t* _tmp_583 = (uint32_t*) buffer; buffer += 4;
                ros->payload.management_container.reference_position.longitude.value = *_tmp_583;
                ros->payload.management_container.reference_position.longitude.value += -1800000000;
                __aux64__ = ros->payload.management_container.reference_position.longitude.value;
                ros->payload.management_container.reference_position.longitude.value /= 1.0E7;
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < -1800000000) {
                    logger->warning() << "Error: Value in 'payload.management_container.reference_position.longitude.value' " << (__aux64__) << " is less than allowable (-1800000000); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 1800000001) {
                    logger->warning() << "Error: Value in 'payload.management_container.reference_position.longitude.value' " << (__aux64__) << " exceeds max allowable (1800000001); message dropped.";
                    return false;
                }
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m000421\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.longitude.value) << " payload.management_container.reference_position.longitude: " <<
                                 ros->payload.management_container.reference_position.longitude.value << " (" << __aux64__ << ")";
                }
                
                // Field name: position_confidence_ellipse
                    // PosConfidenceEllipse  SEQUENCE
                        //  semiMajorConfidence  SemiAxisLength     
                        //  semiMinorConfidence  SemiAxisLength     
                        //  semiMajorOrientation HeadingValue       
                    
                    // Field name: semi_major_confidence
                    // Real
                    // Float
                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                    uint16_t* _tmp_584 = (uint16_t*) buffer; buffer += 2;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value = *_tmp_584;
                    __aux64__ = ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value /= 100.0;
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                        return false;
                    }
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m000422\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value) << " payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence: " <<
                                     ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value << " (" << __aux64__ << ")";
                    }
                    
                    // Field name: semi_minor_confidence
                    // Real
                    // Float
                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                    uint16_t* _tmp_585 = (uint16_t*) buffer; buffer += 2;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value = *_tmp_585;
                    __aux64__ = ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value /= 100.0;
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                        return false;
                    }
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m000423\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value) << " payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence: " <<
                                     ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value << " (" << __aux64__ << ")";
                    }
                    
                    // Field name: semi_major_orientation
                    // Integer
                    // UINT16  min(0) max(3601) span(3602) datatype(UInt16)
                    uint16_t* _tmp_586 = (uint16_t*) buffer; buffer += 2;
                    __aux64__ = *_tmp_586;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value = __aux64__;
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m000424\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value) << 
                                     " payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value: " << ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value;
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                        return false;
                    }
                
                // Field name: altitude
                    // Altitude  SEQUENCE
                        //  altitudeValue      AltitudeValue          
                        //  altitudeConfidence AltitudeConfidence     
                    
                    // Field name: altitude_value
                    // Real
                    // Float
                    // FLOAT  min(-100000) max(800001) span(900002) scaleDivisor(100.0) dataType(Float)
                    uint32_t* _tmp_587 = (uint32_t*) buffer; buffer += 4;
                    ros->payload.management_container.reference_position.altitude.altitude_value.value = *_tmp_587;
                    ros->payload.management_container.reference_position.altitude.altitude_value.value += -100000;
                    __aux64__ = ros->payload.management_container.reference_position.altitude.altitude_value.value;
                    ros->payload.management_container.reference_position.altitude.altitude_value.value /= 100.0;
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < -100000) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.altitude.altitude_value.value' " << (__aux64__) << " is less than allowable (-100000); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 800001) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.altitude.altitude_value.value' " << (__aux64__) << " exceeds max allowable (800001); message dropped.";
                        return false;
                    }
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m000425\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.altitude.altitude_value.value) << " payload.management_container.reference_position.altitude.altitude_value: " <<
                                     ros->payload.management_container.reference_position.altitude.altitude_value.value << " (" << __aux64__ << ")";
                    }
                    
                    // Field name: altitude_confidence
                    // Enumerated
                    // INT32  min(0) max(15) span(16) datatype(Int32)
                    uint8_t* _tmp_588 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_588;
                    __aux64__ += 0;
                    ros->payload.management_container.reference_position.altitude.altitude_confidence.value = __aux64__;
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.altitude.altitude_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 15) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.altitude.altitude_confidence.value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                        return false;
                    }
                    
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m000426\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.altitude.altitude_confidence.value) << 
                                     " payload.management_container.reference_position.altitude.altitude_confidence.value: " << static_cast<int>(ros->payload.management_container.reference_position.altitude.altitude_confidence.value);
                    }
            
            if(ros->payload.management_container.segmentation_info.size() != 0) {
                // Field name: segmentation_info
                    // MessageSegmentationInfo  SEQUENCE
                        //  totalMsgNo CardinalNumber3b     
                        //  thisMsgNo  OrdinalNumber3b      
                    
                    // Field name: total_msg_no
                    // Integer
                    // UINT8  min(1) max(8) span(8) datatype(UInt8)
                    uint8_t* _tmp_589 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_589;
                    __aux64__ += 1;
                    ros->payload.management_container.segmentation_info[0].total_msg_no.value = __aux64__;
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m000427\033[0m| " << tools::getTypeName(ros->payload.management_container.segmentation_info[0].total_msg_no.value) << 
                                     " payload.management_container.segmentation_info[0].total_msg_no.value: " << static_cast<int>(ros->payload.management_container.segmentation_info[0].total_msg_no.value);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                        logger->warning() << "Error: Value in 'payload.management_container.segmentation_info[0].total_msg_no.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 8) {
                        logger->warning() << "Error: Value in 'payload.management_container.segmentation_info[0].total_msg_no.value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                        return false;
                    }
                    
                    // Field name: this_msg_no
                    // Integer
                    // UINT8  min(1) max(8) span(8) datatype(UInt8)
                    uint8_t* _tmp_590 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_590;
                    __aux64__ += 1;
                    ros->payload.management_container.segmentation_info[0].this_msg_no.value = __aux64__;
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m000428\033[0m| " << tools::getTypeName(ros->payload.management_container.segmentation_info[0].this_msg_no.value) << 
                                     " payload.management_container.segmentation_info[0].this_msg_no.value: " << static_cast<int>(ros->payload.management_container.segmentation_info[0].this_msg_no.value);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                        logger->warning() << "Error: Value in 'payload.management_container.segmentation_info[0].this_msg_no.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 8) {
                        logger->warning() << "Error: Value in 'payload.management_container.segmentation_info[0].this_msg_no.value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                        return false;
                    }
            }
            
            if(ros->payload.management_container.message_rate_range.size() != 0) {
                // Field name: message_rate_range
                    // MessageRateRange  SEQUENCE
                        //  messageRateMin MessageRateHz     
                        //  messageRateMax MessageRateHz     
                    
                    // Field name: message_rate_min
                        // MessageRateHz  SEQUENCE
                            //  mantissa   MessageRateHz_mantissa     
                            //  exponent   MessageRateHz_exponent     
                        
                        // Field name: mantissa
                        // Integer
                        // UINT8  min(1) max(100) span(100) datatype(UInt8)
                        uint8_t* _tmp_591 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_591;
                        __aux64__ += 1;
                        ros->payload.management_container.message_rate_range[0].message_rate_min.mantissa.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m000429\033[0m| " << tools::getTypeName(ros->payload.management_container.message_rate_range[0].message_rate_min.mantissa.value) << 
                                         " payload.management_container.message_rate_range[0].message_rate_min.mantissa.value: " << static_cast<int>(ros->payload.management_container.message_rate_range[0].message_rate_min.mantissa.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_min.mantissa.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 100) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_min.mantissa.value' " << (__aux64__) << " exceeds max allowable (100); message dropped.";
                            return false;
                        }
                        
                        // Field name: exponent
                        // Integer
                        // INT8  min(-5) max(2) span(8) datatype(Int8)
                        uint8_t* _tmp_592 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_592;
                        __aux64__ += -5;
                        ros->payload.management_container.message_rate_range[0].message_rate_min.exponent.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m000430\033[0m| " << tools::getTypeName(ros->payload.management_container.message_rate_range[0].message_rate_min.exponent.value) << 
                                         " payload.management_container.message_rate_range[0].message_rate_min.exponent.value: " << static_cast<int>(ros->payload.management_container.message_rate_range[0].message_rate_min.exponent.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < -5) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_min.exponent.value' " << (__aux64__) << " is less than allowable (-5); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 2) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_min.exponent.value' " << (__aux64__) << " exceeds max allowable (2); message dropped.";
                            return false;
                        }
                    
                    // Field name: message_rate_max
                        // MessageRateHz  SEQUENCE
                            //  mantissa   MessageRateHz_mantissa     
                            //  exponent   MessageRateHz_exponent     
                        
                        // Field name: mantissa
                        // Integer
                        // UINT8  min(1) max(100) span(100) datatype(UInt8)
                        uint8_t* _tmp_593 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_593;
                        __aux64__ += 1;
                        ros->payload.management_container.message_rate_range[0].message_rate_max.mantissa.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m000431\033[0m| " << tools::getTypeName(ros->payload.management_container.message_rate_range[0].message_rate_max.mantissa.value) << 
                                         " payload.management_container.message_rate_range[0].message_rate_max.mantissa.value: " << static_cast<int>(ros->payload.management_container.message_rate_range[0].message_rate_max.mantissa.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_max.mantissa.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 100) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_max.mantissa.value' " << (__aux64__) << " exceeds max allowable (100); message dropped.";
                            return false;
                        }
                        
                        // Field name: exponent
                        // Integer
                        // INT8  min(-5) max(2) span(8) datatype(Int8)
                        uint8_t* _tmp_594 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_594;
                        __aux64__ += -5;
                        ros->payload.management_container.message_rate_range[0].message_rate_max.exponent.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m000432\033[0m| " << tools::getTypeName(ros->payload.management_container.message_rate_range[0].message_rate_max.exponent.value) << 
                                         " payload.management_container.message_rate_range[0].message_rate_max.exponent.value: " << static_cast<int>(ros->payload.management_container.message_rate_range[0].message_rate_max.exponent.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < -5) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_max.exponent.value' " << (__aux64__) << " is less than allowable (-5); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 2) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_max.exponent.value' " << (__aux64__) << " exceeds max allowable (2); message dropped.";
                            return false;
                        }
            }
            if(*_ext_flag_278) { // from ros->payload.management_container. 
                uint8_t* _tmp_595 = (uint8_t*) buffer++;  // number of extensions
                bool _array_1[*_tmp_595];
                
                if(debug)
                    logger->debug() << "|\033[38;5;94m000433\033[0m| Reading number of exts from ros->payload.management_container.: " << static_cast<unsigned int>(*_tmp_595);
                
                // Extensions bytemap
                for(int i = 0; i < *_tmp_595; i++)
                    _array_1[i] = (*buffer++) != 0;
                
                // Discarding unknown OpenType containers
                for(int i = 0; i < *_tmp_595; i++) {
                    uint16_t* _tmp_596 = (uint16_t*)buffer;  // OpenType length
                    buffer += 2;
                
                    if(debug) {
                    }
                
                    for(int i = 0; i < *_tmp_596; i++)
                        buffer++;
                }
                
            }
        
        // Field name: cpm_containers
        // SequenceOf
        // Data Type UInt8
        // SEQUENCE_OF  min(1) max(8) span(8)
        uint8_t* _ext_flag_286 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m000434\033[0m| Reading ext flag from ros->payload.cpm_containers.: " << int(*_ext_flag_286);
        }
        
        int16_t* _tmp_597 = (int16_t*)buffer;
        buffer += 2;
        __aux64__ = *_tmp_597;
        __aux64__ += 1;     // +min
        
        int _if__tmp_597 = __aux64__;
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m000435\033[0m| SequenceOf ros->payload.cpm_containers. size: " << int(*_tmp_597);
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 1) {
            logger->warning() << "Error: Value in 'payload.cpm_containers.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 8) {
            logger->warning() << "Error: Value in 'payload.cpm_containers.value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
            return false;
        }
        
        
        for(int u = 0; u < _if__tmp_597; u++) {
            cpm_v1_23_cpm_pdu_descriptions_msgs::WrappedCpmContainer seqof_u;  // CHOICE
            ros->payload.cpm_containers.elements.push_back(seqof_u);
        
            // Choice
               // #0  originatingVehicleContainer   OriginatingVehicleContainer   
               // #1  originatingRsuContainer   OriginatingRsuContainer   
               // #2  sensorInformationContainer   SensorInformationContainer   
               // #3  perceptionRegionContainer   PerceptionRegionContainer   
               // #4  perceivedObjectContainer   PerceivedObjectContainer   
            uint8_t _choice_11 = *(buffer++);
            
            if(_choice_11 == 0) {
                cpm_v1_23_cpm_originatingstationcontainers_msgs::OriginatingVehicleContainer _tmp_598;
                ros->payload.cpm_containers.elements[u].originating_vehicle_container.push_back(_tmp_598);
            
                    // OriginatingVehicleContainer  SEQUENCE
                        //  orientationAngle Wgs84Angle         
                        //  pitchAngle       CartesianAngle   OPTIONAL  
                        //  rollAngle        CartesianAngle   OPTIONAL  
                        //  trailerDataSet   TrailerDataSet   OPTIONAL  
                        //  ...
                    uint8_t* _ext_flag_288 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m000436\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].: " << int(*_ext_flag_288);
                    }
                    
                    if(*(buffer++)) { 
                        its_container_v3_etsi_its_cdd_msgs::CartesianAngle _tmp_599;
                        ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].pitch_angle.push_back(_tmp_599);
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000437\033[0m| ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].pitch_angle " << tools::green("present");
                    }
                    if(*(buffer++)) { 
                        its_container_v3_etsi_its_cdd_msgs::CartesianAngle _tmp_600;
                        ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].roll_angle.push_back(_tmp_600);
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000438\033[0m| ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].roll_angle " << tools::green("present");
                    }
                    if(*(buffer++)) { 
                        cpm_v1_23_cpm_originatingstationcontainers_msgs::TrailerDataSet _tmp_601;
                        ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set.push_back(_tmp_601);
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000439\033[0m| ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set " << tools::green("present");
                    }
                    
                    // Field name: orientation_angle
                        // Wgs84Angle  SEQUENCE
                            //  value      Wgs84AngleValue          
                            //  confidence Wgs84AngleConfidence     
                        
                        // Field name: value
                        // Real
                        // Float
                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                        uint16_t* _tmp_602 = (uint16_t*) buffer; buffer += 2;
                        ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].orientation_angle.value.value = *_tmp_602;
                        __aux64__ = ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].orientation_angle.value.value;
                        ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].orientation_angle.value.value /= 10.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].orientation_angle.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].orientation_angle.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m000440\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].orientation_angle.value.value) << " payload.cpm_containers.elements[u].originating_vehicle_container[0].orientation_angle.value: " <<
                                         ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].orientation_angle.value.value << " (" << __aux64__ << ")";
                        }
                        
                        // Field name: confidence
                        // Real
                        // Float
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                        uint8_t* _tmp_603 = (uint8_t*) buffer++;
                        ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].orientation_angle.confidence.value = *_tmp_603;
                        ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].orientation_angle.confidence.value += 1;
                        __aux64__ = ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].orientation_angle.confidence.value;
                        ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].orientation_angle.confidence.value /= 10.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].orientation_angle.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].orientation_angle.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m000441\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].orientation_angle.confidence.value) << " payload.cpm_containers.elements[u].originating_vehicle_container[0].orientation_angle.confidence: " <<
                                         ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].orientation_angle.confidence.value << " (" << __aux64__ << ")";
                        }
                    
                    if(ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].pitch_angle.size() != 0) {
                        // Field name: pitch_angle
                            // CartesianAngle  SEQUENCE
                                //  value      CartesianAngleValue     
                                //  confidence AngleConfidence         
                            
                            // Field name: value
                            // Real
                            // Float
                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                            uint16_t* _tmp_604 = (uint16_t*) buffer; buffer += 2;
                            ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].pitch_angle[0].value.value = *_tmp_604;
                            __aux64__ = ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].pitch_angle[0].value.value;
                            ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].pitch_angle[0].value.value /= 10.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].pitch_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].pitch_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m000442\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].pitch_angle[0].value.value) << " payload.cpm_containers.elements[u].originating_vehicle_container[0].pitch_angle[0].value: " <<
                                             ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].pitch_angle[0].value.value << " (" << __aux64__ << ")";
                            }
                            
                            // Field name: confidence
                            // Real
                            // Float
                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                            uint8_t* _tmp_605 = (uint8_t*) buffer++;
                            ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].pitch_angle[0].confidence.value = *_tmp_605;
                            ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].pitch_angle[0].confidence.value += 1;
                            __aux64__ = ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].pitch_angle[0].confidence.value;
                            ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].pitch_angle[0].confidence.value /= 10.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].pitch_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].pitch_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m000443\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].pitch_angle[0].confidence.value) << " payload.cpm_containers.elements[u].originating_vehicle_container[0].pitch_angle[0].confidence: " <<
                                             ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].pitch_angle[0].confidence.value << " (" << __aux64__ << ")";
                            }
                    }
                    
                    if(ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].roll_angle.size() != 0) {
                        // Field name: roll_angle
                            // CartesianAngle  SEQUENCE
                                //  value      CartesianAngleValue     
                                //  confidence AngleConfidence         
                            
                            // Field name: value
                            // Real
                            // Float
                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                            uint16_t* _tmp_606 = (uint16_t*) buffer; buffer += 2;
                            ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].roll_angle[0].value.value = *_tmp_606;
                            __aux64__ = ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].roll_angle[0].value.value;
                            ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].roll_angle[0].value.value /= 10.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].roll_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].roll_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m000444\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].roll_angle[0].value.value) << " payload.cpm_containers.elements[u].originating_vehicle_container[0].roll_angle[0].value: " <<
                                             ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].roll_angle[0].value.value << " (" << __aux64__ << ")";
                            }
                            
                            // Field name: confidence
                            // Real
                            // Float
                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                            uint8_t* _tmp_607 = (uint8_t*) buffer++;
                            ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].roll_angle[0].confidence.value = *_tmp_607;
                            ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].roll_angle[0].confidence.value += 1;
                            __aux64__ = ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].roll_angle[0].confidence.value;
                            ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].roll_angle[0].confidence.value /= 10.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].roll_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].roll_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m000445\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].roll_angle[0].confidence.value) << " payload.cpm_containers.elements[u].originating_vehicle_container[0].roll_angle[0].confidence: " <<
                                             ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].roll_angle[0].confidence.value << " (" << __aux64__ << ")";
                            }
                    }
                    
                    if(ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set.size() != 0) {
                        // Field name: trailer_data_set
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(8) span(8)
                        uint8_t* _ext_flag_295 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m000446\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].: " << int(*_ext_flag_295);
                        }
                        
                        int16_t* _tmp_608 = (int16_t*)buffer;
                        buffer += 2;
                        __aux64__ = *_tmp_608;
                        __aux64__ += 1;     // +min
                        
                        int _if__tmp_608 = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m000447\033[0m| SequenceOf ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0]. size: " << int(*_tmp_608);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 8) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                            return false;
                        }
                        
                        
                        for(int v = 0; v < _if__tmp_608; v++) {
                            its_container_v3_etsi_its_cdd_msgs::TrailerData seqof_v;  // SEQUENCE
                            ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements.push_back(seqof_v);
                        
                                // TrailerData  SEQUENCE
                                    //  refPointId       Identifier1B         
                                    //  hitchPointOffset StandardLength1B     
                                    //  frontOverhang    StandardLength1B   OPTIONAL  
                                    //  rearOverhang     StandardLength1B   OPTIONAL  
                                    //  trailerWidth     VehicleWidth       OPTIONAL  
                                    //  hitchAngle       CartesianAngle       
                                    //  ...
                                uint8_t* _ext_flag_296 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000448\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].: " << int(*_ext_flag_296);
                                }
                                
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::StandardLength1B _tmp_609;
                                    ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].front_overhang.push_back(_tmp_609);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000449\033[0m| ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].front_overhang " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::StandardLength1B _tmp_610;
                                    ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].rear_overhang.push_back(_tmp_610);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000450\033[0m| ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].rear_overhang " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::VehicleWidth _tmp_611;
                                    ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].trailer_width.push_back(_tmp_611);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000451\033[0m| ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].trailer_width " << tools::green("present");
                                }
                                
                                // Field name: ref_point_id
                                // Integer
                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                uint8_t* _tmp_612 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_612;
                                ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].ref_point_id.value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000452\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].ref_point_id.value) << 
                                                 " payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].ref_point_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].ref_point_id.value);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].ref_point_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].ref_point_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                    return false;
                                }
                                
                                // Field name: hitch_point_offset
                                // Real
                                // Float
                                // FLOAT  min(0) max(255) span(256) scaleDivisor(10.0) dataType(Float)
                                uint8_t* _tmp_613 = (uint8_t*) buffer++;
                                ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_point_offset.value = *_tmp_613;
                                __aux64__ = ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_point_offset.value;
                                ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_point_offset.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_point_offset.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_point_offset.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000453\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_point_offset.value) << " payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_point_offset: " <<
                                                 ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_point_offset.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].front_overhang.size() != 0) {
                                    // Field name: front_overhang
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(255) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_614 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].front_overhang[0].value = *_tmp_614;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].front_overhang[0].value;
                                    ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].front_overhang[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].front_overhang[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].front_overhang[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000454\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].front_overhang[0].value) << " payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].front_overhang[0]: " <<
                                                     ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].front_overhang[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].rear_overhang.size() != 0) {
                                    // Field name: rear_overhang
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(255) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_615 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].rear_overhang[0].value = *_tmp_615;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].rear_overhang[0].value;
                                    ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].rear_overhang[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].rear_overhang[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].rear_overhang[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000455\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].rear_overhang[0].value) << " payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].rear_overhang[0]: " <<
                                                     ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].rear_overhang[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].trailer_width.size() != 0) {
                                    // Field name: trailer_width
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(62) span(62) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_616 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].trailer_width[0].value = *_tmp_616;
                                    ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].trailer_width[0].value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].trailer_width[0].value;
                                    ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].trailer_width[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].trailer_width[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 62) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].trailer_width[0].value' " << (__aux64__) << " exceeds max allowable (62); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000456\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].trailer_width[0].value) << " payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].trailer_width[0]: " <<
                                                     ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].trailer_width[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                // Field name: hitch_angle
                                    // CartesianAngle  SEQUENCE
                                        //  value      CartesianAngleValue     
                                        //  confidence AngleConfidence         
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_617 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_angle.value.value = *_tmp_617;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_angle.value.value;
                                    ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_angle.value.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_angle.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_angle.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000457\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_angle.value.value) << " payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_angle.value: " <<
                                                     ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_angle.value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_618 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_angle.confidence.value = *_tmp_618;
                                    ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_angle.confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_angle.confidence.value;
                                    ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_angle.confidence.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_angle.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_angle.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000458\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_angle.confidence.value) << " payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_angle.confidence: " <<
                                                     ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].hitch_angle.confidence.value << " (" << __aux64__ << ")";
                                    }
                                if(*_ext_flag_296) { // from ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v]. 
                                    uint8_t* _tmp_619 = (uint8_t*) buffer++;  // number of extensions
                                    bool _array_2[*_tmp_619];
                                    
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000459\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].trailer_data_set[0].elements[v].: " << static_cast<unsigned int>(*_tmp_619);
                                    
                                    // Extensions bytemap
                                    for(int i = 0; i < *_tmp_619; i++)
                                        _array_2[i] = (*buffer++) != 0;
                                    
                                    // Discarding unknown OpenType containers
                                    for(int i = 0; i < *_tmp_619; i++) {
                                        uint16_t* _tmp_620 = (uint16_t*)buffer;  // OpenType length
                                        buffer += 2;
                                    
                                        if(debug) {
                                        }
                                    
                                        for(int i = 0; i < *_tmp_620; i++)
                                            buffer++;
                                    }
                                    
                                }
                        }
                    }
                    if(*_ext_flag_288) { // from ros->payload.cpm_containers.elements[u].originating_vehicle_container[0]. 
                        uint8_t* _tmp_621 = (uint8_t*) buffer++;  // number of extensions
                        bool _array_3[*_tmp_621];
                        
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000460\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[u].originating_vehicle_container[0].: " << static_cast<unsigned int>(*_tmp_621);
                        
                        // Extensions bytemap
                        for(int i = 0; i < *_tmp_621; i++)
                            _array_3[i] = (*buffer++) != 0;
                        
                        // Discarding unknown OpenType containers
                        for(int i = 0; i < *_tmp_621; i++) {
                            uint16_t* _tmp_622 = (uint16_t*)buffer;  // OpenType length
                            buffer += 2;
                        
                            if(debug) {
                            }
                        
                            for(int i = 0; i < *_tmp_622; i++)
                                buffer++;
                        }
                        
                    }
            }
            else if(_choice_11 == 1)  // CHOICE WrappedCpmContainer  fieldName(originating_rsu_container)
            {
                cpm_v1_23_cpm_originatingstationcontainers_msgs::OriginatingRsuContainer _tmp_623;
                ros->payload.cpm_containers.elements[u].originating_rsu_container.push_back(_tmp_623);
            
                    // OriginatingRsuContainer  SEQUENCE
                        //  mapReference MapReference   OPTIONAL  
                        //  ...
                    uint8_t* _ext_flag_303 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].originating_rsu_container[0].
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m000461\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].originating_rsu_container[0].: " << int(*_ext_flag_303);
                    }
                    
                    if(*(buffer++)) { 
                        its_container_v3_etsi_its_cdd_msgs::MapReference _tmp_624;
                        ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference.push_back(_tmp_624);
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000462\033[0m| ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference " << tools::green("present");
                    }
                    
                    if(ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference.size() != 0) {
                        // Field name: map_reference
                        // Choice
                           // #0  roadsegment   RoadSegmentReferenceId   
                           // #1  intersection   IntersectionReferenceId   
                        uint8_t _choice_12 = *(buffer++);
                        
                        if(_choice_12 == 0) {
                            its_container_v3_etsi_its_cdd_msgs::RoadSegmentReferenceId _tmp_625;
                            ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].roadsegment.push_back(_tmp_625);
                        
                                // RoadSegmentReferenceId  SEQUENCE
                                    //  region     Identifier2B   OPTIONAL  
                                    //  id         Identifier2B     
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::Identifier2B _tmp_626;
                                    ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].roadsegment[0].region.push_back(_tmp_626);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000463\033[0m| ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].roadsegment[0].region " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].roadsegment[0].region.size() != 0) {
                                    // Field name: region
                                    // Integer
                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                    uint16_t* _tmp_627 = (uint16_t*) buffer; buffer += 2;
                                    __aux64__ = *_tmp_627;
                                    ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000464\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value) << 
                                                     " payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value: " << ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value;
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                        return false;
                                    }
                                }
                                
                                // Field name: id
                                // Integer
                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                uint16_t* _tmp_628 = (uint16_t*) buffer; buffer += 2;
                                __aux64__ = *_tmp_628;
                                ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000465\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value) << 
                                                 " payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value: " << ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                        }
                        else if(_choice_12 == 1)  // CHOICE MapReference  fieldName(intersection)
                        {
                            its_container_v3_etsi_its_cdd_msgs::IntersectionReferenceId _tmp_629;
                            ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].intersection.push_back(_tmp_629);
                        
                                // IntersectionReferenceId  SEQUENCE
                                    //  region     Identifier2B   OPTIONAL  
                                    //  id         Identifier2B     
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::Identifier2B _tmp_630;
                                    ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].intersection[0].region.push_back(_tmp_630);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000466\033[0m| ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].intersection[0].region " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].intersection[0].region.size() != 0) {
                                    // Field name: region
                                    // Integer
                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                    uint16_t* _tmp_631 = (uint16_t*) buffer; buffer += 2;
                                    __aux64__ = *_tmp_631;
                                    ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000467\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value) << 
                                                     " payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value: " << ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value;
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                        return false;
                                    }
                                }
                                
                                // Field name: id
                                // Integer
                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                uint16_t* _tmp_632 = (uint16_t*) buffer; buffer += 2;
                                __aux64__ = *_tmp_632;
                                ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].intersection[0].id.value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000468\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].intersection[0].id.value) << 
                                                 " payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].intersection[0].id.value: " << ros->payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].intersection[0].id.value;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                        }
                        else
                        {
                            logger->warning() << "Wrong option (" << static_cast<int>(_choice_12) << ") selected in CHOICE MapReference in 'payload.cpm_containers.elements[u].originating_rsu_container[0].map_reference[0]'; message dropped.";
                            return false;
                        }
                    }
                    if(*_ext_flag_303) { // from ros->payload.cpm_containers.elements[u].originating_rsu_container[0]. 
                        uint8_t* _tmp_633 = (uint8_t*) buffer++;  // number of extensions
                        bool _array_4[*_tmp_633];
                        
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000469\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[u].originating_rsu_container[0].: " << static_cast<unsigned int>(*_tmp_633);
                        
                        // Extensions bytemap
                        for(int i = 0; i < *_tmp_633; i++)
                            _array_4[i] = (*buffer++) != 0;
                        
                        // Discarding unknown OpenType containers
                        for(int i = 0; i < *_tmp_633; i++) {
                            uint16_t* _tmp_634 = (uint16_t*)buffer;  // OpenType length
                            buffer += 2;
                        
                            if(debug) {
                            }
                        
                            for(int i = 0; i < *_tmp_634; i++)
                                buffer++;
                        }
                        
                    }
            }
            else if(_choice_11 == 2)  // CHOICE WrappedCpmContainer  fieldName(sensor_information_container)
            {
                cpm_v1_23_cpm_sensorinformationcontainer_msgs::SensorInformationContainer _tmp_635;
                ros->payload.cpm_containers.elements[u].sensor_information_container.push_back(_tmp_635);
            
                // SequenceOf
                // Data Type UInt8
                // SEQUENCE_OF  min(1) max(128) span(128)
                uint8_t* _ext_flag_305 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].sensor_information_container[0].
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m000470\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].sensor_information_container[0].: " << int(*_ext_flag_305);
                }
                
                int16_t* _tmp_636 = (int16_t*)buffer;
                buffer += 2;
                __aux64__ = *_tmp_636;
                __aux64__ += 1;     // +min
                
                int _if__tmp_636 = __aux64__;
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m000471\033[0m| SequenceOf ros->payload.cpm_containers.elements[u].sensor_information_container[0]. size: " << int(*_tmp_636);
                }
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 128) {
                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].value' " << (__aux64__) << " exceeds max allowable (128); message dropped.";
                    return false;
                }
                
                
                for(int w = 0; w < _if__tmp_636; w++) {
                    cpm_v1_23_cpm_sensorinformationcontainer_msgs::SensorInformation seqof_w;  // SEQUENCE
                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements.push_back(seqof_w);
                
                        // SensorInformation  SEQUENCE
                            //  sensorId                   Identifier1B                           
                            //  sensorType                 SensorType                             
                            //  perceptionRegionShape      Shape                                OPTIONAL  
                            //  perceptionRegionConfidence ConfidenceLevel                      OPTIONAL  
                            //  shadowingApplies           SensorInformation_shadowingApplies     
                            //  ...
                        uint8_t* _ext_flag_306 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m000472\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].: " << int(*_ext_flag_306);
                        }
                        
                        if(*(buffer++)) { 
                            its_container_v3_etsi_its_cdd_msgs::Shape _tmp_637;
                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape.push_back(_tmp_637);
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000473\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v3_etsi_its_cdd_msgs::ConfidenceLevel _tmp_638;
                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_confidence.push_back(_tmp_638);
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000474\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_confidence " << tools::green("present");
                        }
                        
                        // Field name: sensor_id
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_639 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_639;
                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].sensor_id.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m000475\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].sensor_id.value) << 
                                         " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].sensor_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].sensor_id.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].sensor_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].sensor_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                        
                        // Field name: sensor_type
                        // Integer
                        // UINT8  min(0) max(31) span(32) datatype(UInt8)
                        uint8_t* _tmp_640 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_640;
                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].sensor_type.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m000476\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].sensor_type.value) << 
                                         " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].sensor_type.value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].sensor_type.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].sensor_type.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 31) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].sensor_type.value' " << (__aux64__) << " exceeds max allowable (31); message dropped.";
                            return false;
                        }
                        
                        if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape.size() != 0) {
                            // Field name: perception_region_shape
                            // Choice
                            uint8_t* _ext_flag_307 = (uint8_t*)buffer++; // ext flag
                            
                               // #0  rectangular   RectangularShape   
                               // #1  circular   CircularShape   
                               // #2  polygonal   PolygonalShape   
                               // #3  elliptical   EllipticalShape   
                               // #4  radial   RadialShape   
                               // #5  radialShapes   RadialShapes   
                            uint8_t _choice_13 = *(buffer++);
                            
                            if(*_ext_flag_307)
                                _choice_13 += 5 + 1; // Ext addition
                            
                            if(_choice_13 == 0) {
                                its_container_v3_etsi_its_cdd_msgs::RectangularShape _tmp_641;
                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular.push_back(_tmp_641);
                            
                                    // RectangularShape  SEQUENCE
                                        //  centerPoint CartesianPosition3d   OPTIONAL  
                                        //  semiLength  StandardLength12b       
                                        //  semiBreadth StandardLength12b       
                                        //  orientation Wgs84AngleValue       OPTIONAL  
                                        //  height      StandardLength12b     OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_642;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point.push_back(_tmp_642);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000477\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::Wgs84AngleValue _tmp_643;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].orientation.push_back(_tmp_643);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000478\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].orientation " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_644;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].height.push_back(_tmp_644);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000479\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].height " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point.size() != 0) {
                                        // Field name: center_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_645;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate.push_back(_tmp_645);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m000480\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_646 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value = *_tmp_646;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000481\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_647 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value = *_tmp_647;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000482\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_648 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value = *_tmp_648;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000483\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: semi_length
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_649 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].semi_length.value = *_tmp_649;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].semi_length.value;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].semi_length.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000484\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].semi_length.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].semi_length: " <<
                                                     ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].semi_length.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: semi_breadth
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_650 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].semi_breadth.value = *_tmp_650;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].semi_breadth.value;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].semi_breadth.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000485\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].semi_breadth.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].semi_breadth: " <<
                                                     ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].semi_breadth.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].orientation.size() != 0) {
                                        // Field name: orientation
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_651 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].orientation[0].value = *_tmp_651;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].orientation[0].value;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].orientation[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000486\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].orientation[0].value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].orientation[0]: " <<
                                                         ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].orientation[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].height.size() != 0) {
                                        // Field name: height
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_652 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].height[0].value = *_tmp_652;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].height[0].value;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].height[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000487\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].height[0].value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].height[0]: " <<
                                                         ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].rectangular[0].height[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_13 == 1)  // CHOICE Shape  fieldName(circular)
                            {
                                its_container_v3_etsi_its_cdd_msgs::CircularShape _tmp_653;
                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular.push_back(_tmp_653);
                            
                                    // CircularShape  SEQUENCE
                                        //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                        //  radius              StandardLength12b       
                                        //  height              StandardLength12b     OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_654;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point.push_back(_tmp_654);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000488\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_655;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].height.push_back(_tmp_655);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000489\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].height " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point.size() != 0) {
                                        // Field name: shape_reference_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_656;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate.push_back(_tmp_656);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m000490\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_657 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value = *_tmp_657;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000491\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_658 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value = *_tmp_658;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000492\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_659 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_659;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000493\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: radius
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_660 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].radius.value = *_tmp_660;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].radius.value;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].radius.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].radius.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].radius.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000494\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].radius.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].radius: " <<
                                                     ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].radius.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].height.size() != 0) {
                                        // Field name: height
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_661 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].height[0].value = *_tmp_661;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].height[0].value;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].height[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000495\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].height[0].value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].height[0]: " <<
                                                         ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].circular[0].height[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_13 == 2)  // CHOICE Shape  fieldName(polygonal)
                            {
                                its_container_v3_etsi_its_cdd_msgs::PolygonalShape _tmp_662;
                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal.push_back(_tmp_662);
                            
                                    // PolygonalShape  SEQUENCE
                                        //  shapeReferencePoint CartesianPosition3d             OPTIONAL  
                                        //  polygon             SequenceOfCartesianPosition3d     
                                        //  height              StandardLength12b               OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_663;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point.push_back(_tmp_663);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000496\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_664;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].height.push_back(_tmp_664);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000497\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].height " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point.size() != 0) {
                                        // Field name: shape_reference_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_665;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.push_back(_tmp_665);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m000498\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_666 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value = *_tmp_666;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000499\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_667 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value = *_tmp_667;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000500\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_668 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_668;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000501\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: polygon
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(1) max(16) span(16)
                                    uint8_t* _ext_flag_323 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000502\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.: " << int(*_ext_flag_323);
                                    }
                                    
                                    int16_t* _tmp_669 = (int16_t*)buffer;
                                    buffer += 2;
                                    __aux64__ = *_tmp_669;
                                    __aux64__ += 1;     // +min
                                    
                                    int _if__tmp_669 = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000503\033[0m| SequenceOf ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon. size: " << int(*_tmp_669);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    for(int x = 0; x < _if__tmp_669; x++) {
                                        its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d seqof_x;  // SEQUENCE
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements.push_back(seqof_x);
                                    
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_670;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].z_coordinate.push_back(_tmp_670);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m000504\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_671 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].x_coordinate.value = *_tmp_671;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000505\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].x_coordinate.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_672 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].y_coordinate.value = *_tmp_672;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000506\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].y_coordinate.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_673 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].z_coordinate[0].value = *_tmp_673;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000507\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].z_coordinate[0].value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].polygon.elements[x].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].height.size() != 0) {
                                        // Field name: height
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_674 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].height[0].value = *_tmp_674;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].height[0].value;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].height[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000508\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].height[0].value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].height[0]: " <<
                                                         ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].polygonal[0].height[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_13 == 3)  // CHOICE Shape  fieldName(elliptical)
                            {
                                its_container_v3_etsi_its_cdd_msgs::EllipticalShape _tmp_675;
                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical.push_back(_tmp_675);
                            
                                    // EllipticalShape  SEQUENCE
                                        //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                        //  semiMajorAxisLength StandardLength12b       
                                        //  semiMinorAxisLength StandardLength12b       
                                        //  orientation         Wgs84AngleValue       OPTIONAL  
                                        //  height              StandardLength12b     OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_676;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point.push_back(_tmp_676);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000509\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::Wgs84AngleValue _tmp_677;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].orientation.push_back(_tmp_677);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000510\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].orientation " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_678;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].height.push_back(_tmp_678);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000511\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].height " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point.size() != 0) {
                                        // Field name: shape_reference_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_679;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.push_back(_tmp_679);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m000512\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_680 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value = *_tmp_680;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000513\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_681 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value = *_tmp_681;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000514\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_682 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_682;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000515\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: semi_major_axis_length
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_683 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].semi_major_axis_length.value = *_tmp_683;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].semi_major_axis_length.value;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].semi_major_axis_length.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000516\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].semi_major_axis_length.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].semi_major_axis_length: " <<
                                                     ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].semi_major_axis_length.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: semi_minor_axis_length
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_684 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value = *_tmp_684;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000517\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].semi_minor_axis_length: " <<
                                                     ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].orientation.size() != 0) {
                                        // Field name: orientation
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_685 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].orientation[0].value = *_tmp_685;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].orientation[0].value;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].orientation[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000518\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].orientation[0].value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].orientation[0]: " <<
                                                         ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].orientation[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].height.size() != 0) {
                                        // Field name: height
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_686 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].height[0].value = *_tmp_686;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].height[0].value;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].height[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000519\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].height[0].value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].height[0]: " <<
                                                         ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].elliptical[0].height[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_13 == 4)  // CHOICE Shape  fieldName(radial)
                            {
                                its_container_v3_etsi_its_cdd_msgs::RadialShape _tmp_687;
                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial.push_back(_tmp_687);
                            
                                    // RadialShape  SEQUENCE
                                        //  shapeReferencePoint                   CartesianPosition3d   OPTIONAL  
                                        //  range                                 StandardLength12b       
                                        //  stationaryHorizontalOpeningAngleStart Wgs84AngleValue         
                                        //  stationaryHorizontalOpeningAngleEnd   Wgs84AngleValue         
                                        //  verticalOpeningAngleStart             CartesianAngleValue   OPTIONAL  
                                        //  verticalOpeningAngleEnd               CartesianAngleValue   OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_688;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point.push_back(_tmp_688);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000520\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_689;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_start.push_back(_tmp_689);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000521\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_start " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_690;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_end.push_back(_tmp_690);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000522\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_end " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point.size() != 0) {
                                        // Field name: shape_reference_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_691;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate.push_back(_tmp_691);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m000523\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_692 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value = *_tmp_692;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000524\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_693 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value = *_tmp_693;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000525\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_694 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_694;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000526\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: range
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_695 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].range.value = *_tmp_695;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].range.value;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].range.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000527\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].range.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].range: " <<
                                                     ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].range.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: stationary_horizontal_opening_angle_start
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_696 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value = *_tmp_696;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000528\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start: " <<
                                                     ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: stationary_horizontal_opening_angle_end
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_697 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value = *_tmp_697;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000529\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end: " <<
                                                     ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_start.size() != 0) {
                                        // Field name: vertical_opening_angle_start
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_698 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value = *_tmp_698;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000530\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_start[0]: " <<
                                                         ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_end.size() != 0) {
                                        // Field name: vertical_opening_angle_end
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_699 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value = *_tmp_699;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000531\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_end[0]: " <<
                                                         ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_13 == 5)  // CHOICE Shape  fieldName(radial_shapes)
                            {
                                its_container_v3_etsi_its_cdd_msgs::RadialShapes _tmp_700;
                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes.push_back(_tmp_700);
                            
                                    // RadialShapes  SEQUENCE
                                        //  refPointId       Identifier1B                 
                                        //  xCoordinate      CartesianCoordinateSmall     
                                        //  yCoordinate      CartesianCoordinateSmall     
                                        //  zCoordinate      CartesianCoordinateSmall   OPTIONAL  
                                        //  radialShapesList RadialShapesList             
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::CartesianCoordinateSmall _tmp_701;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].z_coordinate.push_back(_tmp_701);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000532\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].z_coordinate " << tools::green("present");
                                    }
                                    
                                    // Field name: ref_point_id
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_702 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_702;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].ref_point_id.value = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000533\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].ref_point_id.value) << 
                                                     " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].ref_point_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].ref_point_id.value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                    
                                    // Field name: x_coordinate
                                    // Real
                                    // Float
                                    // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_703 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].x_coordinate.value = *_tmp_703;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].x_coordinate.value += -3094;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].x_coordinate.value;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].x_coordinate.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000534\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].x_coordinate.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].x_coordinate: " <<
                                                     ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].x_coordinate.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: y_coordinate
                                    // Real
                                    // Float
                                    // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_704 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].y_coordinate.value = *_tmp_704;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].y_coordinate.value += -3094;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].y_coordinate.value;
                                    ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].y_coordinate.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000535\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].y_coordinate.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].y_coordinate: " <<
                                                     ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].y_coordinate.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].z_coordinate.size() != 0) {
                                        // Field name: z_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_705 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value = *_tmp_705;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value += -3094;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value;
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000536\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].z_coordinate[0]: " <<
                                                         ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                                    
                                    // Field name: radial_shapes_list
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(1) max(16) span(16)
                                    uint8_t* _ext_flag_346 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000537\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.: " << int(*_ext_flag_346);
                                    }
                                    
                                    int16_t* _tmp_706 = (int16_t*)buffer;
                                    buffer += 2;
                                    __aux64__ = *_tmp_706;
                                    __aux64__ += 1;     // +min
                                    
                                    int _if__tmp_706 = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000538\033[0m| SequenceOf ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list. size: " << int(*_tmp_706);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    for(int y = 0; y < _if__tmp_706; y++) {
                                        its_container_v3_etsi_its_cdd_msgs::RadialShapeDetails seqof_y;  // SEQUENCE
                                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements.push_back(seqof_y);
                                    
                                            // RadialShapeDetails  SEQUENCE
                                                //  range                       StandardLength12b       
                                                //  horizontalOpeningAngleStart CartesianAngleValue     
                                                //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                                //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                                //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_707;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_start.push_back(_tmp_707);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m000539\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_start " << tools::green("present");
                                            }
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_708;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_end.push_back(_tmp_708);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m000540\033[0m| ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_end " << tools::green("present");
                                            }
                                            
                                            // Field name: range
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_709 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].range.value = *_tmp_709;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].range.value;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].range.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000541\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].range.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].range: " <<
                                                             ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].range.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: horizontal_opening_angle_start
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_710 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].horizontal_opening_angle_start.value = *_tmp_710;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].horizontal_opening_angle_start.value;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].horizontal_opening_angle_start.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000542\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].horizontal_opening_angle_start: " <<
                                                             ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: horizontal_opening_angle_end
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_711 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].horizontal_opening_angle_end.value = *_tmp_711;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].horizontal_opening_angle_end.value;
                                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].horizontal_opening_angle_end.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000543\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].horizontal_opening_angle_end: " <<
                                                             ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_start.size() != 0) {
                                                // Field name: vertical_opening_angle_start
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_712 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_start[0].value = *_tmp_712;
                                                __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_start[0].value;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_start[0].value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000544\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_start[0]: " <<
                                                                 ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_end.size() != 0) {
                                                // Field name: vertical_opening_angle_end
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_713 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_end[0].value = *_tmp_713;
                                                __aux64__ = ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_end[0].value;
                                                ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_end[0].value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000545\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_end[0]: " <<
                                                                 ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[y].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                            }
                            else
                            {
                                uint16_t* _tmp_714 = (uint16_t*)buffer;  // OpenType length
                                buffer += 2 + int(*_tmp_714);            // Ignoring opentype data
                            }
                        }
                        
                        if(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_confidence.size() != 0) {
                            // Field name: perception_region_confidence
                            // Integer
                            // UINT8  min(1) max(101) span(101) datatype(UInt8)
                            uint8_t* _tmp_715 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_715;
                            __aux64__ += 1;
                            ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_confidence[0].value = __aux64__;
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m000546\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_confidence[0].value) << 
                                             " payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_confidence[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_confidence[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_confidence[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 101) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].perception_region_confidence[0].value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                                return false;
                            }
                        }
                        
                        // Field name: shadowing_applies
                        // Value
                        // Boolean
                        uint8_t* _tmp_716 = (uint8_t*)buffer;
                        buffer++;
                        ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].shadowing_applies.value = (*_tmp_716 == 1);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000547\033[0m| \033[37;1mbool  \033[0m ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].shadowing_applies.: " << (*_tmp_716);
                        if(*_ext_flag_306) { // from ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w]. 
                            uint8_t* _tmp_717 = (uint8_t*) buffer++;  // number of extensions
                            bool _array_5[*_tmp_717];
                            
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000548\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[u].sensor_information_container[0].elements[w].: " << static_cast<unsigned int>(*_tmp_717);
                            
                            // Extensions bytemap
                            for(int i = 0; i < *_tmp_717; i++)
                                _array_5[i] = (*buffer++) != 0;
                            
                            // Discarding unknown OpenType containers
                            for(int i = 0; i < *_tmp_717; i++) {
                                uint16_t* _tmp_718 = (uint16_t*)buffer;  // OpenType length
                                buffer += 2;
                            
                                if(debug) {
                                }
                            
                                for(int i = 0; i < *_tmp_718; i++)
                                    buffer++;
                            }
                            
                        }
                }
            }
            else if(_choice_11 == 3)  // CHOICE WrappedCpmContainer  fieldName(perception_region_container)
            {
                cpm_v1_23_cpm_perceptionregioncontainer_msgs::PerceptionRegionContainer _tmp_719;
                ros->payload.cpm_containers.elements[u].perception_region_container.push_back(_tmp_719);
            
                // SequenceOf
                // Data Type UInt16
                // SEQUENCE_OF  min(1) max(256) span(256)
                uint8_t* _ext_flag_352 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].perception_region_container[0].
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m000549\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].perception_region_container[0].: " << int(*_ext_flag_352);
                }
                
                int16_t* _tmp_720 = (int16_t*)buffer;
                buffer += 2;
                __aux64__ = *_tmp_720;
                __aux64__ += 1;     // +min
                
                int _if__tmp_720 = __aux64__;
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m000550\033[0m| SequenceOf ros->payload.cpm_containers.elements[u].perception_region_container[0]. size: " << int(*_tmp_720);
                }
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 256) {
                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                    return false;
                }
                
                
                for(int z = 0; z < _if__tmp_720; z++) {
                    cpm_v1_23_cpm_perceptionregioncontainer_msgs::PerceptionRegion seqof_z;  // SEQUENCE
                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements.push_back(seqof_z);
                
                        // PerceptionRegion  SEQUENCE
                            //  measurementDeltaTime       DeltaTimeMilliSecondSigned            
                            //  perceptionRegionConfidence ConfidenceLevel                       
                            //  perceptionRegionShape      Shape                                 
                            //  shadowingApplies           PerceptionRegion_shadowingApplies     
                            //  sensorIdList               SequenceOfIdentifier1B              OPTIONAL  
                            //  numberOfPerceivedObjects   CardinalNumber1B                    OPTIONAL  
                            //  perceivedObjectIds         PerceivedObjectIds                  OPTIONAL  
                            //  ...
                        uint8_t* _ext_flag_353 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m000551\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].: " << int(*_ext_flag_353);
                        }
                        
                        if(*(buffer++)) { 
                            its_container_v3_etsi_its_cdd_msgs::SequenceOfIdentifier1B _tmp_721;
                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].sensor_id_list.push_back(_tmp_721);
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000552\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].sensor_id_list " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v3_etsi_its_cdd_msgs::CardinalNumber1B _tmp_722;
                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].number_of_perceived_objects.push_back(_tmp_722);
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000553\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].number_of_perceived_objects " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            cpm_v1_23_cpm_perceptionregioncontainer_msgs::PerceivedObjectIds _tmp_723;
                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perceived_object_ids.push_back(_tmp_723);
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000554\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perceived_object_ids " << tools::green("present");
                        }
                        
                        // Field name: measurement_delta_time
                        // Real
                        // Float
                        // FLOAT  min(-2048) max(2047) span(4096) scaleDivisor(1000.0) dataType(Float)
                        uint16_t* _tmp_724 = (uint16_t*) buffer; buffer += 2;
                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].measurement_delta_time.value = *_tmp_724;
                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].measurement_delta_time.value += -2048;
                        __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].measurement_delta_time.value;
                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].measurement_delta_time.value /= 1000.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < -2048) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].measurement_delta_time.value' " << (__aux64__) << " is less than allowable (-2048); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 2047) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].measurement_delta_time.value' " << (__aux64__) << " exceeds max allowable (2047); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m000555\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].measurement_delta_time.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].measurement_delta_time: " <<
                                         ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].measurement_delta_time.value << " (" << __aux64__ << ")";
                        }
                        
                        // Field name: perception_region_confidence
                        // Integer
                        // UINT8  min(1) max(101) span(101) datatype(UInt8)
                        uint8_t* _tmp_725 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_725;
                        __aux64__ += 1;
                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_confidence.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m000556\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_confidence.value) << 
                                         " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_confidence.value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_confidence.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 101) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_confidence.value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                            return false;
                        }
                        
                        // Field name: perception_region_shape
                        // Choice
                        uint8_t* _ext_flag_355 = (uint8_t*)buffer++; // ext flag
                        
                           // #0  rectangular   RectangularShape   
                           // #1  circular   CircularShape   
                           // #2  polygonal   PolygonalShape   
                           // #3  elliptical   EllipticalShape   
                           // #4  radial   RadialShape   
                           // #5  radialShapes   RadialShapes   
                        uint8_t _choice_14 = *(buffer++);
                        
                        if(*_ext_flag_355)
                            _choice_14 += 5 + 1; // Ext addition
                        
                        if(_choice_14 == 0) {
                            its_container_v3_etsi_its_cdd_msgs::RectangularShape _tmp_726;
                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular.push_back(_tmp_726);
                        
                                // RectangularShape  SEQUENCE
                                    //  centerPoint CartesianPosition3d   OPTIONAL  
                                    //  semiLength  StandardLength12b       
                                    //  semiBreadth StandardLength12b       
                                    //  orientation Wgs84AngleValue       OPTIONAL  
                                    //  height      StandardLength12b     OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_727;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point.push_back(_tmp_727);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000557\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::Wgs84AngleValue _tmp_728;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].orientation.push_back(_tmp_728);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000558\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].orientation " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_729;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].height.push_back(_tmp_729);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000559\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].height " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point.size() != 0) {
                                    // Field name: center_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_730;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].z_coordinate.push_back(_tmp_730);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m000560\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_731 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value = *_tmp_731;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000561\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_732 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value = *_tmp_732;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000562\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_733 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value = *_tmp_733;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000563\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: semi_length
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_734 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].semi_length.value = *_tmp_734;
                                __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].semi_length.value;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].semi_length.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].semi_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].semi_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000564\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].semi_length.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].semi_length: " <<
                                                 ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].semi_length.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: semi_breadth
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_735 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].semi_breadth.value = *_tmp_735;
                                __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].semi_breadth.value;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].semi_breadth.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].semi_breadth.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].semi_breadth.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000565\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].semi_breadth.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].semi_breadth: " <<
                                                 ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].semi_breadth.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].orientation.size() != 0) {
                                    // Field name: orientation
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_736 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].orientation[0].value = *_tmp_736;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].orientation[0].value;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].orientation[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000566\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].orientation[0].value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].orientation[0]: " <<
                                                     ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].orientation[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].height.size() != 0) {
                                    // Field name: height
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_737 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].height[0].value = *_tmp_737;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].height[0].value;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].height[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000567\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].height[0].value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].height[0]: " <<
                                                     ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.rectangular[0].height[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_14 == 1)  // CHOICE Shape  fieldName(circular)
                        {
                            its_container_v3_etsi_its_cdd_msgs::CircularShape _tmp_738;
                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular.push_back(_tmp_738);
                        
                                // CircularShape  SEQUENCE
                                    //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                    //  radius              StandardLength12b       
                                    //  height              StandardLength12b     OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_739;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point.push_back(_tmp_739);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000568\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_740;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].height.push_back(_tmp_740);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000569\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].height " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point.size() != 0) {
                                    // Field name: shape_reference_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_741;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate.push_back(_tmp_741);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m000570\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_742 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value = *_tmp_742;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000571\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_743 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value = *_tmp_743;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000572\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_744 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_744;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000573\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: radius
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_745 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].radius.value = *_tmp_745;
                                __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].radius.value;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].radius.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].radius.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].radius.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000574\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].radius.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].radius: " <<
                                                 ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].radius.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].height.size() != 0) {
                                    // Field name: height
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_746 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].height[0].value = *_tmp_746;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].height[0].value;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].height[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000575\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].height[0].value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].height[0]: " <<
                                                     ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.circular[0].height[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_14 == 2)  // CHOICE Shape  fieldName(polygonal)
                        {
                            its_container_v3_etsi_its_cdd_msgs::PolygonalShape _tmp_747;
                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal.push_back(_tmp_747);
                        
                                // PolygonalShape  SEQUENCE
                                    //  shapeReferencePoint CartesianPosition3d             OPTIONAL  
                                    //  polygon             SequenceOfCartesianPosition3d     
                                    //  height              StandardLength12b               OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_748;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point.push_back(_tmp_748);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000576\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_749;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].height.push_back(_tmp_749);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000577\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].height " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point.size() != 0) {
                                    // Field name: shape_reference_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_750;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate.push_back(_tmp_750);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m000578\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_751 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value = *_tmp_751;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000579\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_752 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value = *_tmp_752;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000580\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_753 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_753;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000581\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: polygon
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(16) span(16)
                                uint8_t* _ext_flag_371 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000582\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.: " << int(*_ext_flag_371);
                                }
                                
                                int16_t* _tmp_754 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_754;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_754 = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000583\033[0m| SequenceOf ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon. size: " << int(*_tmp_754);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int a = 0; a < _if__tmp_754; a++) {
                                    its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d seqof_a;  // SEQUENCE
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements.push_back(seqof_a);
                                
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_755;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].z_coordinate.push_back(_tmp_755);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m000584\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_756 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].x_coordinate.value = *_tmp_756;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000585\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].x_coordinate.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_757 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].y_coordinate.value = *_tmp_757;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000586\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].y_coordinate.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_758 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].z_coordinate[0].value = *_tmp_758;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000587\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].z_coordinate[0].value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].polygon.elements[a].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].height.size() != 0) {
                                    // Field name: height
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_759 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].height[0].value = *_tmp_759;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].height[0].value;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].height[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000588\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].height[0].value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].height[0]: " <<
                                                     ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.polygonal[0].height[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_14 == 3)  // CHOICE Shape  fieldName(elliptical)
                        {
                            its_container_v3_etsi_its_cdd_msgs::EllipticalShape _tmp_760;
                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical.push_back(_tmp_760);
                        
                                // EllipticalShape  SEQUENCE
                                    //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                    //  semiMajorAxisLength StandardLength12b       
                                    //  semiMinorAxisLength StandardLength12b       
                                    //  orientation         Wgs84AngleValue       OPTIONAL  
                                    //  height              StandardLength12b     OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_761;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point.push_back(_tmp_761);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000589\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::Wgs84AngleValue _tmp_762;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].orientation.push_back(_tmp_762);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000590\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].orientation " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_763;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].height.push_back(_tmp_763);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000591\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].height " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point.size() != 0) {
                                    // Field name: shape_reference_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_764;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate.push_back(_tmp_764);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m000592\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_765 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value = *_tmp_765;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000593\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_766 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value = *_tmp_766;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000594\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_767 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_767;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000595\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: semi_major_axis_length
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_768 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].semi_major_axis_length.value = *_tmp_768;
                                __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].semi_major_axis_length.value;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].semi_major_axis_length.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000596\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].semi_major_axis_length.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].semi_major_axis_length: " <<
                                                 ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].semi_major_axis_length.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: semi_minor_axis_length
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_769 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].semi_minor_axis_length.value = *_tmp_769;
                                __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].semi_minor_axis_length.value;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].semi_minor_axis_length.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000597\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].semi_minor_axis_length.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].semi_minor_axis_length: " <<
                                                 ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].semi_minor_axis_length.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].orientation.size() != 0) {
                                    // Field name: orientation
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_770 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].orientation[0].value = *_tmp_770;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].orientation[0].value;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].orientation[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000598\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].orientation[0].value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].orientation[0]: " <<
                                                     ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].orientation[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].height.size() != 0) {
                                    // Field name: height
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_771 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].height[0].value = *_tmp_771;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].height[0].value;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].height[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000599\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].height[0].value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].height[0]: " <<
                                                     ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.elliptical[0].height[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_14 == 4)  // CHOICE Shape  fieldName(radial)
                        {
                            its_container_v3_etsi_its_cdd_msgs::RadialShape _tmp_772;
                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial.push_back(_tmp_772);
                        
                                // RadialShape  SEQUENCE
                                    //  shapeReferencePoint                   CartesianPosition3d   OPTIONAL  
                                    //  range                                 StandardLength12b       
                                    //  stationaryHorizontalOpeningAngleStart Wgs84AngleValue         
                                    //  stationaryHorizontalOpeningAngleEnd   Wgs84AngleValue         
                                    //  verticalOpeningAngleStart             CartesianAngleValue   OPTIONAL  
                                    //  verticalOpeningAngleEnd               CartesianAngleValue   OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_773;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point.push_back(_tmp_773);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000600\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_774;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_start.push_back(_tmp_774);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000601\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_start " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_775;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_end.push_back(_tmp_775);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000602\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_end " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point.size() != 0) {
                                    // Field name: shape_reference_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_776;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate.push_back(_tmp_776);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m000603\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_777 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value = *_tmp_777;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000604\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_778 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value = *_tmp_778;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000605\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_779 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_779;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000606\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: range
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_780 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].range.value = *_tmp_780;
                                __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].range.value;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].range.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000607\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].range.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].range: " <<
                                                 ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].range.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: stationary_horizontal_opening_angle_start
                                // Real
                                // Float
                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_781 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value = *_tmp_781;
                                __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000608\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start: " <<
                                                 ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: stationary_horizontal_opening_angle_end
                                // Real
                                // Float
                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_782 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value = *_tmp_782;
                                __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000609\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end: " <<
                                                 ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_start.size() != 0) {
                                    // Field name: vertical_opening_angle_start
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_783 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_start[0].value = *_tmp_783;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_start[0].value;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_start[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000610\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_start[0]: " <<
                                                     ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_end.size() != 0) {
                                    // Field name: vertical_opening_angle_end
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_784 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_end[0].value = *_tmp_784;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_end[0].value;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_end[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000611\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_end[0]: " <<
                                                     ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial[0].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_14 == 5)  // CHOICE Shape  fieldName(radial_shapes)
                        {
                            its_container_v3_etsi_its_cdd_msgs::RadialShapes _tmp_785;
                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes.push_back(_tmp_785);
                        
                                // RadialShapes  SEQUENCE
                                    //  refPointId       Identifier1B                 
                                    //  xCoordinate      CartesianCoordinateSmall     
                                    //  yCoordinate      CartesianCoordinateSmall     
                                    //  zCoordinate      CartesianCoordinateSmall   OPTIONAL  
                                    //  radialShapesList RadialShapesList             
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::CartesianCoordinateSmall _tmp_786;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].z_coordinate.push_back(_tmp_786);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000612\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].z_coordinate " << tools::green("present");
                                }
                                
                                // Field name: ref_point_id
                                // Integer
                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                uint8_t* _tmp_787 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_787;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].ref_point_id.value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000613\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].ref_point_id.value) << 
                                                 " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].ref_point_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].ref_point_id.value);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].ref_point_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].ref_point_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                    return false;
                                }
                                
                                // Field name: x_coordinate
                                // Real
                                // Float
                                // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                uint16_t* _tmp_788 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].x_coordinate.value = *_tmp_788;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].x_coordinate.value += -3094;
                                __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].x_coordinate.value;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].x_coordinate.value /= 100.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000614\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].x_coordinate.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].x_coordinate: " <<
                                                 ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].x_coordinate.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: y_coordinate
                                // Real
                                // Float
                                // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                uint16_t* _tmp_789 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].y_coordinate.value = *_tmp_789;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].y_coordinate.value += -3094;
                                __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].y_coordinate.value;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].y_coordinate.value /= 100.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000615\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].y_coordinate.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].y_coordinate: " <<
                                                 ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].y_coordinate.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].z_coordinate.size() != 0) {
                                    // Field name: z_coordinate
                                    // Real
                                    // Float
                                    // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_790 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].z_coordinate[0].value = *_tmp_790;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].z_coordinate[0].value += -3094;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].z_coordinate[0].value;
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].z_coordinate[0].value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000616\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].z_coordinate[0].value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].z_coordinate[0]: " <<
                                                     ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                // Field name: radial_shapes_list
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(16) span(16)
                                uint8_t* _ext_flag_394 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000617\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.: " << int(*_ext_flag_394);
                                }
                                
                                int16_t* _tmp_791 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_791;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_791 = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000618\033[0m| SequenceOf ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list. size: " << int(*_tmp_791);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int b = 0; b < _if__tmp_791; b++) {
                                    its_container_v3_etsi_its_cdd_msgs::RadialShapeDetails seqof_b;  // SEQUENCE
                                    ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements.push_back(seqof_b);
                                
                                        // RadialShapeDetails  SEQUENCE
                                            //  range                       StandardLength12b       
                                            //  horizontalOpeningAngleStart CartesianAngleValue     
                                            //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                            //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                            //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_792;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_start.push_back(_tmp_792);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m000619\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_start " << tools::green("present");
                                        }
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_793;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_end.push_back(_tmp_793);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m000620\033[0m| ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_end " << tools::green("present");
                                        }
                                        
                                        // Field name: range
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_794 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].range.value = *_tmp_794;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].range.value;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].range.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000621\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].range.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].range: " <<
                                                         ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].range.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: horizontal_opening_angle_start
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_795 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_start.value = *_tmp_795;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_start.value;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_start.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000622\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_start: " <<
                                                         ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: horizontal_opening_angle_end
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_796 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_end.value = *_tmp_796;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_end.value;
                                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_end.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000623\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_end: " <<
                                                         ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_start.size() != 0) {
                                            // Field name: vertical_opening_angle_start
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_797 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_start[0].value = *_tmp_797;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_start[0].value;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_start[0].value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000624\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_start[0]: " <<
                                                             ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_end.size() != 0) {
                                            // Field name: vertical_opening_angle_end
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_798 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_end[0].value = *_tmp_798;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_end[0].value;
                                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_end[0].value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000625\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_end[0]: " <<
                                                             ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                        }
                        else
                        {
                            uint16_t* _tmp_799 = (uint16_t*)buffer;  // OpenType length
                            buffer += 2 + int(*_tmp_799);            // Ignoring opentype data
                        }
                        
                        // Field name: shadowing_applies
                        // Value
                        // Boolean
                        uint8_t* _tmp_800 = (uint8_t*)buffer;
                        buffer++;
                        ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].shadowing_applies.value = (*_tmp_800 == 1);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000626\033[0m| \033[37;1mbool  \033[0m ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].shadowing_applies.: " << (*_tmp_800);
                        
                        if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].sensor_id_list.size() != 0) {
                            // Field name: sensor_id_list
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(128) span(128)
                            uint8_t* _ext_flag_400 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].sensor_id_list[0].
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m000627\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].sensor_id_list[0].: " << int(*_ext_flag_400);
                            }
                            
                            int16_t* _tmp_801 = (int16_t*)buffer;
                            buffer += 2;
                            __aux64__ = *_tmp_801;
                            __aux64__ += 1;     // +min
                            
                            int _if__tmp_801 = __aux64__;
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m000628\033[0m| SequenceOf ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].sensor_id_list[0]. size: " << int(*_tmp_801);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].sensor_id_list[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 128) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].sensor_id_list[0].value' " << (__aux64__) << " exceeds max allowable (128); message dropped.";
                                return false;
                            }
                            
                            
                            for(int c = 0; c < _if__tmp_801; c++) {
                                its_container_v3_etsi_its_cdd_msgs::Identifier1B seqof_c;  // INTEGER
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].sensor_id_list[0].elements.push_back(seqof_c);
                            
                                // Integer
                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                uint8_t* _tmp_802 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_802;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].sensor_id_list[0].elements[c].value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000629\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].sensor_id_list[0].elements[c].value) << 
                                                 " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].sensor_id_list[0].elements[c].value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].sensor_id_list[0].elements[c].value);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].sensor_id_list[0].elements[c].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].sensor_id_list[0].elements[c].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                    return false;
                                }
                                
                                
                            }
                        }
                        
                        if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].number_of_perceived_objects.size() != 0) {
                            // Field name: number_of_perceived_objects
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_803 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_803;
                            ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].number_of_perceived_objects[0].value = __aux64__;
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m000630\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].number_of_perceived_objects[0].value) << 
                                             " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].number_of_perceived_objects[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].number_of_perceived_objects[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].number_of_perceived_objects[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].number_of_perceived_objects[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        
                        if(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perceived_object_ids.size() != 0) {
                            // Field name: perceived_object_ids
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(0) max(255) span(256)
                            uint8_t* _ext_flag_401 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perceived_object_ids[0].
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m000631\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perceived_object_ids[0].: " << int(*_ext_flag_401);
                            }
                            
                            int16_t* _tmp_804 = (int16_t*)buffer;
                            buffer += 2;
                            __aux64__ = *_tmp_804;
                            
                            int _if__tmp_804 = __aux64__;
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m000632\033[0m| SequenceOf ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perceived_object_ids[0]. size: " << int(*_tmp_804);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perceived_object_ids[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perceived_object_ids[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                            
                            
                            for(int d = 0; d < _if__tmp_804; d++) {
                                its_container_v3_etsi_its_cdd_msgs::Identifier2B seqof_d;  // INTEGER
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perceived_object_ids[0].elements.push_back(seqof_d);
                            
                                // Integer
                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                uint16_t* _tmp_805 = (uint16_t*) buffer; buffer += 2;
                                __aux64__ = *_tmp_805;
                                ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perceived_object_ids[0].elements[d].value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000633\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perceived_object_ids[0].elements[d].value) << 
                                                 " payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perceived_object_ids[0].elements[d].value: " << ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perceived_object_ids[0].elements[d].value;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perceived_object_ids[0].elements[d].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perception_region_container[0].elements[z].perceived_object_ids[0].elements[d].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                                
                                
                            }
                        }
                        if(*_ext_flag_353) { // from ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z]. 
                            uint8_t* _tmp_806 = (uint8_t*) buffer++;  // number of extensions
                            bool _array_6[*_tmp_806];
                            
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000634\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[u].perception_region_container[0].elements[z].: " << static_cast<unsigned int>(*_tmp_806);
                            
                            // Extensions bytemap
                            for(int i = 0; i < *_tmp_806; i++)
                                _array_6[i] = (*buffer++) != 0;
                            
                            // Discarding unknown OpenType containers
                            for(int i = 0; i < *_tmp_806; i++) {
                                uint16_t* _tmp_807 = (uint16_t*)buffer;  // OpenType length
                                buffer += 2;
                            
                                if(debug) {
                                }
                            
                                for(int i = 0; i < *_tmp_807; i++)
                                    buffer++;
                            }
                            
                        }
                }
            }
            else if(_choice_11 == 4)  // CHOICE WrappedCpmContainer  fieldName(perceived_object_container)
            {
                cpm_v1_23_cpm_perceivedobjectcontainer_msgs::PerceivedObjectContainer _tmp_808;
                ros->payload.cpm_containers.elements[u].perceived_object_container.push_back(_tmp_808);
            
                    // PerceivedObjectContainer  SEQUENCE
                        //  numberOfPerceivedObjects CardinalNumber1B     
                        //  perceivedObjects         PerceivedObjects     
                        //  ...
                    uint8_t* _ext_flag_402 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].perceived_object_container[0].
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m000635\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].perceived_object_container[0].: " << int(*_ext_flag_402);
                    }
                    
                    
                    // Field name: number_of_perceived_objects
                    // Integer
                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                    uint8_t* _tmp_809 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_809;
                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].number_of_perceived_objects.value = __aux64__;
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m000636\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].number_of_perceived_objects.value) << 
                                     " payload.cpm_containers.elements[u].perceived_object_container[0].number_of_perceived_objects.value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].perceived_object_container[0].number_of_perceived_objects.value);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].number_of_perceived_objects.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].number_of_perceived_objects.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                        return false;
                    }
                    
                    // Field name: perceived_objects
                    // SequenceOf
                    // Data Type UInt8
                    // SEQUENCE_OF  min(0) max(255) span(256)
                    uint8_t* _ext_flag_403 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m000637\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.: " << int(*_ext_flag_403);
                    }
                    
                    int16_t* _tmp_810 = (int16_t*)buffer;
                    buffer += 2;
                    __aux64__ = *_tmp_810;
                    
                    int _if__tmp_810 = __aux64__;
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m000638\033[0m| SequenceOf ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects. size: " << int(*_tmp_810);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                        return false;
                    }
                    
                    
                    for(int e = 0; e < _if__tmp_810; e++) {
                        its_container_v3_etsi_its_cdd_msgs::PerceivedObject seqof_e;  // SEQUENCE
                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements.push_back(seqof_e);
                    
                            // PerceivedObject  SEQUENCE
                                //  objectId                           Identifier2B                                           OPTIONAL  
                                //  measurementDeltaTime               DeltaTimeMilliSecondSigned                               
                                //  position                           CartesianPosition3dWithConfidence                        
                                //  velocity                           Velocity3dWithConfidence                               OPTIONAL  
                                //  acceleration                       Acceleration3dWithConfidence                           OPTIONAL  
                                //  angles                             EulerAnglesWithConfidence                              OPTIONAL  
                                //  zAngularVelocity                   CartesianAngularVelocityComponent                      OPTIONAL  
                                //  lowerTriangularCorrelationMatrices LowerTriangularPositiveSemidefiniteMatrices            OPTIONAL  
                                //  objectDimensionZ                   ObjectDimension                                        OPTIONAL  
                                //  objectDimensionY                   ObjectDimension                                        OPTIONAL  
                                //  objectDimensionX                   ObjectDimension                                        OPTIONAL  
                                //  objectAge                          PerceivedObject_DeltaTimeMilliSecondSigned_objectAge   OPTIONAL  
                                //  objectPerceptionQuality            ObjectPerceptionQuality                                OPTIONAL  
                                //  sensorIdList                       SequenceOfIdentifier1B                                 OPTIONAL  
                                //  classification                     ObjectClassDescription                                 OPTIONAL  
                                //  mapPosition                        MapPosition                                            OPTIONAL  
                                //  ...
                            uint8_t* _ext_flag_404 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m000639\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].: " << int(*_ext_flag_404);
                            }
                            
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::Identifier2B _tmp_811;
                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_id.push_back(_tmp_811);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m000640\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_id " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::Velocity3dWithConfidence _tmp_812;
                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity.push_back(_tmp_812);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m000641\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::Acceleration3dWithConfidence _tmp_813;
                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration.push_back(_tmp_813);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m000642\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::EulerAnglesWithConfidence _tmp_814;
                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles.push_back(_tmp_814);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m000643\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::CartesianAngularVelocityComponent _tmp_815;
                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].z_angular_velocity.push_back(_tmp_815);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m000644\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].z_angular_velocity " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::LowerTriangularPositiveSemidefiniteMatrices _tmp_816;
                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices.push_back(_tmp_816);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m000645\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::ObjectDimension _tmp_817;
                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_z.push_back(_tmp_817);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m000646\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_z " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::ObjectDimension _tmp_818;
                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_y.push_back(_tmp_818);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m000647\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_y " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::ObjectDimension _tmp_819;
                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_x.push_back(_tmp_819);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m000648\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_x " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::PerceivedObjectDeltaTimeMilliSecondSignedObjectAge _tmp_820;
                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_age.push_back(_tmp_820);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m000649\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_age " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::ObjectPerceptionQuality _tmp_821;
                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_perception_quality.push_back(_tmp_821);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m000650\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_perception_quality " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::SequenceOfIdentifier1B _tmp_822;
                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].sensor_id_list.push_back(_tmp_822);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m000651\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].sensor_id_list " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::ObjectClassDescription _tmp_823;
                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification.push_back(_tmp_823);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m000652\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::MapPosition _tmp_824;
                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position.push_back(_tmp_824);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m000653\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position " << tools::green("present");
                            }
                            
                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_id.size() != 0) {
                                // Field name: object_id
                                // Integer
                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                uint16_t* _tmp_825 = (uint16_t*) buffer; buffer += 2;
                                __aux64__ = *_tmp_825;
                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_id[0].value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000654\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_id[0].value) << 
                                                 " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_id[0].value: " << ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_id[0].value;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_id[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                            }
                            
                            // Field name: measurement_delta_time
                            // Real
                            // Float
                            // FLOAT  min(-2048) max(2047) span(4096) scaleDivisor(1000.0) dataType(Float)
                            uint16_t* _tmp_826 = (uint16_t*) buffer; buffer += 2;
                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].measurement_delta_time.value = *_tmp_826;
                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].measurement_delta_time.value += -2048;
                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].measurement_delta_time.value;
                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].measurement_delta_time.value /= 1000.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < -2048) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].measurement_delta_time.value' " << (__aux64__) << " is less than allowable (-2048); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 2047) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].measurement_delta_time.value' " << (__aux64__) << " exceeds max allowable (2047); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m000655\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].measurement_delta_time.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].measurement_delta_time: " <<
                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].measurement_delta_time.value << " (" << __aux64__ << ")";
                            }
                            
                            // Field name: position
                                // CartesianPosition3dWithConfidence  SEQUENCE
                                    //  xCoordinate CartesianCoordinateWithConfidence     
                                    //  yCoordinate CartesianCoordinateWithConfidence     
                                    //  zCoordinate CartesianCoordinateWithConfidence   OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::CartesianCoordinateWithConfidence _tmp_827;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.z_coordinate.push_back(_tmp_827);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000656\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.z_coordinate " << tools::green("present");
                                }
                                
                                // Field name: x_coordinate
                                    // CartesianCoordinateWithConfidence  SEQUENCE
                                        //  value      CartesianCoordinateLarge     
                                        //  confidence CoordinateConfidence         
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                    uint32_t* _tmp_828 = (uint32_t*) buffer; buffer += 4;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.x_coordinate.value.value = *_tmp_828;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.x_coordinate.value.value += -131072;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.x_coordinate.value.value;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.x_coordinate.value.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -131072) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.x_coordinate.value.value' " << (__aux64__) << " is less than allowable (-131072); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 131071) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.x_coordinate.value.value' " << (__aux64__) << " exceeds max allowable (131071); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000657\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.x_coordinate.value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.x_coordinate.value: " <<
                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.x_coordinate.value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_829 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.x_coordinate.confidence.value = *_tmp_829;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.x_coordinate.confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.x_coordinate.confidence.value;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.x_coordinate.confidence.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.x_coordinate.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4096) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.x_coordinate.confidence.value' " << (__aux64__) << " exceeds max allowable (4096); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000658\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.x_coordinate.confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.x_coordinate.confidence: " <<
                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.x_coordinate.confidence.value << " (" << __aux64__ << ")";
                                    }
                                
                                // Field name: y_coordinate
                                    // CartesianCoordinateWithConfidence  SEQUENCE
                                        //  value      CartesianCoordinateLarge     
                                        //  confidence CoordinateConfidence         
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                    uint32_t* _tmp_830 = (uint32_t*) buffer; buffer += 4;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.y_coordinate.value.value = *_tmp_830;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.y_coordinate.value.value += -131072;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.y_coordinate.value.value;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.y_coordinate.value.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -131072) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.y_coordinate.value.value' " << (__aux64__) << " is less than allowable (-131072); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 131071) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.y_coordinate.value.value' " << (__aux64__) << " exceeds max allowable (131071); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000659\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.y_coordinate.value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.y_coordinate.value: " <<
                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.y_coordinate.value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_831 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.y_coordinate.confidence.value = *_tmp_831;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.y_coordinate.confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.y_coordinate.confidence.value;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.y_coordinate.confidence.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.y_coordinate.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4096) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.y_coordinate.confidence.value' " << (__aux64__) << " exceeds max allowable (4096); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000660\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.y_coordinate.confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.y_coordinate.confidence: " <<
                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.y_coordinate.confidence.value << " (" << __aux64__ << ")";
                                    }
                                
                                if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.z_coordinate.size() != 0) {
                                    // Field name: z_coordinate
                                        // CartesianCoordinateWithConfidence  SEQUENCE
                                            //  value      CartesianCoordinateLarge     
                                            //  confidence CoordinateConfidence         
                                        
                                        // Field name: value
                                        // Real
                                        // Float
                                        // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                        uint32_t* _tmp_832 = (uint32_t*) buffer; buffer += 4;
                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.z_coordinate[0].value.value = *_tmp_832;
                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.z_coordinate[0].value.value += -131072;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.z_coordinate[0].value.value;
                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.z_coordinate[0].value.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -131072) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.z_coordinate[0].value.value' " << (__aux64__) << " is less than allowable (-131072); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 131071) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.z_coordinate[0].value.value' " << (__aux64__) << " exceeds max allowable (131071); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000661\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.z_coordinate[0].value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.z_coordinate[0].value: " <<
                                                         ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.z_coordinate[0].value.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: confidence
                                        // Real
                                        // Float
                                        // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_833 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.z_coordinate[0].confidence.value = *_tmp_833;
                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.z_coordinate[0].confidence.value += 1;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.z_coordinate[0].confidence.value;
                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.z_coordinate[0].confidence.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.z_coordinate[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4096) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.z_coordinate[0].confidence.value' " << (__aux64__) << " exceeds max allowable (4096); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000662\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.z_coordinate[0].confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.z_coordinate[0].confidence: " <<
                                                         ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].position.z_coordinate[0].confidence.value << " (" << __aux64__ << ")";
                                        }
                                }
                            
                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity.size() != 0) {
                                // Field name: velocity
                                // Choice
                                   // #0  polarVelocity   VelocityPolarWithZ   
                                   // #1  cartesianVelocity   VelocityCartesian   
                                uint8_t _choice_15 = *(buffer++);
                                
                                if(_choice_15 == 0) {
                                    its_container_v3_etsi_its_cdd_msgs::VelocityPolarWithZ _tmp_834;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity.push_back(_tmp_834);
                                
                                        // VelocityPolarWithZ  SEQUENCE
                                            //  velocityMagnitude Speed                 
                                            //  velocityDirection CartesianAngle        
                                            //  zVelocity         VelocityComponent   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::VelocityComponent _tmp_835;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].z_velocity.push_back(_tmp_835);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m000663\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].z_velocity " << tools::green("present");
                                        }
                                        
                                        // Field name: velocity_magnitude
                                            // Speed  SEQUENCE
                                                //  speedValue      SpeedValue          
                                                //  speedConfidence SpeedConfidence     
                                            
                                            // Field name: speed_value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(16383) span(16384) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_836 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value = *_tmp_836;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000664\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_magnitude.speed_value: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: speed_confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                            uint8_t* _tmp_837 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value = *_tmp_837;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000665\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        // Field name: velocity_direction
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_838 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_direction.value.value = *_tmp_838;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_direction.value.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_direction.value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_direction.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_direction.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000666\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_direction.value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_direction.value: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_direction.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_839 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_direction.confidence.value = *_tmp_839;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_direction.confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_direction.confidence.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_direction.confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_direction.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_direction.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000667\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_direction.confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_direction.confidence: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].velocity_direction.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].z_velocity.size() != 0) {
                                            // Field name: z_velocity
                                                // VelocityComponent  SEQUENCE
                                                    //  value      VelocityComponentValue     
                                                    //  confidence SpeedConfidence            
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_840 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].z_velocity[0].value.value = *_tmp_840;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].z_velocity[0].value.value += -16383;
                                                __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].z_velocity[0].value.value;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].z_velocity[0].value.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000668\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].z_velocity[0].value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].z_velocity[0].value: " <<
                                                                 ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].z_velocity[0].value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                uint8_t* _tmp_841 = (uint8_t*) buffer++;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].z_velocity[0].confidence.value = *_tmp_841;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].z_velocity[0].confidence.value += 1;
                                                __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].z_velocity[0].confidence.value;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].z_velocity[0].confidence.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000669\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].z_velocity[0].confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].z_velocity[0].confidence: " <<
                                                                 ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].polar_velocity[0].z_velocity[0].confidence.value << " (" << __aux64__ << ")";
                                                }
                                        }
                                }
                                else if(_choice_15 == 1)  // CHOICE Velocity3dWithConfidence  fieldName(cartesian_velocity)
                                {
                                    its_container_v3_etsi_its_cdd_msgs::VelocityCartesian _tmp_842;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity.push_back(_tmp_842);
                                
                                        // VelocityCartesian  SEQUENCE
                                            //  xVelocity  VelocityComponent     
                                            //  yVelocity  VelocityComponent     
                                            //  zVelocity  VelocityComponent   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::VelocityComponent _tmp_843;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].z_velocity.push_back(_tmp_843);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m000670\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].z_velocity " << tools::green("present");
                                        }
                                        
                                        // Field name: x_velocity
                                            // VelocityComponent  SEQUENCE
                                                //  value      VelocityComponentValue     
                                                //  confidence SpeedConfidence            
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_844 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].x_velocity.value.value = *_tmp_844;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].x_velocity.value.value += -16383;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].x_velocity.value.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].x_velocity.value.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].x_velocity.value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].x_velocity.value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000671\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].x_velocity.value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].x_velocity.value: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].x_velocity.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                            uint8_t* _tmp_845 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].x_velocity.confidence.value = *_tmp_845;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].x_velocity.confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].x_velocity.confidence.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].x_velocity.confidence.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].x_velocity.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].x_velocity.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000672\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].x_velocity.confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].x_velocity.confidence: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].x_velocity.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        // Field name: y_velocity
                                            // VelocityComponent  SEQUENCE
                                                //  value      VelocityComponentValue     
                                                //  confidence SpeedConfidence            
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_846 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].y_velocity.value.value = *_tmp_846;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].y_velocity.value.value += -16383;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].y_velocity.value.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].y_velocity.value.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].y_velocity.value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].y_velocity.value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000673\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].y_velocity.value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].y_velocity.value: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].y_velocity.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                            uint8_t* _tmp_847 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].y_velocity.confidence.value = *_tmp_847;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].y_velocity.confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].y_velocity.confidence.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].y_velocity.confidence.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].y_velocity.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].y_velocity.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000674\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].y_velocity.confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].y_velocity.confidence: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].y_velocity.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].z_velocity.size() != 0) {
                                            // Field name: z_velocity
                                                // VelocityComponent  SEQUENCE
                                                    //  value      VelocityComponentValue     
                                                    //  confidence SpeedConfidence            
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_848 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].z_velocity[0].value.value = *_tmp_848;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].z_velocity[0].value.value += -16383;
                                                __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].z_velocity[0].value.value;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].z_velocity[0].value.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000675\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].z_velocity[0].value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].z_velocity[0].value: " <<
                                                                 ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].z_velocity[0].value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                uint8_t* _tmp_849 = (uint8_t*) buffer++;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value = *_tmp_849;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value += 1;
                                                __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000676\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].z_velocity[0].confidence: " <<
                                                                 ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value << " (" << __aux64__ << ")";
                                                }
                                        }
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(_choice_15) << ") selected in CHOICE Velocity3dWithConfidence in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].velocity[0]'; message dropped.";
                                    return false;
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration.size() != 0) {
                                // Field name: acceleration
                                // Choice
                                   // #0  polarAcceleration   AccelerationPolarWithZ   
                                   // #1  cartesianAcceleration   AccelerationCartesian   
                                uint8_t _choice_16 = *(buffer++);
                                
                                if(_choice_16 == 0) {
                                    its_container_v3_etsi_its_cdd_msgs::AccelerationPolarWithZ _tmp_850;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration.push_back(_tmp_850);
                                
                                        // AccelerationPolarWithZ  SEQUENCE
                                            //  accelerationMagnitude AccelerationMagnitude     
                                            //  accelerationDirection CartesianAngle            
                                            //  zAcceleration         AccelerationComponent   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::AccelerationComponent _tmp_851;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].z_acceleration.push_back(_tmp_851);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m000677\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].z_acceleration " << tools::green("present");
                                        }
                                        
                                        // Field name: acceleration_magnitude
                                            // AccelerationMagnitude  SEQUENCE
                                                //  accelerationMagnitudeValue AccelerationMagnitudeValue     
                                                //  accelerationConfidence     AccelerationConfidence         
                                            
                                            // Field name: acceleration_magnitude_value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(161) span(162) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_852 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value = *_tmp_852;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000678\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: acceleration_confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_853 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value = *_tmp_853;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000679\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        // Field name: acceleration_direction
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_854 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_direction.value.value = *_tmp_854;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_direction.value.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_direction.value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_direction.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_direction.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000680\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_direction.value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_direction.value: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_direction.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_855 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value = *_tmp_855;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000681\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_direction.confidence: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].z_acceleration.size() != 0) {
                                            // Field name: z_acceleration
                                                // AccelerationComponent  SEQUENCE
                                                    //  value      AccelerationValue          
                                                    //  confidence AccelerationConfidence     
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_856 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value = *_tmp_856;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value += -160;
                                                __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000682\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].z_acceleration[0].value: " <<
                                                                 ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                uint8_t* _tmp_857 = (uint8_t*) buffer++;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value = *_tmp_857;
                                                __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000683\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence: " <<
                                                                 ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value << " (" << __aux64__ << ")";
                                                }
                                        }
                                }
                                else if(_choice_16 == 1)  // CHOICE Acceleration3dWithConfidence  fieldName(cartesian_acceleration)
                                {
                                    its_container_v3_etsi_its_cdd_msgs::AccelerationCartesian _tmp_858;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration.push_back(_tmp_858);
                                
                                        // AccelerationCartesian  SEQUENCE
                                            //  xAcceleration AccelerationComponent     
                                            //  yAcceleration AccelerationComponent     
                                            //  zAcceleration AccelerationComponent   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::AccelerationComponent _tmp_859;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].z_acceleration.push_back(_tmp_859);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m000684\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].z_acceleration " << tools::green("present");
                                        }
                                        
                                        // Field name: x_acceleration
                                            // AccelerationComponent  SEQUENCE
                                                //  value      AccelerationValue          
                                                //  confidence AccelerationConfidence     
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_860 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value = *_tmp_860;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value += -160;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000685\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].x_acceleration.value: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_861 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value = *_tmp_861;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000686\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        // Field name: y_acceleration
                                            // AccelerationComponent  SEQUENCE
                                                //  value      AccelerationValue          
                                                //  confidence AccelerationConfidence     
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_862 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value = *_tmp_862;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value += -160;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000687\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].y_acceleration.value: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_863 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value = *_tmp_863;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000688\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].z_acceleration.size() != 0) {
                                            // Field name: z_acceleration
                                                // AccelerationComponent  SEQUENCE
                                                    //  value      AccelerationValue          
                                                    //  confidence AccelerationConfidence     
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_864 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value = *_tmp_864;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value += -160;
                                                __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000689\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value: " <<
                                                                 ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                uint8_t* _tmp_865 = (uint8_t*) buffer++;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value = *_tmp_865;
                                                __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000690\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence: " <<
                                                                 ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value << " (" << __aux64__ << ")";
                                                }
                                        }
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(_choice_16) << ") selected in CHOICE Acceleration3dWithConfidence in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].acceleration[0]'; message dropped.";
                                    return false;
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles.size() != 0) {
                                // Field name: angles
                                    // EulerAnglesWithConfidence  SEQUENCE
                                        //  zAngle     CartesianAngle     
                                        //  yAngle     CartesianAngle   OPTIONAL  
                                        //  xAngle     CartesianAngle   OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::CartesianAngle _tmp_866;
                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].y_angle.push_back(_tmp_866);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000691\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].y_angle " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::CartesianAngle _tmp_867;
                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].x_angle.push_back(_tmp_867);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000692\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].x_angle " << tools::green("present");
                                    }
                                    
                                    // Field name: z_angle
                                        // CartesianAngle  SEQUENCE
                                            //  value      CartesianAngleValue     
                                            //  confidence AngleConfidence         
                                        
                                        // Field name: value
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_868 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].z_angle.value.value = *_tmp_868;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].z_angle.value.value;
                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].z_angle.value.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].z_angle.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].z_angle.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000693\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].z_angle.value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].z_angle.value: " <<
                                                         ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].z_angle.value.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: confidence
                                        // Real
                                        // Float
                                        // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                        uint8_t* _tmp_869 = (uint8_t*) buffer++;
                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].z_angle.confidence.value = *_tmp_869;
                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].z_angle.confidence.value += 1;
                                        __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].z_angle.confidence.value;
                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].z_angle.confidence.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].z_angle.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].z_angle.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000694\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].z_angle.confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].z_angle.confidence: " <<
                                                         ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].z_angle.confidence.value << " (" << __aux64__ << ")";
                                        }
                                    
                                    if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].y_angle.size() != 0) {
                                        // Field name: y_angle
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_870 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].y_angle[0].value.value = *_tmp_870;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].y_angle[0].value.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].y_angle[0].value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].y_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].y_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000695\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].y_angle[0].value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].y_angle[0].value: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].y_angle[0].value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_871 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].y_angle[0].confidence.value = *_tmp_871;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].y_angle[0].confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].y_angle[0].confidence.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].y_angle[0].confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].y_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].y_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000696\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].y_angle[0].confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].y_angle[0].confidence: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].y_angle[0].confidence.value << " (" << __aux64__ << ")";
                                            }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].x_angle.size() != 0) {
                                        // Field name: x_angle
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_872 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].x_angle[0].value.value = *_tmp_872;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].x_angle[0].value.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].x_angle[0].value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].x_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].x_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000697\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].x_angle[0].value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].x_angle[0].value: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].x_angle[0].value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_873 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].x_angle[0].confidence.value = *_tmp_873;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].x_angle[0].confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].x_angle[0].confidence.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].x_angle[0].confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].x_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].x_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000698\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].x_angle[0].confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].x_angle[0].confidence: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].angles[0].x_angle[0].confidence.value << " (" << __aux64__ << ")";
                                            }
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].z_angular_velocity.size() != 0) {
                                // Field name: z_angular_velocity
                                    // CartesianAngularVelocityComponent  SEQUENCE
                                        //  value      CartesianAngularVelocityComponentValue     
                                        //  confidence AngularSpeedConfidence                     
                                    
                                    // Field name: value
                                    // Integer
                                    // INT16  min(-255) max(256) span(512) datatype(Int16)
                                    uint16_t* _tmp_874 = (uint16_t*) buffer; buffer += 2;
                                    __aux64__ = *_tmp_874;
                                    __aux64__ += -255;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].z_angular_velocity[0].value.value = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000699\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].z_angular_velocity[0].value.value) << 
                                                     " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].z_angular_velocity[0].value.value: " << ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].z_angular_velocity[0].value.value;
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -255) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].z_angular_velocity[0].value.value' " << (__aux64__) << " is less than allowable (-255); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].z_angular_velocity[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                        return false;
                                    }
                                    
                                    // Field name: confidence
                                    // Enumerated
                                    // INT32  min(0) max(7) span(8) datatype(Int32)
                                    uint8_t* _tmp_875 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_875;
                                    __aux64__ += 0;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].z_angular_velocity[0].confidence.value = __aux64__;
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].z_angular_velocity[0].confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 7) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].z_angular_velocity[0].confidence.value' " << (__aux64__) << " exceeds max allowable (7); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000700\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].z_angular_velocity[0].confidence.value) << 
                                                     " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].z_angular_velocity[0].confidence.value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].z_angular_velocity[0].confidence.value);
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices.size() != 0) {
                                // Field name: lower_triangular_correlation_matrices
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(4) span(4)
                                int16_t* _tmp_876 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_876;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_876 = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000701\033[0m| SequenceOf ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0]. size: " << int(*_tmp_876);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].value' " << (__aux64__) << " exceeds max allowable (4); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int f = 0; f < _if__tmp_876; f++) {
                                    its_container_v3_etsi_its_cdd_msgs::LowerTriangularPositiveSemidefiniteMatrix seqof_f;  // SEQUENCE
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements.push_back(seqof_f);
                                
                                        // LowerTriangularPositiveSemidefiniteMatrix  SEQUENCE
                                            //  componentsIncludedIntheMatrix MatrixIncludedComponents                             
                                            //  matrix                        LowerTriangularPositiveSemidefiniteMatrixColumns     
                                        
                                        // Field name: components_included_inthe_matrix
                                        // BitString
                                        // BIT_STRING  min(13) max(13) span(1)
                                        uint8_t* _ext_flag_445 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].components_included_inthe_matrix.
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000702\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].components_included_inthe_matrix.: " << int(*_ext_flag_445);
                                        }
                                        
                                        uint8_t* _tmp_877 = (uint8_t*)buffer;
                                        __aux64__ = *_tmp_877 + 13;
                                        buffer += 1;
                                        
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000703\033[0m| payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].components_included_inthe_matrix.value: " << __aux64__;
                                        
                                        int _if__tmp_877 = __aux64__;
                                        for(int g = 0; g < _if__tmp_877; g++) {
                                            uint8_t __c__;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].components_included_inthe_matrix.values.push_back(__c__);
                                            uint8_t* __b__ = (uint8_t*)buffer++;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].components_included_inthe_matrix.values[g] = (*__b__ == 1);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 13) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].components_included_inthe_matrix.value' " << (__aux64__) << " is less than allowable (13); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 13) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].components_included_inthe_matrix.value' " << (__aux64__) << " exceeds max allowable (13); message dropped.";
                                            return false;
                                        }
                                        
                                        // Field name: matrix
                                        // SequenceOf
                                        // Data Type UInt8
                                        // SEQUENCE_OF  min(1) max(13) span(13)
                                        int16_t* _tmp_878 = (int16_t*)buffer;
                                        buffer += 2;
                                        __aux64__ = *_tmp_878;
                                        __aux64__ += 1;     // +min
                                        
                                        int _if__tmp_878 = __aux64__;
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000704\033[0m| SequenceOf ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].matrix. size: " << int(*_tmp_878);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].matrix.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 13) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].matrix.value' " << (__aux64__) << " exceeds max allowable (13); message dropped.";
                                            return false;
                                        }
                                        
                                        
                                        for(int h = 0; h < _if__tmp_878; h++) {
                                            its_container_v3_etsi_its_cdd_msgs::CorrelationColumn seqof_h;  // SEQUENCE_OF
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].matrix.elements.push_back(seqof_h);
                                        
                                            // SequenceOf
                                            // Data Type UInt8
                                            // SEQUENCE_OF  min(1) max(13) span(13)
                                            uint8_t* _ext_flag_446 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].matrix.elements[h].
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000705\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].matrix.elements[h].: " << int(*_ext_flag_446);
                                            }
                                            
                                            int16_t* _tmp_879 = (int16_t*)buffer;
                                            buffer += 2;
                                            __aux64__ = *_tmp_879;
                                            __aux64__ += 1;     // +min
                                            
                                            int _if__tmp_879 = __aux64__;
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000706\033[0m| SequenceOf ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].matrix.elements[h]. size: " << int(*_tmp_879);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].matrix.elements[h].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 13) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].matrix.elements[h].value' " << (__aux64__) << " exceeds max allowable (13); message dropped.";
                                                return false;
                                            }
                                            
                                            
                                            for(int i = 0; i < _if__tmp_879; i++) {
                                                its_container_v3_etsi_its_cdd_msgs::CorrelationCellValue seqof_i;  // INTEGER
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].matrix.elements[h].elements.push_back(seqof_i);
                                            
                                                // Integer
                                                // INT8  min(-100) max(101) span(202) datatype(Int8)
                                                uint8_t* _tmp_880 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_880;
                                                __aux64__ += -100;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].matrix.elements[h].elements[i].value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000707\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].matrix.elements[h].elements[i].value) << 
                                                                 " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].matrix.elements[h].elements[i].value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].matrix.elements[h].elements[i].value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -100) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].matrix.elements[h].elements[i].value' " << (__aux64__) << " is less than allowable (-100); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 101) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].lower_triangular_correlation_matrices[0].elements[f].matrix.elements[h].elements[i].value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                            }
                                            
                                        }
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_z.size() != 0) {
                                // Field name: object_dimension_z
                                    // ObjectDimension  SEQUENCE
                                        //  value      ObjectDimensionValue          
                                        //  confidence ObjectDimensionConfidence     
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_881 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_z[0].value.value = *_tmp_881;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_z[0].value.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_z[0].value.value;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_z[0].value.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_z[0].value.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_z[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000708\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_z[0].value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_z[0].value: " <<
                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_z[0].value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_882 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_z[0].confidence.value = *_tmp_882;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_z[0].confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_z[0].confidence.value;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_z[0].confidence.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_z[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 32) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_z[0].confidence.value' " << (__aux64__) << " exceeds max allowable (32); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000709\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_z[0].confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_z[0].confidence: " <<
                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_z[0].confidence.value << " (" << __aux64__ << ")";
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_y.size() != 0) {
                                // Field name: object_dimension_y
                                    // ObjectDimension  SEQUENCE
                                        //  value      ObjectDimensionValue          
                                        //  confidence ObjectDimensionConfidence     
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_883 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_y[0].value.value = *_tmp_883;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_y[0].value.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_y[0].value.value;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_y[0].value.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_y[0].value.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_y[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000710\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_y[0].value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_y[0].value: " <<
                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_y[0].value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_884 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_y[0].confidence.value = *_tmp_884;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_y[0].confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_y[0].confidence.value;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_y[0].confidence.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_y[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 32) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_y[0].confidence.value' " << (__aux64__) << " exceeds max allowable (32); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000711\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_y[0].confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_y[0].confidence: " <<
                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_y[0].confidence.value << " (" << __aux64__ << ")";
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_x.size() != 0) {
                                // Field name: object_dimension_x
                                    // ObjectDimension  SEQUENCE
                                        //  value      ObjectDimensionValue          
                                        //  confidence ObjectDimensionConfidence     
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_885 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_x[0].value.value = *_tmp_885;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_x[0].value.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_x[0].value.value;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_x[0].value.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_x[0].value.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_x[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000712\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_x[0].value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_x[0].value: " <<
                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_x[0].value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_886 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_x[0].confidence.value = *_tmp_886;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_x[0].confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_x[0].confidence.value;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_x[0].confidence.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_x[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 32) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_x[0].confidence.value' " << (__aux64__) << " exceeds max allowable (32); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000713\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_x[0].confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_x[0].confidence: " <<
                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_dimension_x[0].confidence.value << " (" << __aux64__ << ")";
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_age.size() != 0) {
                                // Field name: object_age
                                // Real
                                // Float
                                // FLOAT  min(0) max(2047) span(2048) scaleDivisor(1000.0) dataType(Float)
                                uint16_t* _tmp_887 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_age[0].value = *_tmp_887;
                                __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_age[0].value;
                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_age[0].value /= 1000.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_age[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 2047) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_age[0].value' " << (__aux64__) << " exceeds max allowable (2047); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000714\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_age[0].value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_age[0]: " <<
                                                 ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_age[0].value << " (" << __aux64__ << ")";
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_perception_quality.size() != 0) {
                                // Field name: object_perception_quality
                                // Integer
                                // UINT8  min(0) max(15) span(16) datatype(UInt8)
                                uint8_t* _tmp_888 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_888;
                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_perception_quality[0].value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000715\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_perception_quality[0].value) << 
                                                 " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_perception_quality[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_perception_quality[0].value);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_perception_quality[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].object_perception_quality[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                    return false;
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].sensor_id_list.size() != 0) {
                                // Field name: sensor_id_list
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(128) span(128)
                                uint8_t* _ext_flag_454 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].sensor_id_list[0].
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000716\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].sensor_id_list[0].: " << int(*_ext_flag_454);
                                }
                                
                                int16_t* _tmp_889 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_889;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_889 = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000717\033[0m| SequenceOf ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].sensor_id_list[0]. size: " << int(*_tmp_889);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].sensor_id_list[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 128) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].sensor_id_list[0].value' " << (__aux64__) << " exceeds max allowable (128); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int j = 0; j < _if__tmp_889; j++) {
                                    its_container_v3_etsi_its_cdd_msgs::Identifier1B seqof_j;  // INTEGER
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].sensor_id_list[0].elements.push_back(seqof_j);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_890 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_890;
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].sensor_id_list[0].elements[j].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000718\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].sensor_id_list[0].elements[j].value) << 
                                                     " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].sensor_id_list[0].elements[j].value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].sensor_id_list[0].elements[j].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].sensor_id_list[0].elements[j].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].sensor_id_list[0].elements[j].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification.size() != 0) {
                                // Field name: classification
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(8) span(8)
                                int16_t* _tmp_891 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_891;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_891 = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m000719\033[0m| SequenceOf ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0]. size: " << int(*_tmp_891);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 8) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int k = 0; k < _if__tmp_891; k++) {
                                    its_container_v3_etsi_its_cdd_msgs::ObjectClassWithConfidence seqof_k;  // SEQUENCE
                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements.push_back(seqof_k);
                                
                                        // ObjectClassWithConfidence  SEQUENCE
                                            //  objectClass ObjectClass         
                                            //  confidence  ConfidenceLevel     
                                        
                                        // Field name: object_class
                                        // Choice
                                        uint8_t* _ext_flag_455 = (uint8_t*)buffer++; // ext flag
                                        
                                           // #0  vehicleSubClass   TrafficParticipantType   
                                           // #1  vruSubClass   VruProfileAndSubprofile   
                                           // #2  groupSubClass   VruClusterInformation   
                                           // #3  otherSubClass   OtherSubClass   
                                        uint8_t _choice_17 = *(buffer++);
                                        
                                        if(*_ext_flag_455)
                                            _choice_17 += 3 + 1; // Ext addition
                                        
                                        if(_choice_17 == 0) {
                                            its_container_v3_etsi_its_cdd_msgs::TrafficParticipantType _tmp_892;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vehicle_sub_class.push_back(_tmp_892);
                                        
                                            // Integer
                                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                            uint8_t* _tmp_893 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_893;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vehicle_sub_class[0].value = __aux64__;
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000720\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vehicle_sub_class[0].value) << 
                                                             " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vehicle_sub_class[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vehicle_sub_class[0].value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vehicle_sub_class[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vehicle_sub_class[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                return false;
                                            }
                                        }
                                        else if(_choice_17 == 1)  // CHOICE ObjectClass  fieldName(vru_sub_class)
                                        {
                                            its_container_v3_etsi_its_cdd_msgs::VruProfileAndSubprofile _tmp_894;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class.push_back(_tmp_894);
                                        
                                            // Choice
                                            uint8_t* _ext_flag_456 = (uint8_t*)buffer++; // ext flag
                                            
                                               // #0  pedestrian   VruSubProfilePedestrian   
                                               // #1  bicyclistAndLightVruVehicle   VruSubProfileBicyclist   
                                               // #2  motorcyclist   VruSubProfileMotorcyclist   
                                               // #3  animal   VruSubProfileAnimal   
                                            uint8_t _choice_18 = *(buffer++);
                                            
                                            if(*_ext_flag_456)
                                                _choice_18 += 3 + 1; // Ext addition
                                            
                                            if(_choice_18 == 0) {
                                                its_container_v3_etsi_its_cdd_msgs::VruSubProfilePedestrian _tmp_895;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].pedestrian.push_back(_tmp_895);
                                            
                                                // Enumerated
                                                // INT32  min(0) max(15) span(16) datatype(Int32)
                                                uint8_t* _tmp_896 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_896;
                                                __aux64__ += 0;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].pedestrian[0].value = __aux64__;
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].pedestrian[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].pedestrian[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000721\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].pedestrian[0].value) << 
                                                                 " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].pedestrian[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].pedestrian[0].value);
                                                }
                                            }
                                            else if(_choice_18 == 1)  // CHOICE VruProfileAndSubprofile  fieldName(bicyclist_and_light_vru_vehicle)
                                            {
                                                its_container_v3_etsi_its_cdd_msgs::VruSubProfileBicyclist _tmp_897;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle.push_back(_tmp_897);
                                            
                                                // Enumerated
                                                // INT32  min(0) max(15) span(16) datatype(Int32)
                                                uint8_t* _tmp_898 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_898;
                                                __aux64__ += 0;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value = __aux64__;
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000722\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value) << 
                                                                 " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value);
                                                }
                                            }
                                            else if(_choice_18 == 2)  // CHOICE VruProfileAndSubprofile  fieldName(motorcyclist)
                                            {
                                                its_container_v3_etsi_its_cdd_msgs::VruSubProfileMotorcyclist _tmp_899;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].motorcyclist.push_back(_tmp_899);
                                            
                                                // Enumerated
                                                // INT32  min(0) max(15) span(16) datatype(Int32)
                                                uint8_t* _tmp_900 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_900;
                                                __aux64__ += 0;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].motorcyclist[0].value = __aux64__;
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].motorcyclist[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].motorcyclist[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000723\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].motorcyclist[0].value) << 
                                                                 " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].motorcyclist[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].motorcyclist[0].value);
                                                }
                                            }
                                            else if(_choice_18 == 3)  // CHOICE VruProfileAndSubprofile  fieldName(animal)
                                            {
                                                its_container_v3_etsi_its_cdd_msgs::VruSubProfileAnimal _tmp_901;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].animal.push_back(_tmp_901);
                                            
                                                // Enumerated
                                                // INT32  min(0) max(15) span(16) datatype(Int32)
                                                uint8_t* _tmp_902 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_902;
                                                __aux64__ += 0;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].animal[0].value = __aux64__;
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].animal[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].animal[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000724\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].animal[0].value) << 
                                                                 " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].animal[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.vru_sub_class[0].animal[0].value);
                                                }
                                            }
                                            else
                                            {
                                                uint16_t* _tmp_903 = (uint16_t*)buffer;  // OpenType length
                                                buffer += 2 + int(*_tmp_903);            // Ignoring opentype data
                                            }
                                        }
                                        else if(_choice_17 == 2)  // CHOICE ObjectClass  fieldName(group_sub_class)
                                        {
                                            its_container_v3_etsi_its_cdd_msgs::VruClusterInformation _tmp_904;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class.push_back(_tmp_904);
                                        
                                                // VruClusterInformation  SEQUENCE
                                                    //  clusterId               Identifier1B         OPTIONAL  
                                                    //  clusterBoundingBoxShape Shape                OPTIONAL  
                                                    //  clusterCardinalitySize  CardinalNumber1B       
                                                    //  clusterProfiles         VruClusterProfiles   OPTIONAL  
                                                    //  ...
                                                uint8_t* _ext_flag_461 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000725\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].: " << int(*_ext_flag_461);
                                                }
                                                
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::Identifier1B _tmp_905;
                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_id.push_back(_tmp_905);
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m000726\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_id " << tools::green("present");
                                                }
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::Shape _tmp_906;
                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape.push_back(_tmp_906);
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m000727\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape " << tools::green("present");
                                                }
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::VruClusterProfiles _tmp_907;
                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_profiles.push_back(_tmp_907);
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m000728\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_profiles " << tools::green("present");
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_id.size() != 0) {
                                                    // Field name: cluster_id
                                                    // Integer
                                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                    uint8_t* _tmp_908 = (uint8_t*) buffer++;
                                                    __aux64__ = *_tmp_908;
                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_id[0].value = __aux64__;
                                                    
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m000729\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_id[0].value) << 
                                                                     " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_id[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_id[0].value);
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape.size() != 0) {
                                                    // Field name: cluster_bounding_box_shape
                                                    // Choice
                                                    uint8_t* _ext_flag_462 = (uint8_t*)buffer++; // ext flag
                                                    
                                                       // #0  rectangular   RectangularShape   
                                                       // #1  circular   CircularShape   
                                                       // #2  polygonal   PolygonalShape   
                                                       // #3  elliptical   EllipticalShape   
                                                       // #4  radial   RadialShape   
                                                       // #5  radialShapes   RadialShapes   
                                                    uint8_t _choice_19 = *(buffer++);
                                                    
                                                    if(*_ext_flag_462)
                                                        _choice_19 += 5 + 1; // Ext addition
                                                    
                                                    if(_choice_19 == 0) {
                                                        its_container_v3_etsi_its_cdd_msgs::RectangularShape _tmp_909;
                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular.push_back(_tmp_909);
                                                    
                                                            // RectangularShape  SEQUENCE
                                                                //  centerPoint CartesianPosition3d   OPTIONAL  
                                                                //  semiLength  StandardLength12b       
                                                                //  semiBreadth StandardLength12b       
                                                                //  orientation Wgs84AngleValue       OPTIONAL  
                                                                //  height      StandardLength12b     OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_910;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point.push_back(_tmp_910);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m000730\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::Wgs84AngleValue _tmp_911;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation.push_back(_tmp_911);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m000731\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_912;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height.push_back(_tmp_912);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m000732\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point.size() != 0) {
                                                                // Field name: center_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_913;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate.push_back(_tmp_913);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m000733\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_914 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value = *_tmp_914;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m000734\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_915 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value = *_tmp_915;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m000735\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_916 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value = *_tmp_916;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m000736\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: semi_length
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_917 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value = *_tmp_917;
                                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m000737\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length: " <<
                                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: semi_breadth
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_918 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value = *_tmp_918;
                                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m000738\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth: " <<
                                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation.size() != 0) {
                                                                // Field name: orientation
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_919 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value = *_tmp_919;
                                                                __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m000739\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height.size() != 0) {
                                                                // Field name: height
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_920 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value = *_tmp_920;
                                                                __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m000740\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_19 == 1)  // CHOICE Shape  fieldName(circular)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::CircularShape _tmp_921;
                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular.push_back(_tmp_921);
                                                    
                                                            // CircularShape  SEQUENCE
                                                                //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                //  radius              StandardLength12b       
                                                                //  height              StandardLength12b     OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_922;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point.push_back(_tmp_922);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m000741\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_923;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height.push_back(_tmp_923);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m000742\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point.size() != 0) {
                                                                // Field name: shape_reference_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_924;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate.push_back(_tmp_924);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m000743\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_925 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value = *_tmp_925;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m000744\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_926 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value = *_tmp_926;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m000745\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_927 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_927;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m000746\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: radius
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_928 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value = *_tmp_928;
                                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m000747\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius: " <<
                                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height.size() != 0) {
                                                                // Field name: height
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_929 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value = *_tmp_929;
                                                                __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m000748\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_19 == 2)  // CHOICE Shape  fieldName(polygonal)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::PolygonalShape _tmp_930;
                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal.push_back(_tmp_930);
                                                    
                                                            // PolygonalShape  SEQUENCE
                                                                //  shapeReferencePoint CartesianPosition3d             OPTIONAL  
                                                                //  polygon             SequenceOfCartesianPosition3d     
                                                                //  height              StandardLength12b               OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_931;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point.push_back(_tmp_931);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m000749\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_932;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height.push_back(_tmp_932);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m000750\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point.size() != 0) {
                                                                // Field name: shape_reference_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_933;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.push_back(_tmp_933);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m000751\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_934 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value = *_tmp_934;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m000752\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_935 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value = *_tmp_935;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m000753\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_936 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_936;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m000754\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: polygon
                                                            // SequenceOf
                                                            // Data Type UInt8
                                                            // SEQUENCE_OF  min(1) max(16) span(16)
                                                            uint8_t* _ext_flag_478 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m000755\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.: " << int(*_ext_flag_478);
                                                            }
                                                            
                                                            int16_t* _tmp_937 = (int16_t*)buffer;
                                                            buffer += 2;
                                                            __aux64__ = *_tmp_937;
                                                            __aux64__ += 1;     // +min
                                                            
                                                            int _if__tmp_937 = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m000756\033[0m| SequenceOf ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon. size: " << int(*_tmp_937);
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            
                                                            for(int l = 0; l < _if__tmp_937; l++) {
                                                                its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d seqof_l;  // SEQUENCE
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements.push_back(seqof_l);
                                                            
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_938;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].z_coordinate.push_back(_tmp_938);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m000757\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_939 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].x_coordinate.value = *_tmp_939;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m000758\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].x_coordinate.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_940 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].y_coordinate.value = *_tmp_940;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m000759\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].y_coordinate.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_941 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].z_coordinate[0].value = *_tmp_941;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m000760\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].z_coordinate[0].value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[l].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height.size() != 0) {
                                                                // Field name: height
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_942 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value = *_tmp_942;
                                                                __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m000761\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_19 == 3)  // CHOICE Shape  fieldName(elliptical)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::EllipticalShape _tmp_943;
                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical.push_back(_tmp_943);
                                                    
                                                            // EllipticalShape  SEQUENCE
                                                                //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                //  semiMajorAxisLength StandardLength12b       
                                                                //  semiMinorAxisLength StandardLength12b       
                                                                //  orientation         Wgs84AngleValue       OPTIONAL  
                                                                //  height              StandardLength12b     OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_944;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point.push_back(_tmp_944);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m000762\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::Wgs84AngleValue _tmp_945;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation.push_back(_tmp_945);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m000763\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::StandardLength12b _tmp_946;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height.push_back(_tmp_946);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m000764\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point.size() != 0) {
                                                                // Field name: shape_reference_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_947;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.push_back(_tmp_947);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m000765\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_948 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value = *_tmp_948;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m000766\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_949 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value = *_tmp_949;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m000767\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_950 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_950;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m000768\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: semi_major_axis_length
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_951 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value = *_tmp_951;
                                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m000769\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length: " <<
                                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: semi_minor_axis_length
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_952 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value = *_tmp_952;
                                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m000770\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length: " <<
                                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation.size() != 0) {
                                                                // Field name: orientation
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_953 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value = *_tmp_953;
                                                                __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m000771\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height.size() != 0) {
                                                                // Field name: height
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_954 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value = *_tmp_954;
                                                                __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m000772\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_19 == 4)  // CHOICE Shape  fieldName(radial)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::RadialShape _tmp_955;
                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial.push_back(_tmp_955);
                                                    
                                                            // RadialShape  SEQUENCE
                                                                //  shapeReferencePoint                   CartesianPosition3d   OPTIONAL  
                                                                //  range                                 StandardLength12b       
                                                                //  stationaryHorizontalOpeningAngleStart Wgs84AngleValue         
                                                                //  stationaryHorizontalOpeningAngleEnd   Wgs84AngleValue         
                                                                //  verticalOpeningAngleStart             CartesianAngleValue   OPTIONAL  
                                                                //  verticalOpeningAngleEnd               CartesianAngleValue   OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::CartesianPosition3d _tmp_956;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point.push_back(_tmp_956);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m000773\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_957;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start.push_back(_tmp_957);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m000774\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_958;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end.push_back(_tmp_958);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m000775\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point.size() != 0) {
                                                                // Field name: shape_reference_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::CartesianCoordinate _tmp_959;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate.push_back(_tmp_959);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m000776\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_960 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value = *_tmp_960;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m000777\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_961 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value = *_tmp_961;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m000778\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_962 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_962;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m000779\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: range
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_963 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value = *_tmp_963;
                                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m000780\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range: " <<
                                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: stationary_horizontal_opening_angle_start
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_964 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value = *_tmp_964;
                                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m000781\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start: " <<
                                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: stationary_horizontal_opening_angle_end
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_965 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value = *_tmp_965;
                                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m000782\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end: " <<
                                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start.size() != 0) {
                                                                // Field name: vertical_opening_angle_start
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_966 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value = *_tmp_966;
                                                                __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m000783\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end.size() != 0) {
                                                                // Field name: vertical_opening_angle_end
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_967 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value = *_tmp_967;
                                                                __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m000784\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_19 == 5)  // CHOICE Shape  fieldName(radial_shapes)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::RadialShapes _tmp_968;
                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes.push_back(_tmp_968);
                                                    
                                                            // RadialShapes  SEQUENCE
                                                                //  refPointId       Identifier1B                 
                                                                //  xCoordinate      CartesianCoordinateSmall     
                                                                //  yCoordinate      CartesianCoordinateSmall     
                                                                //  zCoordinate      CartesianCoordinateSmall   OPTIONAL  
                                                                //  radialShapesList RadialShapesList             
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::CartesianCoordinateSmall _tmp_969;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate.push_back(_tmp_969);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m000785\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate " << tools::green("present");
                                                            }
                                                            
                                                            // Field name: ref_point_id
                                                            // Integer
                                                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                            uint8_t* _tmp_970 = (uint8_t*) buffer++;
                                                            __aux64__ = *_tmp_970;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m000786\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value) << 
                                                                             " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value);
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            // Field name: x_coordinate
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                            uint16_t* _tmp_971 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value = *_tmp_971;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value += -3094;
                                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value /= 100.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m000787\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate: " <<
                                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: y_coordinate
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                            uint16_t* _tmp_972 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value = *_tmp_972;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value += -3094;
                                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value;
                                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value /= 100.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m000788\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate: " <<
                                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate.size() != 0) {
                                                                // Field name: z_coordinate
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                                uint16_t* _tmp_973 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value = *_tmp_973;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value += -3094;
                                                                __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value;
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value /= 100.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m000789\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                            
                                                            // Field name: radial_shapes_list
                                                            // SequenceOf
                                                            // Data Type UInt8
                                                            // SEQUENCE_OF  min(1) max(16) span(16)
                                                            uint8_t* _ext_flag_501 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m000790\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.: " << int(*_ext_flag_501);
                                                            }
                                                            
                                                            int16_t* _tmp_974 = (int16_t*)buffer;
                                                            buffer += 2;
                                                            __aux64__ = *_tmp_974;
                                                            __aux64__ += 1;     // +min
                                                            
                                                            int _if__tmp_974 = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m000791\033[0m| SequenceOf ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list. size: " << int(*_tmp_974);
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            
                                                            for(int m = 0; m < _if__tmp_974; m++) {
                                                                its_container_v3_etsi_its_cdd_msgs::RadialShapeDetails seqof_m;  // SEQUENCE
                                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements.push_back(seqof_m);
                                                            
                                                                    // RadialShapeDetails  SEQUENCE
                                                                        //  range                       StandardLength12b       
                                                                        //  horizontalOpeningAngleStart CartesianAngleValue     
                                                                        //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                                                        //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                                                        //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_975;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start.push_back(_tmp_975);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m000792\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start " << tools::green("present");
                                                                    }
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::CartesianAngleValue _tmp_976;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end.push_back(_tmp_976);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m000793\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: range
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_977 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].range.value = *_tmp_977;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].range.value;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].range.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m000794\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].range.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].range: " <<
                                                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].range.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: horizontal_opening_angle_start
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_978 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_start.value = *_tmp_978;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_start.value;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_start.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m000795\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_start: " <<
                                                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: horizontal_opening_angle_end
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_979 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_end.value = *_tmp_979;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_end.value;
                                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_end.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m000796\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_end: " <<
                                                                                     ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start.size() != 0) {
                                                                        // Field name: vertical_opening_angle_start
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                        uint16_t* _tmp_980 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start[0].value = *_tmp_980;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start[0].value;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start[0].value /= 10.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m000797\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end.size() != 0) {
                                                                        // Field name: vertical_opening_angle_end
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                        uint16_t* _tmp_981 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end[0].value = *_tmp_981;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end[0].value;
                                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end[0].value /= 10.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m000798\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                    }
                                                    else
                                                    {
                                                        uint16_t* _tmp_982 = (uint16_t*)buffer;  // OpenType length
                                                        buffer += 2 + int(*_tmp_982);            // Ignoring opentype data
                                                    }
                                                }
                                                
                                                // Field name: cluster_cardinality_size
                                                // Integer
                                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                uint8_t* _tmp_983 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_983;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_cardinality_size.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000799\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_cardinality_size.value) << 
                                                                 " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_cardinality_size.value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_cardinality_size.value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_cardinality_size.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_cardinality_size.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_profiles.size() != 0) {
                                                    // Field name: cluster_profiles
                                                    // BitString
                                                    // BIT_STRING  min(4) max(4) span(1)
                                                    uint8_t* _tmp_984 = (uint8_t*)buffer;
                                                    __aux64__ = *_tmp_984 + 4;
                                                    buffer += 1;
                                                    
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m000800\033[0m| payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_profiles[0].value: " << __aux64__;
                                                    
                                                    int _if__tmp_984 = __aux64__;
                                                    for(int n = 0; n < _if__tmp_984; n++) {
                                                        uint8_t __c__;
                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_profiles[0].values.push_back(__c__);
                                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_profiles[0].values[n] = (*__b__ == 1);
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 4) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_profiles[0].value' " << (__aux64__) << " is less than allowable (4); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 4) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].cluster_profiles[0].value' " << (__aux64__) << " exceeds max allowable (4); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                if(*_ext_flag_461) { // from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0]. 
                                                    uint8_t* _tmp_985 = (uint8_t*) buffer++;  // number of extensions
                                                    bool _array_7[*_tmp_985];
                                                    
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m000801\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.group_sub_class[0].: " << static_cast<unsigned int>(*_tmp_985);
                                                    
                                                    // Extensions bytemap
                                                    for(int i = 0; i < *_tmp_985; i++)
                                                        _array_7[i] = (*buffer++) != 0;
                                                    
                                                    // Discarding unknown OpenType containers
                                                    for(int i = 0; i < *_tmp_985; i++) {
                                                        uint16_t* _tmp_986 = (uint16_t*)buffer;  // OpenType length
                                                        buffer += 2;
                                                    
                                                        if(debug) {
                                                        }
                                                    
                                                        for(int i = 0; i < *_tmp_986; i++)
                                                            buffer++;
                                                    }
                                                    
                                                }
                                        }
                                        else if(_choice_17 == 3)  // CHOICE ObjectClass  fieldName(other_sub_class)
                                        {
                                            its_container_v3_etsi_its_cdd_msgs::OtherSubClass _tmp_987;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.other_sub_class.push_back(_tmp_987);
                                        
                                            // Integer
                                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                            uint8_t* _tmp_988 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_988;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.other_sub_class[0].value = __aux64__;
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000802\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.other_sub_class[0].value) << 
                                                             " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.other_sub_class[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.other_sub_class[0].value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.other_sub_class[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].object_class.other_sub_class[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                return false;
                                            }
                                        }
                                        else
                                        {
                                            uint16_t* _tmp_989 = (uint16_t*)buffer;  // OpenType length
                                            buffer += 2 + int(*_tmp_989);            // Ignoring opentype data
                                        }
                                        
                                        // Field name: confidence
                                        // Integer
                                        // UINT8  min(1) max(101) span(101) datatype(UInt8)
                                        uint8_t* _tmp_990 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_990;
                                        __aux64__ += 1;
                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].confidence.value = __aux64__;
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000803\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].confidence.value) << 
                                                         " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].confidence.value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].confidence.value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 101) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].classification[0].elements[k].confidence.value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                                            return false;
                                        }
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position.size() != 0) {
                                // Field name: map_position
                                    // MapPosition  SEQUENCE
                                        //  mapReference             MapReference               OPTIONAL  
                                        //  laneId                   Identifier1B               OPTIONAL  
                                        //  connectionId             Identifier1B               OPTIONAL  
                                        //  longitudinalLanePosition LongitudinalLanePosition   OPTIONAL  
                                        //  ...
                                    uint8_t* _ext_flag_507 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m000804\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].: " << int(*_ext_flag_507);
                                    }
                                    
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::MapReference _tmp_991;
                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference.push_back(_tmp_991);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000805\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::Identifier1B _tmp_992;
                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].lane_id.push_back(_tmp_992);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000806\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].lane_id " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::Identifier1B _tmp_993;
                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].connection_id.push_back(_tmp_993);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000807\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].connection_id " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::LongitudinalLanePosition _tmp_994;
                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].longitudinal_lane_position.push_back(_tmp_994);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000808\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].longitudinal_lane_position " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference.size() != 0) {
                                        // Field name: map_reference
                                        // Choice
                                           // #0  roadsegment   RoadSegmentReferenceId   
                                           // #1  intersection   IntersectionReferenceId   
                                        uint8_t _choice_20 = *(buffer++);
                                        
                                        if(_choice_20 == 0) {
                                            its_container_v3_etsi_its_cdd_msgs::RoadSegmentReferenceId _tmp_995;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].roadsegment.push_back(_tmp_995);
                                        
                                                // RoadSegmentReferenceId  SEQUENCE
                                                    //  region     Identifier2B   OPTIONAL  
                                                    //  id         Identifier2B     
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::Identifier2B _tmp_996;
                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].roadsegment[0].region.push_back(_tmp_996);
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m000809\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].roadsegment[0].region " << tools::green("present");
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].roadsegment[0].region.size() != 0) {
                                                    // Field name: region
                                                    // Integer
                                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                    uint16_t* _tmp_997 = (uint16_t*) buffer; buffer += 2;
                                                    __aux64__ = *_tmp_997;
                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].roadsegment[0].region[0].value = __aux64__;
                                                    
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m000810\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].roadsegment[0].region[0].value) << 
                                                                     " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].roadsegment[0].region[0].value: " << ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].roadsegment[0].region[0].value;
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                
                                                // Field name: id
                                                // Integer
                                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                uint16_t* _tmp_998 = (uint16_t*) buffer; buffer += 2;
                                                __aux64__ = *_tmp_998;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].roadsegment[0].id.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000811\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].roadsegment[0].id.value) << 
                                                                 " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].roadsegment[0].id.value: " << ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].roadsegment[0].id.value;
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                    return false;
                                                }
                                        }
                                        else if(_choice_20 == 1)  // CHOICE MapReference  fieldName(intersection)
                                        {
                                            its_container_v3_etsi_its_cdd_msgs::IntersectionReferenceId _tmp_999;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].intersection.push_back(_tmp_999);
                                        
                                                // IntersectionReferenceId  SEQUENCE
                                                    //  region     Identifier2B   OPTIONAL  
                                                    //  id         Identifier2B     
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::Identifier2B _tmp_1000;
                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].intersection[0].region.push_back(_tmp_1000);
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m000812\033[0m| ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].intersection[0].region " << tools::green("present");
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].intersection[0].region.size() != 0) {
                                                    // Field name: region
                                                    // Integer
                                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                    uint16_t* _tmp_1001 = (uint16_t*) buffer; buffer += 2;
                                                    __aux64__ = *_tmp_1001;
                                                    ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].intersection[0].region[0].value = __aux64__;
                                                    
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m000813\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].intersection[0].region[0].value) << 
                                                                     " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].intersection[0].region[0].value: " << ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].intersection[0].region[0].value;
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                
                                                // Field name: id
                                                // Integer
                                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                uint16_t* _tmp_1002 = (uint16_t*) buffer; buffer += 2;
                                                __aux64__ = *_tmp_1002;
                                                ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].intersection[0].id.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m000814\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].intersection[0].id.value) << 
                                                                 " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].intersection[0].id.value: " << ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].intersection[0].id.value;
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                    return false;
                                                }
                                        }
                                        else
                                        {
                                            logger->warning() << "Wrong option (" << static_cast<int>(_choice_20) << ") selected in CHOICE MapReference in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].map_reference[0]'; message dropped.";
                                            return false;
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].lane_id.size() != 0) {
                                        // Field name: lane_id
                                        // Integer
                                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                        uint8_t* _tmp_1003 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_1003;
                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].lane_id[0].value = __aux64__;
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000815\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].lane_id[0].value) << 
                                                         " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].lane_id[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].lane_id[0].value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].lane_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].lane_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                            return false;
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].connection_id.size() != 0) {
                                        // Field name: connection_id
                                        // Integer
                                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                        uint8_t* _tmp_1004 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_1004;
                                        ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].connection_id[0].value = __aux64__;
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m000816\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].connection_id[0].value) << 
                                                         " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].connection_id[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].connection_id[0].value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].connection_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].connection_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                            return false;
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].longitudinal_lane_position.size() != 0) {
                                        // Field name: longitudinal_lane_position
                                            // LongitudinalLanePosition  SEQUENCE
                                                //  longitudinalLanePositionValue      LongitudinalLanePositionValue          
                                                //  longitudinalLanePositionConfidence LongitudinalLanePositionConfidence     
                                            
                                            // Field name: longitudinal_lane_position_value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(32767) span(32768) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_1005 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value = *_tmp_1005;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000817\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: longitudinal_lane_position_confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(1023) span(1024) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_1006 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value = *_tmp_1006;
                                            __aux64__ = ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                            ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 1023) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' " << (__aux64__) << " exceeds max allowable (1023); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m000818\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value) << " payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence: " <<
                                                             ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value << " (" << __aux64__ << ")";
                                            }
                                    }
                                    if(*_ext_flag_507) { // from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0]. 
                                        uint8_t* _tmp_1007 = (uint8_t*) buffer++;  // number of extensions
                                        bool _array_8[*_tmp_1007];
                                        
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m000819\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].map_position[0].: " << static_cast<unsigned int>(*_tmp_1007);
                                        
                                        // Extensions bytemap
                                        for(int i = 0; i < *_tmp_1007; i++)
                                            _array_8[i] = (*buffer++) != 0;
                                        
                                        // Discarding unknown OpenType containers
                                        for(int i = 0; i < *_tmp_1007; i++) {
                                            uint16_t* _tmp_1008 = (uint16_t*)buffer;  // OpenType length
                                            buffer += 2;
                                        
                                            if(debug) {
                                            }
                                        
                                            for(int i = 0; i < *_tmp_1008; i++)
                                                buffer++;
                                        }
                                        
                                    }
                            }
                            if(*_ext_flag_404) { // from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e]. 
                                uint8_t* _tmp_1009 = (uint8_t*) buffer++;  // number of extensions
                                bool _array_9[*_tmp_1009];
                                
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m000820\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[u].perceived_object_container[0].perceived_objects.elements[e].: " << static_cast<unsigned int>(*_tmp_1009);
                                
                                // Extensions bytemap
                                for(int i = 0; i < *_tmp_1009; i++)
                                    _array_9[i] = (*buffer++) != 0;
                                
                                // Discarding unknown OpenType containers
                                for(int i = 0; i < *_tmp_1009; i++) {
                                    uint16_t* _tmp_1010 = (uint16_t*)buffer;  // OpenType length
                                    buffer += 2;
                                
                                    if(debug) {
                                    }
                                
                                    for(int i = 0; i < *_tmp_1010; i++)
                                        buffer++;
                                }
                                
                            }
                    }
                    if(*_ext_flag_402) { // from ros->payload.cpm_containers.elements[u].perceived_object_container[0]. 
                        uint8_t* _tmp_1011 = (uint8_t*) buffer++;  // number of extensions
                        bool _array_10[*_tmp_1011];
                        
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000821\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[u].perceived_object_container[0].: " << static_cast<unsigned int>(*_tmp_1011);
                        
                        // Extensions bytemap
                        for(int i = 0; i < *_tmp_1011; i++)
                            _array_10[i] = (*buffer++) != 0;
                        
                        // Discarding unknown OpenType containers
                        for(int i = 0; i < *_tmp_1011; i++) {
                            uint16_t* _tmp_1012 = (uint16_t*)buffer;  // OpenType length
                            buffer += 2;
                        
                            if(debug) {
                            }
                        
                            for(int i = 0; i < *_tmp_1012; i++)
                                buffer++;
                        }
                        
                    }
            }
            else
            {
                logger->warning() << "Wrong option (" << static_cast<int>(_choice_11) << ") selected in CHOICE WrappedCpmContainer in 'payload.cpm_containers.elements[u]'; message dropped.";
                return false;
            }
        }
        if(*_ext_flag_277) { // from ros->payload. 
            uint8_t* _tmp_1013 = (uint8_t*) buffer++;  // number of extensions
            bool _array_11[*_tmp_1013];
            
            if(debug)
                logger->debug() << "|\033[38;5;94m000822\033[0m| Reading number of exts from ros->payload.: " << static_cast<unsigned int>(*_tmp_1013);
            
            // Extensions bytemap
            for(int i = 0; i < *_tmp_1013; i++)
                _array_11[i] = (*buffer++) != 0;
            
            // Discarding unknown OpenType containers
            for(int i = 0; i < *_tmp_1013; i++) {
                uint16_t* _tmp_1014 = (uint16_t*)buffer;  // OpenType length
                buffer += 2;
            
                if(debug) {
                }
            
                for(int i = 0; i < *_tmp_1014; i++)
                    buffer++;
            }
            
        }
	
	        return true;
        }
    }
}