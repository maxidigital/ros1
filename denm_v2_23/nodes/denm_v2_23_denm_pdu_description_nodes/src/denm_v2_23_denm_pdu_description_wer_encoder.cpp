/*
 *
 * Copyright (C) German Aerospace Center e.V. (https://www.dlr.de)
 * Institute of Transportation Systems. (https://www.dlr.de/ts/)
 *
 * 
 * Eclipse ADORe, Automated Driving Open Research https://eclipse.org/adore
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 *
 * 
 * File automatically generated with DLR Wind v2
 * 
 * This file belongs to the DLR Wind project de.dlr.ts.v2x:denm_v2_23:1.0
 * 
 * Module: DENM_PDU_Description {itu-t(0) identified-organization(4) etsi(0) itsDomain(5) 
 *         wg1(1) denmPduRelease2(103831) major-version-2(2) minor-version-2(2)}
 * 
 * For support contact v2x-ts@dlr.de
 * 
 *
 */
#include <denm_v2_23_denm_pdu_description_wer_encoder.h>

namespace wind
{
    namespace encoder_denm_v2_23_denm_pdu_description
    {
        WerEncoder::WerEncoder(ScreenLogger* logger, bool debug) 
            : logger(logger), debug(debug) {
        }

        WerEncoder::~WerEncoder() {            
        }
        

        #if WIND_ROS_VERSION == 1
          int WerEncoder::encode(const denm_v2_23_denm_pdu_description_msgs::DENM::ConstPtr& ros, const uint8_t *buffer)
		#else
		  int WerEncoder::encode(const std::shared_ptr<denm_v2_23_denm_pdu_description_msgs::msg::DENM>& ros, const uint8_t *buffer)
          //int WerEncoder::encode(const denm_v2_23_denm_pdu_description_msgs::msg::DENM* ros, const uint8_t *buffer)
		#endif
		{
            const uint8_t *start = buffer;
            int64_t __aux64__;

    // DENM  SEQUENCE
        //  header     ItsPduHeader     
        //  denm       DenmPayload      
    // Optional fields bytemap
    
    // Field:  type(ItsPduHeader) name(hheader) extGroup(0)
        // ItsPduHeader  SEQUENCE
            //  protocolVersion OrdinalNumber1B     
            //  messageId       MessageId           
            //  stationId       StationId           
        // Optional fields bytemap
        
        // Field:  type(OrdinalNumber1B) name(protocol_version) extGroup(0)
        // Integer
        
        // UINT8  min(0) max(255) span(256) dataType(UInt8)
        if(debug) {
            logger->debug() << "|\033[38;5;94m009110\033[0m| " << tools::getTypeName(ros->hheader.protocol_version.value) << 
                         " hheader.protocol_version.value: " << static_cast<int>(ros->hheader.protocol_version.value);
        }
        
        uint8_t* _tmp_10323 = (uint8_t*) buffer++;
        *_tmp_10323 = ros->hheader.protocol_version.value; 
        __aux64__ = ros->hheader.protocol_version.value;
        
        // MIN validator
        if (VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->warning() << "Error: Value in 'hheader.protocol_version.value' (" << __aux64__ << ") less than (0); message dropped.";
            return -1;
        }
        // MAX validator
        if (VALIDATORS_ENABLED && __aux64__ > 255) {
            logger->warning() << "Error: Value in 'hheader.protocol_version.value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
            return -1;
        }
        
        // Field:  type(MessageId) name(message_id) extGroup(0)
        // Integer
        
        // UINT8  min(0) max(255) span(256) dataType(UInt8)
        if(debug) {
            logger->debug() << "|\033[38;5;94m009111\033[0m| " << tools::getTypeName(ros->hheader.message_id.value) << 
                         " hheader.message_id.value: " << static_cast<int>(ros->hheader.message_id.value);
        }
        
        uint8_t* _tmp_10324 = (uint8_t*) buffer++;
        *_tmp_10324 = ros->hheader.message_id.value; 
        __aux64__ = ros->hheader.message_id.value;
        
        // MIN validator
        if (VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->warning() << "Error: Value in 'hheader.message_id.value' (" << __aux64__ << ") less than (0); message dropped.";
            return -1;
        }
        // MAX validator
        if (VALIDATORS_ENABLED && __aux64__ > 255) {
            logger->warning() << "Error: Value in 'hheader.message_id.value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
            return -1;
        }
        
        // Field:  type(StationId) name(station_id) extGroup(0)
        // Integer
        
        // UINT32  min(0) max(4294967295) span(4294967296) dataType(UInt32)
        if(debug) {
            logger->debug() << "|\033[38;5;94m009112\033[0m| " << tools::getTypeName(ros->hheader.station_id.value) << 
                         " hheader.station_id.value: " << ros->hheader.station_id.value;
        }
        
        uint32_t* _tmp_10325 = (uint32_t*) buffer; buffer += 4;
        *_tmp_10325 = ros->hheader.station_id.value; 
        __aux64__ = ros->hheader.station_id.value;
        
        // MIN validator
        if (VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->warning() << "Error: Value in 'hheader.station_id.value' (" << __aux64__ << ") less than (0); message dropped.";
            return -1;
        }
        // MAX validator
        if (VALIDATORS_ENABLED && __aux64__ > 4294967295) {
            logger->warning() << "Error: Value in 'hheader.station_id.value' (" << __aux64__ << ") exceeds max allowable (4294967295); message dropped.";
            return -1;
        }
    
    // Field:  type(DenmPayload) name(denm) extGroup(0)
        // DenmPayload  SEQUENCE
            //  management ManagementContainer     
            //  situation  SituationContainer    OPTIONAL  
            //  location   LocationContainer     OPTIONAL  
            //  alacarte   AlacarteContainer     OPTIONAL  
        // Optional fields bytemap
        char* _tmp_10326 = (char*) buffer++;
        *_tmp_10326 = (ros->denm.situation.size() != 0 ? 1 : 0);
        if(debug)
            logger->debug() << "|\033[38;5;94m009113\033[0m| Optional field situation = " << *_tmp_10326;
        char* _tmp_10327 = (char*) buffer++;
        *_tmp_10327 = (ros->denm.location.size() != 0 ? 1 : 0);
        if(debug)
            logger->debug() << "|\033[38;5;94m009114\033[0m| Optional field location = " << *_tmp_10327;
        char* _tmp_10328 = (char*) buffer++;
        *_tmp_10328 = (ros->denm.alacarte.size() != 0 ? 1 : 0);
        if(debug)
            logger->debug() << "|\033[38;5;94m009115\033[0m| Optional field alacarte = " << *_tmp_10328;
        
        // Field:  type(ManagementContainer) name(management) extGroup(0)
            // ManagementContainer  SEQUENCE
                //  actionId             ActionId                         
                //  detectionTime        TimestampIts                     
                //  referenceTime        TimestampIts                     
                //  termination          Termination                    OPTIONAL  
                //  eventPosition        ReferencePosition                
                //  awarenessDistance    StandardLength3b               OPTIONAL  
                //  trafficDirection     TrafficDirection               OPTIONAL  
                //  validityDuration     DeltaTimeSecond                  
                //  transmissionInterval DeltaTimeMilliSecondPositive   OPTIONAL  
                //  stationType          StationType                      
                //  ...
            uint8_t* _ext_flag_4686 = (uint8_t*) buffer++;  // Write extension flag for ManagementContainer
            *_ext_flag_4686 = 0;  
            
            // Optional fields bytemap
            char* _tmp_10329 = (char*) buffer++;
            *_tmp_10329 = (ros->denm.management.termination.size() != 0 ? 1 : 0);
            if(debug)
                logger->debug() << "|\033[38;5;94m009116\033[0m| Optional field termination = " << *_tmp_10329;
            char* _tmp_10330 = (char*) buffer++;
            *_tmp_10330 = (ros->denm.management.awareness_distance.size() != 0 ? 1 : 0);
            if(debug)
                logger->debug() << "|\033[38;5;94m009117\033[0m| Optional field awareness_distance = " << *_tmp_10330;
            char* _tmp_10331 = (char*) buffer++;
            *_tmp_10331 = (ros->denm.management.traffic_direction.size() != 0 ? 1 : 0);
            if(debug)
                logger->debug() << "|\033[38;5;94m009118\033[0m| Optional field traffic_direction = " << *_tmp_10331;
            char* _tmp_10332 = (char*) buffer++;
            *_tmp_10332 = (ros->denm.management.transmission_interval.size() != 0 ? 1 : 0);
            if(debug)
                logger->debug() << "|\033[38;5;94m009119\033[0m| Optional field transmission_interval = " << *_tmp_10332;
            
            // Field:  type(ActionId) name(action_id) extGroup(0)
                // ActionId  SEQUENCE
                    //  originatingStationId StationId          
                    //  sequenceNumber       SequenceNumber     
                // Optional fields bytemap
                
                // Field:  type(StationId) name(originating_station_id) extGroup(0)
                // Integer
                
                // UINT32  min(0) max(4294967295) span(4294967296) dataType(UInt32)
                if(debug) {
                    logger->debug() << "|\033[38;5;94m009120\033[0m| " << tools::getTypeName(ros->denm.management.action_id.originating_station_id.value) << 
                                 " denm.management.action_id.originating_station_id.value: " << ros->denm.management.action_id.originating_station_id.value;
                }
                
                uint32_t* _tmp_10333 = (uint32_t*) buffer; buffer += 4;
                *_tmp_10333 = ros->denm.management.action_id.originating_station_id.value; 
                __aux64__ = ros->denm.management.action_id.originating_station_id.value;
                
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->warning() << "Error: Value in 'denm.management.action_id.originating_station_id.value' (" << __aux64__ << ") less than (0); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 4294967295) {
                    logger->warning() << "Error: Value in 'denm.management.action_id.originating_station_id.value' (" << __aux64__ << ") exceeds max allowable (4294967295); message dropped.";
                    return -1;
                }
                
                // Field:  type(SequenceNumber) name(sequence_number) extGroup(0)
                // Integer
                
                // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                if(debug) {
                    logger->debug() << "|\033[38;5;94m009121\033[0m| " << tools::getTypeName(ros->denm.management.action_id.sequence_number.value) << 
                                 " denm.management.action_id.sequence_number.value: " << ros->denm.management.action_id.sequence_number.value;
                }
                
                uint16_t* _tmp_10334 = (uint16_t*) buffer; buffer += 2;
                *_tmp_10334 = ros->denm.management.action_id.sequence_number.value; 
                __aux64__ = ros->denm.management.action_id.sequence_number.value;
                
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->warning() << "Error: Value in 'denm.management.action_id.sequence_number.value' (" << __aux64__ << ") less than (0); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                    logger->warning() << "Error: Value in 'denm.management.action_id.sequence_number.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                    return -1;
                }
            
            // Field:  type(TimestampIts) name(detection_time) extGroup(0)
            // Real
            
            // FLOAT  min(0) max(4398046511103) span(4398046511104) scaleDivisor(1000.0) dataType(Float)
            if(debug) {
                logger->debug() << "|\033[38;5;94m009122\033[0m| " << tools::getTypeName(ros->denm.management.detection_time.value) << 
                             " denm.management.detection_time.value: " << ros->denm.management.detection_time.value;
            }
            
            float _tmp_10336 = ros->denm.management.detection_time.value;
            _tmp_10336 *= 1000.0;
            __aux64__ = static_cast<uint64_t>(_tmp_10336);
            uint64_t* _tmp_10335 = (uint64_t*) buffer; buffer += 8;
            *_tmp_10335 = static_cast<uint64_t>(_tmp_10336);
            
            // MIN validator
            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                logger->warning() << "Error: Value in 'denm.management.detection_time.value' (" << __aux64__ << ") less than (0); message dropped.";
                return -1;
            }
            // MAX validator
            if (VALIDATORS_ENABLED && __aux64__ > 4398046511103) {
                logger->warning() << "Error: Value in 'denm.management.detection_time.value' (" << __aux64__ << ") exceeds max allowable (4398046511103); message dropped.";
                return -1;
            }
            
            // Field:  type(TimestampIts) name(reference_time) extGroup(0)
            // Real
            
            // FLOAT  min(0) max(4398046511103) span(4398046511104) scaleDivisor(1000.0) dataType(Float)
            if(debug) {
                logger->debug() << "|\033[38;5;94m009123\033[0m| " << tools::getTypeName(ros->denm.management.reference_time.value) << 
                             " denm.management.reference_time.value: " << ros->denm.management.reference_time.value;
            }
            
            float _tmp_10338 = ros->denm.management.reference_time.value;
            _tmp_10338 *= 1000.0;
            __aux64__ = static_cast<uint64_t>(_tmp_10338);
            uint64_t* _tmp_10337 = (uint64_t*) buffer; buffer += 8;
            *_tmp_10337 = static_cast<uint64_t>(_tmp_10338);
            
            // MIN validator
            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                logger->warning() << "Error: Value in 'denm.management.reference_time.value' (" << __aux64__ << ") less than (0); message dropped.";
                return -1;
            }
            // MAX validator
            if (VALIDATORS_ENABLED && __aux64__ > 4398046511103) {
                logger->warning() << "Error: Value in 'denm.management.reference_time.value' (" << __aux64__ << ") exceeds max allowable (4398046511103); message dropped.";
                return -1;
            }
            
            if(ros->denm.management.termination.size() != 0) {
                // Field:  type(Termination) name(termination) extGroup(0)
                // Enumerated
                // INT32  min(0) max(1) span(2) dataType(Int32)
                if(debug) {
                    logger->debug() << "|\033[38;5;94m009124\033[0m| " << tools::getTypeName(ros->denm.management.termination[0].value) << 
                                 " denm.management.termination[0].value: " << static_cast<int>(ros->denm.management.termination[0].value);
                }
                
                uint8_t* _tmp_10339 = (uint8_t*)buffer;
                buffer += 1;
                *_tmp_10339 = ros->denm.management.termination[0].value; 
                __aux64__ = ros->denm.management.termination[0].value; 
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->warning() << "Error: Value in 'denm.management.termination[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 1) {
                    logger->warning() << "Error: Value in 'denm.management.termination[0].value' (" << __aux64__ << ") exceeds max allowable (1); message dropped.";
                    return -1;
                }
            }
            
            // Field:  type(ReferencePosition) name(event_position) extGroup(0)
                // ReferencePosition  SEQUENCE
                    //  latitude                  Latitude                 
                    //  longitude                 Longitude                
                    //  positionConfidenceEllipse PosConfidenceEllipse     
                    //  altitude                  Altitude                 
                // Optional fields bytemap
                
                // Field:  type(Latitude) name(latitude) extGroup(0)
                // Real
                
                // DOUBLE  min(-900000000) max(900000001) span(1800000002) scaleDivisor(1.0E7) dataType(Double)
                if(debug) {
                    logger->debug() << "|\033[38;5;94m009125\033[0m| " << tools::getTypeName(ros->denm.management.event_position.latitude.value) << 
                                 " denm.management.event_position.latitude.value: " << ros->denm.management.event_position.latitude.value;
                }
                
                double _tmp_10341 = ros->denm.management.event_position.latitude.value;
                _tmp_10341 *= 1.0E7;
                __aux64__ = static_cast<uint64_t>(_tmp_10341);
                _tmp_10341 -= -900000000;
                uint32_t* _tmp_10340 = (uint32_t*) buffer; buffer += 4;
                *_tmp_10340 = static_cast<uint32_t>(_tmp_10341);
                
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < -900000000) {
                    logger->warning() << "Error: Value in 'denm.management.event_position.latitude.value' (" << __aux64__ << ") less than (-900000000); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 900000001) {
                    logger->warning() << "Error: Value in 'denm.management.event_position.latitude.value' (" << __aux64__ << ") exceeds max allowable (900000001); message dropped.";
                    return -1;
                }
                
                // Field:  type(Longitude) name(longitude) extGroup(0)
                // Real
                
                // DOUBLE  min(-1800000000) max(1800000001) span(3600000002) scaleDivisor(1.0E7) dataType(Double)
                if(debug) {
                    logger->debug() << "|\033[38;5;94m009126\033[0m| " << tools::getTypeName(ros->denm.management.event_position.longitude.value) << 
                                 " denm.management.event_position.longitude.value: " << ros->denm.management.event_position.longitude.value;
                }
                
                double _tmp_10343 = ros->denm.management.event_position.longitude.value;
                _tmp_10343 *= 1.0E7;
                __aux64__ = static_cast<uint64_t>(_tmp_10343);
                _tmp_10343 -= -1800000000;
                uint32_t* _tmp_10342 = (uint32_t*) buffer; buffer += 4;
                *_tmp_10342 = static_cast<uint32_t>(_tmp_10343);
                
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < -1800000000) {
                    logger->warning() << "Error: Value in 'denm.management.event_position.longitude.value' (" << __aux64__ << ") less than (-1800000000); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 1800000001) {
                    logger->warning() << "Error: Value in 'denm.management.event_position.longitude.value' (" << __aux64__ << ") exceeds max allowable (1800000001); message dropped.";
                    return -1;
                }
                
                // Field:  type(PosConfidenceEllipse) name(position_confidence_ellipse) extGroup(0)
                    // PosConfidenceEllipse  SEQUENCE
                        //  semiMajorConfidence  SemiAxisLength     
                        //  semiMinorConfidence  SemiAxisLength     
                        //  semiMajorOrientation HeadingValue       
                    // Optional fields bytemap
                    
                    // Field:  type(SemiAxisLength) name(semi_major_confidence) extGroup(0)
                    // Real
                    
                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m009127\033[0m| " << tools::getTypeName(ros->denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value) << 
                                     " denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value: " << ros->denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value;
                    }
                    
                    float _tmp_10345 = ros->denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value;
                    _tmp_10345 *= 100.0;
                    __aux64__ = static_cast<uint64_t>(_tmp_10345);
                    uint16_t* _tmp_10344 = (uint16_t*) buffer; buffer += 2;
                    *_tmp_10344 = static_cast<uint16_t>(_tmp_10345);
                    
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                        return -1;
                    }
                    
                    // Field:  type(SemiAxisLength) name(semi_minor_confidence) extGroup(0)
                    // Real
                    
                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m009128\033[0m| " << tools::getTypeName(ros->denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value) << 
                                     " denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value: " << ros->denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value;
                    }
                    
                    float _tmp_10347 = ros->denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value;
                    _tmp_10347 *= 100.0;
                    __aux64__ = static_cast<uint64_t>(_tmp_10347);
                    uint16_t* _tmp_10346 = (uint16_t*) buffer; buffer += 2;
                    *_tmp_10346 = static_cast<uint16_t>(_tmp_10347);
                    
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                        return -1;
                    }
                    
                    // Field:  type(HeadingValue) name(semi_major_orientation) extGroup(0)
                    // Real
                    
                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m009129\033[0m| " << tools::getTypeName(ros->denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value) << 
                                     " denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value: " << ros->denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value;
                    }
                    
                    float _tmp_10349 = ros->denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value;
                    _tmp_10349 *= 10.0;
                    __aux64__ = static_cast<uint64_t>(_tmp_10349);
                    uint16_t* _tmp_10348 = (uint16_t*) buffer; buffer += 2;
                    *_tmp_10348 = static_cast<uint16_t>(_tmp_10349);
                    
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value' (" << __aux64__ << ") less than (0); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                        return -1;
                    }
                
                // Field:  type(Altitude) name(altitude) extGroup(0)
                    // Altitude  SEQUENCE
                        //  altitudeValue      AltitudeValue          
                        //  altitudeConfidence AltitudeConfidence     
                    // Optional fields bytemap
                    
                    // Field:  type(AltitudeValue) name(altitude_value) extGroup(0)
                    // Real
                    
                    // FLOAT  min(-100000) max(800001) span(900002) scaleDivisor(100.0) dataType(Float)
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m009130\033[0m| " << tools::getTypeName(ros->denm.management.event_position.altitude.altitude_value.value) << 
                                     " denm.management.event_position.altitude.altitude_value.value: " << ros->denm.management.event_position.altitude.altitude_value.value;
                    }
                    
                    float _tmp_10351 = ros->denm.management.event_position.altitude.altitude_value.value;
                    _tmp_10351 *= 100.0;
                    __aux64__ = static_cast<uint64_t>(_tmp_10351);
                    _tmp_10351 -= -100000;
                    uint32_t* _tmp_10350 = (uint32_t*) buffer; buffer += 4;
                    *_tmp_10350 = static_cast<uint32_t>(_tmp_10351);
                    
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < -100000) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.altitude.altitude_value.value' (" << __aux64__ << ") less than (-100000); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 800001) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.altitude.altitude_value.value' (" << __aux64__ << ") exceeds max allowable (800001); message dropped.";
                        return -1;
                    }
                    
                    // Field:  type(AltitudeConfidence) name(altitude_confidence) extGroup(0)
                    // Enumerated
                    // INT32  min(0) max(15) span(16) dataType(Int32)
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m009131\033[0m| " << tools::getTypeName(ros->denm.management.event_position.altitude.altitude_confidence.value) << 
                                     " denm.management.event_position.altitude.altitude_confidence.value: " << static_cast<int>(ros->denm.management.event_position.altitude.altitude_confidence.value);
                    }
                    
                    uint8_t* _tmp_10352 = (uint8_t*)buffer;
                    buffer += 1;
                    *_tmp_10352 = ros->denm.management.event_position.altitude.altitude_confidence.value; 
                    __aux64__ = ros->denm.management.event_position.altitude.altitude_confidence.value; 
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.altitude.altitude_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 15) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.altitude.altitude_confidence.value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                        return -1;
                    }
            
            if(ros->denm.management.awareness_distance.size() != 0) {
                // Field:  type(StandardLength3b) name(awareness_distance) extGroup(0)
                // Enumerated
                // INT32  min(0) max(7) span(8) dataType(Int32)
                if(debug) {
                    logger->debug() << "|\033[38;5;94m009132\033[0m| " << tools::getTypeName(ros->denm.management.awareness_distance[0].value) << 
                                 " denm.management.awareness_distance[0].value: " << static_cast<int>(ros->denm.management.awareness_distance[0].value);
                }
                
                uint8_t* _tmp_10353 = (uint8_t*)buffer;
                buffer += 1;
                *_tmp_10353 = ros->denm.management.awareness_distance[0].value; 
                __aux64__ = ros->denm.management.awareness_distance[0].value; 
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->warning() << "Error: Value in 'denm.management.awareness_distance[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 7) {
                    logger->warning() << "Error: Value in 'denm.management.awareness_distance[0].value' (" << __aux64__ << ") exceeds max allowable (7); message dropped.";
                    return -1;
                }
            }
            
            if(ros->denm.management.traffic_direction.size() != 0) {
                // Field:  type(TrafficDirection) name(traffic_direction) extGroup(0)
                // Enumerated
                // INT32  min(0) max(3) span(4) dataType(Int32)
                if(debug) {
                    logger->debug() << "|\033[38;5;94m009133\033[0m| " << tools::getTypeName(ros->denm.management.traffic_direction[0].value) << 
                                 " denm.management.traffic_direction[0].value: " << static_cast<int>(ros->denm.management.traffic_direction[0].value);
                }
                
                uint8_t* _tmp_10354 = (uint8_t*)buffer;
                buffer += 1;
                *_tmp_10354 = ros->denm.management.traffic_direction[0].value; 
                __aux64__ = ros->denm.management.traffic_direction[0].value; 
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->warning() << "Error: Value in 'denm.management.traffic_direction[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 3) {
                    logger->warning() << "Error: Value in 'denm.management.traffic_direction[0].value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                    return -1;
                }
            }
            
            // Field:  type(DeltaTimeSecond) name(validity_duration) extGroup(0)
            // Integer
            
            // UINT32  min(0) max(86400) span(86401) dataType(UInt32)
            if(debug) {
                logger->debug() << "|\033[38;5;94m009134\033[0m| " << tools::getTypeName(ros->denm.management.validity_duration.value) << 
                             " denm.management.validity_duration.value: " << ros->denm.management.validity_duration.value;
            }
            
            uint32_t* _tmp_10355 = (uint32_t*) buffer; buffer += 4;
            *_tmp_10355 = ros->denm.management.validity_duration.value; 
            __aux64__ = ros->denm.management.validity_duration.value;
            
            // MIN validator
            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                logger->warning() << "Error: Value in 'denm.management.validity_duration.value' (" << __aux64__ << ") less than (0); message dropped.";
                return -1;
            }
            // MAX validator
            if (VALIDATORS_ENABLED && __aux64__ > 86400) {
                logger->warning() << "Error: Value in 'denm.management.validity_duration.value' (" << __aux64__ << ") exceeds max allowable (86400); message dropped.";
                return -1;
            }
            
            if(ros->denm.management.transmission_interval.size() != 0) {
                // Field:  type(DeltaTimeMilliSecondPositive) name(transmission_interval) extGroup(0)
                // Real
                
                // FLOAT  min(1) max(10000) span(10000) scaleDivisor(1000.0) dataType(Float)
                if(debug) {
                    logger->debug() << "|\033[38;5;94m009135\033[0m| " << tools::getTypeName(ros->denm.management.transmission_interval[0].value) << 
                                 " denm.management.transmission_interval[0].value: " << ros->denm.management.transmission_interval[0].value;
                }
                
                float _tmp_10357 = ros->denm.management.transmission_interval[0].value;
                _tmp_10357 *= 1000.0;
                __aux64__ = static_cast<uint64_t>(_tmp_10357);
                _tmp_10357 -= 1;
                uint16_t* _tmp_10356 = (uint16_t*) buffer; buffer += 2;
                *_tmp_10356 = static_cast<uint16_t>(_tmp_10357);
                
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                    logger->warning() << "Error: Value in 'denm.management.transmission_interval[0].value' (" << __aux64__ << ") less than (1); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 10000) {
                    logger->warning() << "Error: Value in 'denm.management.transmission_interval[0].value' (" << __aux64__ << ") exceeds max allowable (10000); message dropped.";
                    return -1;
                }
            }
            
            // Field:  type(StationType) name(station_type) extGroup(0)
            // Integer
            
            // UINT8  min(0) max(255) span(256) dataType(UInt8)
            if(debug) {
                logger->debug() << "|\033[38;5;94m009136\033[0m| " << tools::getTypeName(ros->denm.management.station_type.value) << 
                             " denm.management.station_type.value: " << static_cast<int>(ros->denm.management.station_type.value);
            }
            
            uint8_t* _tmp_10358 = (uint8_t*) buffer++;
            *_tmp_10358 = ros->denm.management.station_type.value; 
            __aux64__ = ros->denm.management.station_type.value;
            
            // MIN validator
            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                logger->warning() << "Error: Value in 'denm.management.station_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                return -1;
            }
            // MAX validator
            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                logger->warning() << "Error: Value in 'denm.management.station_type.value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                return -1;
            }
            
            if(*_ext_flag_4686) {
            }
        
        if(ros->denm.situation.size() != 0) {
            // Field:  type(SituationContainer) name(situation) extGroup(0)
                // SituationContainer  SEQUENCE
                    //  informationQuality InformationQuality     
                    //  eventType          CauseCodeV2            
                    //  linkedCause        CauseCodeV2          OPTIONAL  
                    //  eventZone          EventZone            OPTIONAL  
                    //  linkedDenms        ActionIdList         OPTIONAL  Extension group #1
                    //  eventEnd           Position1d           OPTIONAL  Extension group #1
                uint8_t* _ext_flag_4704 = (uint8_t*) buffer++;  // Write extension flag for SituationContainer
                *_ext_flag_4704 = (ros->denm.situation[0].linked_denms.size() != 0 || ros->denm.situation[0].event_end.size() != 0) ? 1 : 0; 
                
                // Optional fields bytemap
                char* _tmp_10360 = (char*) buffer++;
                *_tmp_10360 = (ros->denm.situation[0].linked_cause.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m009137\033[0m| Optional field linked_cause = " << *_tmp_10360;
                char* _tmp_10361 = (char*) buffer++;
                *_tmp_10361 = (ros->denm.situation[0].event_zone.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m009138\033[0m| Optional field event_zone = " << *_tmp_10361;
                
                // Field:  type(InformationQuality) name(information_quality) extGroup(0)
                // Integer
                
                // UINT8  min(0) max(7) span(8) dataType(UInt8)
                if(debug) {
                    logger->debug() << "|\033[38;5;94m009139\033[0m| " << tools::getTypeName(ros->denm.situation[0].information_quality.value) << 
                                 " denm.situation[0].information_quality.value: " << static_cast<int>(ros->denm.situation[0].information_quality.value);
                }
                
                uint8_t* _tmp_10362 = (uint8_t*) buffer++;
                *_tmp_10362 = ros->denm.situation[0].information_quality.value; 
                __aux64__ = ros->denm.situation[0].information_quality.value;
                
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->warning() << "Error: Value in 'denm.situation[0].information_quality.value' (" << __aux64__ << ") less than (0); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 7) {
                    logger->warning() << "Error: Value in 'denm.situation[0].information_quality.value' (" << __aux64__ << ") exceeds max allowable (7); message dropped.";
                    return -1;
                }
                
                // Field:  type(CauseCodeV2) name(event_type) extGroup(0)
                    // CauseCodeV2  SEQUENCE
                        //  ccAndScc   CauseCodeChoice     
                        //  ...
                    uint8_t* _ext_flag_4706 = (uint8_t*) buffer++;  // Write extension flag for CauseCodeV2
                    *_ext_flag_4706 = 0;  
                    
                    // Optional fields bytemap
                    
                    // Field:  type(CauseCodeChoice) name(cc_and_scc) extGroup(0)
                    // Choice
                       // #0  reserved0   SubCauseCodeType
                       // #1  trafficCondition1   TrafficConditionSubCauseCode
                       // #2  accident2   AccidentSubCauseCode
                       // #3  roadworks3   RoadworksSubCauseCode
                       // #4  reserved4   SubCauseCodeType
                       // #5  impassability5   ImpassabilitySubCauseCode
                       // #6  adverseWeatherCondition_Adhesion6   AdverseWeatherCondition_AdhesionSubCauseCode
                       // #7  aquaplaning7   SubCauseCodeType
                       // #8  reserved8   SubCauseCodeType
                       // #9  hazardousLocation_SurfaceCondition9   HazardousLocation_SurfaceConditionSubCauseCode
                       // #10  hazardousLocation_ObstacleOnTheRoad10   HazardousLocation_ObstacleOnTheRoadSubCauseCode
                       // #11  hazardousLocation_AnimalOnTheRoad11   HazardousLocation_AnimalOnTheRoadSubCauseCode
                       // #12  humanPresenceOnTheRoad12   HumanPresenceOnTheRoadSubCauseCode
                       // #13  reserved13   SubCauseCodeType
                       // #14  wrongWayDriving14   WrongWayDrivingSubCauseCode
                       // #15  rescueAndRecoveryWorkInProgress15   RescueAndRecoveryWorkInProgressSubCauseCode
                       // #16  reserved16   SubCauseCodeType
                       // #17  adverseWeatherCondition_ExtremeWeatherCondition17   AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode
                       // #18  adverseWeatherCondition_Visibility18   AdverseWeatherCondition_VisibilitySubCauseCode
                       // #19  adverseWeatherCondition_Precipitation19   AdverseWeatherCondition_PrecipitationSubCauseCode
                       // #20  violence20   SubCauseCodeType
                       // #21  reserved21   SubCauseCodeType
                       // #22  reserved22   SubCauseCodeType
                       // #23  reserved23   SubCauseCodeType
                       // #24  reserved24   SubCauseCodeType
                       // #25  reserved25   SubCauseCodeType
                       // #26  slowVehicle26   SlowVehicleSubCauseCode
                       // #27  dangerousEndOfQueue27   DangerousEndOfQueueSubCauseCode
                       // #28  publicTransportVehicleApproaching28   SubCauseCodeType
                       // #29  reserved29   SubCauseCodeType
                       // #30  reserved30   SubCauseCodeType
                       // #31  reserved31   SubCauseCodeType
                       // #32  reserved32   SubCauseCodeType
                       // #33  reserved33   SubCauseCodeType
                       // #34  reserved34   SubCauseCodeType
                       // #35  reserved35   SubCauseCodeType
                       // #36  reserved36   SubCauseCodeType
                       // #37  reserved37   SubCauseCodeType
                       // #38  reserved38   SubCauseCodeType
                       // #39  reserved39   SubCauseCodeType
                       // #40  reserved40   SubCauseCodeType
                       // #41  reserved41   SubCauseCodeType
                       // #42  reserved42   SubCauseCodeType
                       // #43  reserved43   SubCauseCodeType
                       // #44  reserved44   SubCauseCodeType
                       // #45  reserved45   SubCauseCodeType
                       // #46  reserved46   SubCauseCodeType
                       // #47  reserved47   SubCauseCodeType
                       // #48  reserved48   SubCauseCodeType
                       // #49  reserved49   SubCauseCodeType
                       // #50  reserved50   SubCauseCodeType
                       // #51  reserved51   SubCauseCodeType
                       // #52  reserved52   SubCauseCodeType
                       // #53  reserved53   SubCauseCodeType
                       // #54  reserved54   SubCauseCodeType
                       // #55  reserved55   SubCauseCodeType
                       // #56  reserved56   SubCauseCodeType
                       // #57  reserved57   SubCauseCodeType
                       // #58  reserved58   SubCauseCodeType
                       // #59  reserved59   SubCauseCodeType
                       // #60  reserved60   SubCauseCodeType
                       // #61  reserved61   SubCauseCodeType
                       // #62  reserved62   SubCauseCodeType
                       // #63  reserved63   SubCauseCodeType
                       // #64  reserved64   SubCauseCodeType
                       // #65  reserved65   SubCauseCodeType
                       // #66  reserved66   SubCauseCodeType
                       // #67  reserved67   SubCauseCodeType
                       // #68  reserved68   SubCauseCodeType
                       // #69  reserved69   SubCauseCodeType
                       // #70  reserved70   SubCauseCodeType
                       // #71  reserved71   SubCauseCodeType
                       // #72  reserved72   SubCauseCodeType
                       // #73  reserved73   SubCauseCodeType
                       // #74  reserved74   SubCauseCodeType
                       // #75  reserved75   SubCauseCodeType
                       // #76  reserved76   SubCauseCodeType
                       // #77  reserved77   SubCauseCodeType
                       // #78  reserved78   SubCauseCodeType
                       // #79  reserved79   SubCauseCodeType
                       // #80  reserved80   SubCauseCodeType
                       // #81  reserved81   SubCauseCodeType
                       // #82  reserved82   SubCauseCodeType
                       // #83  reserved83   SubCauseCodeType
                       // #84  reserved84   SubCauseCodeType
                       // #85  reserved85   SubCauseCodeType
                       // #86  reserved86   SubCauseCodeType
                       // #87  reserved87   SubCauseCodeType
                       // #88  reserved88   SubCauseCodeType
                       // #89  reserved89   SubCauseCodeType
                       // #90  reserved90   SubCauseCodeType
                       // #91  vehicleBreakdown91   VehicleBreakdownSubCauseCode
                       // #92  postCrash92   PostCrashSubCauseCode
                       // #93  humanProblem93   HumanProblemSubCauseCode
                       // #94  stationaryVehicle94   StationaryVehicleSubCauseCode
                       // #95  emergencyVehicleApproaching95   EmergencyVehicleApproachingSubCauseCode
                       // #96  hazardousLocation_DangerousCurve96   HazardousLocation_DangerousCurveSubCauseCode
                       // #97  collisionRisk97   CollisionRiskSubCauseCode
                       // #98  signalViolation98   SignalViolationSubCauseCode
                       // #99  dangerousSituation99   DangerousSituationSubCauseCode
                       // #100  railwayLevelCrossing100   RailwayLevelCrossingSubCauseCode
                       // #101  reserved101   SubCauseCodeType
                       // #102  reserved102   SubCauseCodeType
                       // #103  reserved103   SubCauseCodeType
                       // #104  reserved104   SubCauseCodeType
                       // #105  reserved105   SubCauseCodeType
                       // #106  reserved106   SubCauseCodeType
                       // #107  reserved107   SubCauseCodeType
                       // #108  reserved108   SubCauseCodeType
                       // #109  reserved109   SubCauseCodeType
                       // #110  reserved110   SubCauseCodeType
                       // #111  reserved111   SubCauseCodeType
                       // #112  reserved112   SubCauseCodeType
                       // #113  reserved113   SubCauseCodeType
                       // #114  reserved114   SubCauseCodeType
                       // #115  reserved115   SubCauseCodeType
                       // #116  reserved116   SubCauseCodeType
                       // #117  reserved117   SubCauseCodeType
                       // #118  reserved118   SubCauseCodeType
                       // #119  reserved119   SubCauseCodeType
                       // #120  reserved120   SubCauseCodeType
                       // #121  reserved121   SubCauseCodeType
                       // #122  reserved122   SubCauseCodeType
                       // #123  reserved123   SubCauseCodeType
                       // #124  reserved124   SubCauseCodeType
                       // #125  reserved125   SubCauseCodeType
                       // #126  reserved126   SubCauseCodeType
                       // #127  reserved127   SubCauseCodeType
                       // #128  reserved128   SubCauseCodeType
                    uint8_t* _choice_317 = (uint8_t*) buffer;
                    buffer++;
                    
                    if(ros->denm.situation[0].event_type.cc_and_scc.reserved0.size() != 0) {  // CHOICE 0  fieldType(CauseCodeChoice) 
                        *_choice_317 = 0;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009140\033[0m| Choice selection: 0";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009141\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved0[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved0[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved0[0].value);
                        }
                        
                        uint8_t* _tmp_10363 = (uint8_t*) buffer++;
                        *_tmp_10363 = ros->denm.situation[0].event_type.cc_and_scc.reserved0[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved0[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved0[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved0[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.traffic_condition1.size() != 0)  // CHOICE 1  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 1;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009142\033[0m| Choice selection: 1";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009143\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value);
                        }
                        
                        uint8_t* _tmp_10364 = (uint8_t*) buffer++;
                        *_tmp_10364 = ros->denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.accident2.size() != 0)  // CHOICE 2  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 2;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009144\033[0m| Choice selection: 2";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009145\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.accident2[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.accident2[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.accident2[0].value);
                        }
                        
                        uint8_t* _tmp_10365 = (uint8_t*) buffer++;
                        *_tmp_10365 = ros->denm.situation[0].event_type.cc_and_scc.accident2[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.accident2[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.accident2[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.accident2[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.roadworks3.size() != 0)  // CHOICE 3  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 3;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009146\033[0m| Choice selection: 3";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009147\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.roadworks3[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.roadworks3[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.roadworks3[0].value);
                        }
                        
                        uint8_t* _tmp_10366 = (uint8_t*) buffer++;
                        *_tmp_10366 = ros->denm.situation[0].event_type.cc_and_scc.roadworks3[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.roadworks3[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved4.size() != 0)  // CHOICE 4  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 4;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009148\033[0m| Choice selection: 4";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009149\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved4[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved4[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved4[0].value);
                        }
                        
                        uint8_t* _tmp_10367 = (uint8_t*) buffer++;
                        *_tmp_10367 = ros->denm.situation[0].event_type.cc_and_scc.reserved4[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved4[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved4[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved4[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.impassability5.size() != 0)  // CHOICE 5  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 5;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009150\033[0m| Choice selection: 5";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009151\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.impassability5[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.impassability5[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.impassability5[0].value);
                        }
                        
                        uint8_t* _tmp_10368 = (uint8_t*) buffer++;
                        *_tmp_10368 = ros->denm.situation[0].event_type.cc_and_scc.impassability5[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.impassability5[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.impassability5[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.impassability5[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6.size() != 0)  // CHOICE 6  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 6;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009152\033[0m| Choice selection: 6";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009153\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value);
                        }
                        
                        uint8_t* _tmp_10369 = (uint8_t*) buffer++;
                        *_tmp_10369 = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.aquaplaning7.size() != 0)  // CHOICE 7  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 7;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009154\033[0m| Choice selection: 7";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009155\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value);
                        }
                        
                        uint8_t* _tmp_10370 = (uint8_t*) buffer++;
                        *_tmp_10370 = ros->denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved8.size() != 0)  // CHOICE 8  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 8;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009156\033[0m| Choice selection: 8";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009157\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved8[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved8[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved8[0].value);
                        }
                        
                        uint8_t* _tmp_10371 = (uint8_t*) buffer++;
                        *_tmp_10371 = ros->denm.situation[0].event_type.cc_and_scc.reserved8[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved8[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved8[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved8[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9.size() != 0)  // CHOICE 9  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 9;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009158\033[0m| Choice selection: 9";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009159\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value);
                        }
                        
                        uint8_t* _tmp_10372 = (uint8_t*) buffer++;
                        *_tmp_10372 = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10.size() != 0)  // CHOICE 10  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 10;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009160\033[0m| Choice selection: 10";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009161\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value);
                        }
                        
                        uint8_t* _tmp_10373 = (uint8_t*) buffer++;
                        *_tmp_10373 = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11.size() != 0)  // CHOICE 11  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 11;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009162\033[0m| Choice selection: 11";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009163\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value);
                        }
                        
                        uint8_t* _tmp_10374 = (uint8_t*) buffer++;
                        *_tmp_10374 = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12.size() != 0)  // CHOICE 12  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 12;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009164\033[0m| Choice selection: 12";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009165\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value);
                        }
                        
                        uint8_t* _tmp_10375 = (uint8_t*) buffer++;
                        *_tmp_10375 = ros->denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved13.size() != 0)  // CHOICE 13  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 13;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009166\033[0m| Choice selection: 13";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009167\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved13[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved13[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved13[0].value);
                        }
                        
                        uint8_t* _tmp_10376 = (uint8_t*) buffer++;
                        *_tmp_10376 = ros->denm.situation[0].event_type.cc_and_scc.reserved13[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved13[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved13[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved13[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.wrong_way_driving14.size() != 0)  // CHOICE 14  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 14;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009168\033[0m| Choice selection: 14";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009169\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value);
                        }
                        
                        uint8_t* _tmp_10377 = (uint8_t*) buffer++;
                        *_tmp_10377 = ros->denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15.size() != 0)  // CHOICE 15  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 15;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009170\033[0m| Choice selection: 15";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009171\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value);
                        }
                        
                        uint8_t* _tmp_10378 = (uint8_t*) buffer++;
                        *_tmp_10378 = ros->denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved16.size() != 0)  // CHOICE 16  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 16;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009172\033[0m| Choice selection: 16";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009173\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved16[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved16[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved16[0].value);
                        }
                        
                        uint8_t* _tmp_10379 = (uint8_t*) buffer++;
                        *_tmp_10379 = ros->denm.situation[0].event_type.cc_and_scc.reserved16[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved16[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved16[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved16[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17.size() != 0)  // CHOICE 17  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 17;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009174\033[0m| Choice selection: 17";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009175\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value);
                        }
                        
                        uint8_t* _tmp_10380 = (uint8_t*) buffer++;
                        *_tmp_10380 = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18.size() != 0)  // CHOICE 18  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 18;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009176\033[0m| Choice selection: 18";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009177\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value);
                        }
                        
                        uint8_t* _tmp_10381 = (uint8_t*) buffer++;
                        *_tmp_10381 = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19.size() != 0)  // CHOICE 19  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 19;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009178\033[0m| Choice selection: 19";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009179\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value);
                        }
                        
                        uint8_t* _tmp_10382 = (uint8_t*) buffer++;
                        *_tmp_10382 = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.violence20.size() != 0)  // CHOICE 20  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 20;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009180\033[0m| Choice selection: 20";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009181\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.violence20[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.violence20[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.violence20[0].value);
                        }
                        
                        uint8_t* _tmp_10383 = (uint8_t*) buffer++;
                        *_tmp_10383 = ros->denm.situation[0].event_type.cc_and_scc.violence20[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.violence20[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.violence20[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.violence20[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved21.size() != 0)  // CHOICE 21  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 21;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009182\033[0m| Choice selection: 21";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009183\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved21[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved21[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved21[0].value);
                        }
                        
                        uint8_t* _tmp_10384 = (uint8_t*) buffer++;
                        *_tmp_10384 = ros->denm.situation[0].event_type.cc_and_scc.reserved21[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved21[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved21[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved21[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved22.size() != 0)  // CHOICE 22  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 22;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009184\033[0m| Choice selection: 22";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009185\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved22[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved22[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved22[0].value);
                        }
                        
                        uint8_t* _tmp_10385 = (uint8_t*) buffer++;
                        *_tmp_10385 = ros->denm.situation[0].event_type.cc_and_scc.reserved22[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved22[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved22[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved22[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved23.size() != 0)  // CHOICE 23  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 23;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009186\033[0m| Choice selection: 23";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009187\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved23[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved23[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved23[0].value);
                        }
                        
                        uint8_t* _tmp_10386 = (uint8_t*) buffer++;
                        *_tmp_10386 = ros->denm.situation[0].event_type.cc_and_scc.reserved23[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved23[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved23[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved23[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved24.size() != 0)  // CHOICE 24  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 24;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009188\033[0m| Choice selection: 24";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009189\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved24[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved24[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved24[0].value);
                        }
                        
                        uint8_t* _tmp_10387 = (uint8_t*) buffer++;
                        *_tmp_10387 = ros->denm.situation[0].event_type.cc_and_scc.reserved24[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved24[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved24[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved24[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved25.size() != 0)  // CHOICE 25  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 25;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009190\033[0m| Choice selection: 25";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009191\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved25[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved25[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved25[0].value);
                        }
                        
                        uint8_t* _tmp_10388 = (uint8_t*) buffer++;
                        *_tmp_10388 = ros->denm.situation[0].event_type.cc_and_scc.reserved25[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved25[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved25[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved25[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.slow_vehicle26.size() != 0)  // CHOICE 26  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 26;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009192\033[0m| Choice selection: 26";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009193\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value);
                        }
                        
                        uint8_t* _tmp_10389 = (uint8_t*) buffer++;
                        *_tmp_10389 = ros->denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27.size() != 0)  // CHOICE 27  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 27;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009194\033[0m| Choice selection: 27";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009195\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value);
                        }
                        
                        uint8_t* _tmp_10390 = (uint8_t*) buffer++;
                        *_tmp_10390 = ros->denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28.size() != 0)  // CHOICE 28  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 28;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009196\033[0m| Choice selection: 28";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009197\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value);
                        }
                        
                        uint8_t* _tmp_10391 = (uint8_t*) buffer++;
                        *_tmp_10391 = ros->denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved29.size() != 0)  // CHOICE 29  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 29;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009198\033[0m| Choice selection: 29";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009199\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved29[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved29[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved29[0].value);
                        }
                        
                        uint8_t* _tmp_10392 = (uint8_t*) buffer++;
                        *_tmp_10392 = ros->denm.situation[0].event_type.cc_and_scc.reserved29[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved29[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved29[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved29[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved30.size() != 0)  // CHOICE 30  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 30;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009200\033[0m| Choice selection: 30";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009201\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved30[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved30[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved30[0].value);
                        }
                        
                        uint8_t* _tmp_10393 = (uint8_t*) buffer++;
                        *_tmp_10393 = ros->denm.situation[0].event_type.cc_and_scc.reserved30[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved30[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved30[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved30[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved31.size() != 0)  // CHOICE 31  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 31;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009202\033[0m| Choice selection: 31";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009203\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved31[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved31[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved31[0].value);
                        }
                        
                        uint8_t* _tmp_10394 = (uint8_t*) buffer++;
                        *_tmp_10394 = ros->denm.situation[0].event_type.cc_and_scc.reserved31[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved31[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved31[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved31[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved32.size() != 0)  // CHOICE 32  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 32;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009204\033[0m| Choice selection: 32";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009205\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved32[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved32[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved32[0].value);
                        }
                        
                        uint8_t* _tmp_10395 = (uint8_t*) buffer++;
                        *_tmp_10395 = ros->denm.situation[0].event_type.cc_and_scc.reserved32[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved32[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved32[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved32[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved33.size() != 0)  // CHOICE 33  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 33;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009206\033[0m| Choice selection: 33";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009207\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved33[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved33[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved33[0].value);
                        }
                        
                        uint8_t* _tmp_10396 = (uint8_t*) buffer++;
                        *_tmp_10396 = ros->denm.situation[0].event_type.cc_and_scc.reserved33[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved33[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved33[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved33[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved34.size() != 0)  // CHOICE 34  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 34;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009208\033[0m| Choice selection: 34";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009209\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved34[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved34[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved34[0].value);
                        }
                        
                        uint8_t* _tmp_10397 = (uint8_t*) buffer++;
                        *_tmp_10397 = ros->denm.situation[0].event_type.cc_and_scc.reserved34[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved34[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved34[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved34[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved35.size() != 0)  // CHOICE 35  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 35;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009210\033[0m| Choice selection: 35";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009211\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved35[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved35[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved35[0].value);
                        }
                        
                        uint8_t* _tmp_10398 = (uint8_t*) buffer++;
                        *_tmp_10398 = ros->denm.situation[0].event_type.cc_and_scc.reserved35[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved35[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved35[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved35[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved36.size() != 0)  // CHOICE 36  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 36;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009212\033[0m| Choice selection: 36";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009213\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved36[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved36[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved36[0].value);
                        }
                        
                        uint8_t* _tmp_10399 = (uint8_t*) buffer++;
                        *_tmp_10399 = ros->denm.situation[0].event_type.cc_and_scc.reserved36[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved36[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved36[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved36[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved37.size() != 0)  // CHOICE 37  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 37;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009214\033[0m| Choice selection: 37";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009215\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved37[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved37[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved37[0].value);
                        }
                        
                        uint8_t* _tmp_10400 = (uint8_t*) buffer++;
                        *_tmp_10400 = ros->denm.situation[0].event_type.cc_and_scc.reserved37[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved37[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved37[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved37[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved38.size() != 0)  // CHOICE 38  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 38;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009216\033[0m| Choice selection: 38";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009217\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved38[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved38[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved38[0].value);
                        }
                        
                        uint8_t* _tmp_10401 = (uint8_t*) buffer++;
                        *_tmp_10401 = ros->denm.situation[0].event_type.cc_and_scc.reserved38[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved38[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved38[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved38[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved39.size() != 0)  // CHOICE 39  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 39;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009218\033[0m| Choice selection: 39";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009219\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved39[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved39[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved39[0].value);
                        }
                        
                        uint8_t* _tmp_10402 = (uint8_t*) buffer++;
                        *_tmp_10402 = ros->denm.situation[0].event_type.cc_and_scc.reserved39[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved39[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved39[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved39[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved40.size() != 0)  // CHOICE 40  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 40;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009220\033[0m| Choice selection: 40";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009221\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved40[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved40[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved40[0].value);
                        }
                        
                        uint8_t* _tmp_10403 = (uint8_t*) buffer++;
                        *_tmp_10403 = ros->denm.situation[0].event_type.cc_and_scc.reserved40[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved40[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved40[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved40[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved41.size() != 0)  // CHOICE 41  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 41;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009222\033[0m| Choice selection: 41";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009223\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved41[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved41[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved41[0].value);
                        }
                        
                        uint8_t* _tmp_10404 = (uint8_t*) buffer++;
                        *_tmp_10404 = ros->denm.situation[0].event_type.cc_and_scc.reserved41[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved41[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved41[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved41[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved42.size() != 0)  // CHOICE 42  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 42;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009224\033[0m| Choice selection: 42";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009225\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved42[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved42[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved42[0].value);
                        }
                        
                        uint8_t* _tmp_10405 = (uint8_t*) buffer++;
                        *_tmp_10405 = ros->denm.situation[0].event_type.cc_and_scc.reserved42[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved42[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved42[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved42[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved43.size() != 0)  // CHOICE 43  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 43;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009226\033[0m| Choice selection: 43";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009227\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved43[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved43[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved43[0].value);
                        }
                        
                        uint8_t* _tmp_10406 = (uint8_t*) buffer++;
                        *_tmp_10406 = ros->denm.situation[0].event_type.cc_and_scc.reserved43[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved43[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved43[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved43[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved44.size() != 0)  // CHOICE 44  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 44;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009228\033[0m| Choice selection: 44";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009229\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved44[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved44[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved44[0].value);
                        }
                        
                        uint8_t* _tmp_10407 = (uint8_t*) buffer++;
                        *_tmp_10407 = ros->denm.situation[0].event_type.cc_and_scc.reserved44[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved44[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved44[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved44[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved45.size() != 0)  // CHOICE 45  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 45;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009230\033[0m| Choice selection: 45";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009231\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved45[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved45[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved45[0].value);
                        }
                        
                        uint8_t* _tmp_10408 = (uint8_t*) buffer++;
                        *_tmp_10408 = ros->denm.situation[0].event_type.cc_and_scc.reserved45[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved45[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved45[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved45[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved46.size() != 0)  // CHOICE 46  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 46;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009232\033[0m| Choice selection: 46";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009233\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved46[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved46[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved46[0].value);
                        }
                        
                        uint8_t* _tmp_10409 = (uint8_t*) buffer++;
                        *_tmp_10409 = ros->denm.situation[0].event_type.cc_and_scc.reserved46[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved46[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved46[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved46[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved47.size() != 0)  // CHOICE 47  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 47;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009234\033[0m| Choice selection: 47";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009235\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved47[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved47[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved47[0].value);
                        }
                        
                        uint8_t* _tmp_10410 = (uint8_t*) buffer++;
                        *_tmp_10410 = ros->denm.situation[0].event_type.cc_and_scc.reserved47[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved47[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved47[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved47[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved48.size() != 0)  // CHOICE 48  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 48;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009236\033[0m| Choice selection: 48";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009237\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved48[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved48[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved48[0].value);
                        }
                        
                        uint8_t* _tmp_10411 = (uint8_t*) buffer++;
                        *_tmp_10411 = ros->denm.situation[0].event_type.cc_and_scc.reserved48[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved48[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved48[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved48[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved49.size() != 0)  // CHOICE 49  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 49;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009238\033[0m| Choice selection: 49";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009239\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved49[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved49[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved49[0].value);
                        }
                        
                        uint8_t* _tmp_10412 = (uint8_t*) buffer++;
                        *_tmp_10412 = ros->denm.situation[0].event_type.cc_and_scc.reserved49[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved49[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved49[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved49[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved50.size() != 0)  // CHOICE 50  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 50;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009240\033[0m| Choice selection: 50";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009241\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved50[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved50[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved50[0].value);
                        }
                        
                        uint8_t* _tmp_10413 = (uint8_t*) buffer++;
                        *_tmp_10413 = ros->denm.situation[0].event_type.cc_and_scc.reserved50[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved50[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved50[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved50[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved51.size() != 0)  // CHOICE 51  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 51;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009242\033[0m| Choice selection: 51";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009243\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved51[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved51[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved51[0].value);
                        }
                        
                        uint8_t* _tmp_10414 = (uint8_t*) buffer++;
                        *_tmp_10414 = ros->denm.situation[0].event_type.cc_and_scc.reserved51[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved51[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved51[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved51[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved52.size() != 0)  // CHOICE 52  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 52;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009244\033[0m| Choice selection: 52";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009245\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved52[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved52[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved52[0].value);
                        }
                        
                        uint8_t* _tmp_10415 = (uint8_t*) buffer++;
                        *_tmp_10415 = ros->denm.situation[0].event_type.cc_and_scc.reserved52[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved52[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved52[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved52[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved53.size() != 0)  // CHOICE 53  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 53;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009246\033[0m| Choice selection: 53";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009247\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved53[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved53[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved53[0].value);
                        }
                        
                        uint8_t* _tmp_10416 = (uint8_t*) buffer++;
                        *_tmp_10416 = ros->denm.situation[0].event_type.cc_and_scc.reserved53[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved53[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved53[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved53[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved54.size() != 0)  // CHOICE 54  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 54;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009248\033[0m| Choice selection: 54";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009249\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved54[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved54[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved54[0].value);
                        }
                        
                        uint8_t* _tmp_10417 = (uint8_t*) buffer++;
                        *_tmp_10417 = ros->denm.situation[0].event_type.cc_and_scc.reserved54[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved54[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved54[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved54[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved55.size() != 0)  // CHOICE 55  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 55;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009250\033[0m| Choice selection: 55";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009251\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved55[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved55[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved55[0].value);
                        }
                        
                        uint8_t* _tmp_10418 = (uint8_t*) buffer++;
                        *_tmp_10418 = ros->denm.situation[0].event_type.cc_and_scc.reserved55[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved55[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved55[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved55[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved56.size() != 0)  // CHOICE 56  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 56;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009252\033[0m| Choice selection: 56";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009253\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved56[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved56[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved56[0].value);
                        }
                        
                        uint8_t* _tmp_10419 = (uint8_t*) buffer++;
                        *_tmp_10419 = ros->denm.situation[0].event_type.cc_and_scc.reserved56[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved56[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved56[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved56[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved57.size() != 0)  // CHOICE 57  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 57;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009254\033[0m| Choice selection: 57";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009255\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved57[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved57[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved57[0].value);
                        }
                        
                        uint8_t* _tmp_10420 = (uint8_t*) buffer++;
                        *_tmp_10420 = ros->denm.situation[0].event_type.cc_and_scc.reserved57[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved57[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved57[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved57[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved58.size() != 0)  // CHOICE 58  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 58;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009256\033[0m| Choice selection: 58";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009257\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved58[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved58[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved58[0].value);
                        }
                        
                        uint8_t* _tmp_10421 = (uint8_t*) buffer++;
                        *_tmp_10421 = ros->denm.situation[0].event_type.cc_and_scc.reserved58[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved58[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved58[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved58[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved59.size() != 0)  // CHOICE 59  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 59;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009258\033[0m| Choice selection: 59";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009259\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved59[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved59[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved59[0].value);
                        }
                        
                        uint8_t* _tmp_10422 = (uint8_t*) buffer++;
                        *_tmp_10422 = ros->denm.situation[0].event_type.cc_and_scc.reserved59[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved59[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved59[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved59[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved60.size() != 0)  // CHOICE 60  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 60;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009260\033[0m| Choice selection: 60";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009261\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved60[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved60[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved60[0].value);
                        }
                        
                        uint8_t* _tmp_10423 = (uint8_t*) buffer++;
                        *_tmp_10423 = ros->denm.situation[0].event_type.cc_and_scc.reserved60[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved60[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved60[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved60[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved61.size() != 0)  // CHOICE 61  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 61;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009262\033[0m| Choice selection: 61";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009263\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved61[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved61[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved61[0].value);
                        }
                        
                        uint8_t* _tmp_10424 = (uint8_t*) buffer++;
                        *_tmp_10424 = ros->denm.situation[0].event_type.cc_and_scc.reserved61[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved61[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved61[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved61[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved62.size() != 0)  // CHOICE 62  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 62;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009264\033[0m| Choice selection: 62";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009265\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved62[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved62[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved62[0].value);
                        }
                        
                        uint8_t* _tmp_10425 = (uint8_t*) buffer++;
                        *_tmp_10425 = ros->denm.situation[0].event_type.cc_and_scc.reserved62[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved62[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved62[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved62[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved63.size() != 0)  // CHOICE 63  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 63;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009266\033[0m| Choice selection: 63";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009267\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved63[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved63[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved63[0].value);
                        }
                        
                        uint8_t* _tmp_10426 = (uint8_t*) buffer++;
                        *_tmp_10426 = ros->denm.situation[0].event_type.cc_and_scc.reserved63[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved63[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved63[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved63[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved64.size() != 0)  // CHOICE 64  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 64;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009268\033[0m| Choice selection: 64";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009269\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved64[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved64[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved64[0].value);
                        }
                        
                        uint8_t* _tmp_10427 = (uint8_t*) buffer++;
                        *_tmp_10427 = ros->denm.situation[0].event_type.cc_and_scc.reserved64[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved64[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved64[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved64[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved65.size() != 0)  // CHOICE 65  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 65;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009270\033[0m| Choice selection: 65";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009271\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved65[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved65[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved65[0].value);
                        }
                        
                        uint8_t* _tmp_10428 = (uint8_t*) buffer++;
                        *_tmp_10428 = ros->denm.situation[0].event_type.cc_and_scc.reserved65[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved65[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved65[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved65[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved66.size() != 0)  // CHOICE 66  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 66;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009272\033[0m| Choice selection: 66";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009273\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved66[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved66[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved66[0].value);
                        }
                        
                        uint8_t* _tmp_10429 = (uint8_t*) buffer++;
                        *_tmp_10429 = ros->denm.situation[0].event_type.cc_and_scc.reserved66[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved66[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved66[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved66[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved67.size() != 0)  // CHOICE 67  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 67;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009274\033[0m| Choice selection: 67";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009275\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved67[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved67[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved67[0].value);
                        }
                        
                        uint8_t* _tmp_10430 = (uint8_t*) buffer++;
                        *_tmp_10430 = ros->denm.situation[0].event_type.cc_and_scc.reserved67[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved67[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved67[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved67[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved68.size() != 0)  // CHOICE 68  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 68;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009276\033[0m| Choice selection: 68";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009277\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved68[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved68[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved68[0].value);
                        }
                        
                        uint8_t* _tmp_10431 = (uint8_t*) buffer++;
                        *_tmp_10431 = ros->denm.situation[0].event_type.cc_and_scc.reserved68[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved68[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved68[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved68[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved69.size() != 0)  // CHOICE 69  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 69;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009278\033[0m| Choice selection: 69";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009279\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved69[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved69[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved69[0].value);
                        }
                        
                        uint8_t* _tmp_10432 = (uint8_t*) buffer++;
                        *_tmp_10432 = ros->denm.situation[0].event_type.cc_and_scc.reserved69[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved69[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved69[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved69[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved70.size() != 0)  // CHOICE 70  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 70;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009280\033[0m| Choice selection: 70";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009281\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved70[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved70[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved70[0].value);
                        }
                        
                        uint8_t* _tmp_10433 = (uint8_t*) buffer++;
                        *_tmp_10433 = ros->denm.situation[0].event_type.cc_and_scc.reserved70[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved70[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved70[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved70[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved71.size() != 0)  // CHOICE 71  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 71;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009282\033[0m| Choice selection: 71";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009283\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved71[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved71[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved71[0].value);
                        }
                        
                        uint8_t* _tmp_10434 = (uint8_t*) buffer++;
                        *_tmp_10434 = ros->denm.situation[0].event_type.cc_and_scc.reserved71[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved71[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved71[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved71[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved72.size() != 0)  // CHOICE 72  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 72;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009284\033[0m| Choice selection: 72";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009285\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved72[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved72[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved72[0].value);
                        }
                        
                        uint8_t* _tmp_10435 = (uint8_t*) buffer++;
                        *_tmp_10435 = ros->denm.situation[0].event_type.cc_and_scc.reserved72[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved72[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved72[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved72[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved73.size() != 0)  // CHOICE 73  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 73;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009286\033[0m| Choice selection: 73";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009287\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved73[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved73[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved73[0].value);
                        }
                        
                        uint8_t* _tmp_10436 = (uint8_t*) buffer++;
                        *_tmp_10436 = ros->denm.situation[0].event_type.cc_and_scc.reserved73[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved73[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved73[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved73[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved74.size() != 0)  // CHOICE 74  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 74;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009288\033[0m| Choice selection: 74";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009289\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved74[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved74[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved74[0].value);
                        }
                        
                        uint8_t* _tmp_10437 = (uint8_t*) buffer++;
                        *_tmp_10437 = ros->denm.situation[0].event_type.cc_and_scc.reserved74[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved74[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved74[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved74[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved75.size() != 0)  // CHOICE 75  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 75;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009290\033[0m| Choice selection: 75";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009291\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved75[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved75[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved75[0].value);
                        }
                        
                        uint8_t* _tmp_10438 = (uint8_t*) buffer++;
                        *_tmp_10438 = ros->denm.situation[0].event_type.cc_and_scc.reserved75[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved75[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved75[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved75[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved76.size() != 0)  // CHOICE 76  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 76;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009292\033[0m| Choice selection: 76";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009293\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved76[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved76[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved76[0].value);
                        }
                        
                        uint8_t* _tmp_10439 = (uint8_t*) buffer++;
                        *_tmp_10439 = ros->denm.situation[0].event_type.cc_and_scc.reserved76[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved76[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved76[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved76[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved77.size() != 0)  // CHOICE 77  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 77;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009294\033[0m| Choice selection: 77";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009295\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved77[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved77[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved77[0].value);
                        }
                        
                        uint8_t* _tmp_10440 = (uint8_t*) buffer++;
                        *_tmp_10440 = ros->denm.situation[0].event_type.cc_and_scc.reserved77[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved77[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved77[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved77[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved78.size() != 0)  // CHOICE 78  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 78;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009296\033[0m| Choice selection: 78";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009297\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved78[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved78[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved78[0].value);
                        }
                        
                        uint8_t* _tmp_10441 = (uint8_t*) buffer++;
                        *_tmp_10441 = ros->denm.situation[0].event_type.cc_and_scc.reserved78[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved78[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved78[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved78[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved79.size() != 0)  // CHOICE 79  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 79;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009298\033[0m| Choice selection: 79";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009299\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved79[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved79[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved79[0].value);
                        }
                        
                        uint8_t* _tmp_10442 = (uint8_t*) buffer++;
                        *_tmp_10442 = ros->denm.situation[0].event_type.cc_and_scc.reserved79[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved79[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved79[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved79[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved80.size() != 0)  // CHOICE 80  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 80;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009300\033[0m| Choice selection: 80";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009301\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved80[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved80[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved80[0].value);
                        }
                        
                        uint8_t* _tmp_10443 = (uint8_t*) buffer++;
                        *_tmp_10443 = ros->denm.situation[0].event_type.cc_and_scc.reserved80[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved80[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved80[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved80[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved81.size() != 0)  // CHOICE 81  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 81;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009302\033[0m| Choice selection: 81";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009303\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved81[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved81[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved81[0].value);
                        }
                        
                        uint8_t* _tmp_10444 = (uint8_t*) buffer++;
                        *_tmp_10444 = ros->denm.situation[0].event_type.cc_and_scc.reserved81[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved81[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved81[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved81[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved82.size() != 0)  // CHOICE 82  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 82;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009304\033[0m| Choice selection: 82";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009305\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved82[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved82[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved82[0].value);
                        }
                        
                        uint8_t* _tmp_10445 = (uint8_t*) buffer++;
                        *_tmp_10445 = ros->denm.situation[0].event_type.cc_and_scc.reserved82[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved82[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved82[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved82[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved83.size() != 0)  // CHOICE 83  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 83;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009306\033[0m| Choice selection: 83";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009307\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved83[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved83[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved83[0].value);
                        }
                        
                        uint8_t* _tmp_10446 = (uint8_t*) buffer++;
                        *_tmp_10446 = ros->denm.situation[0].event_type.cc_and_scc.reserved83[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved83[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved83[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved83[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved84.size() != 0)  // CHOICE 84  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 84;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009308\033[0m| Choice selection: 84";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009309\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved84[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved84[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved84[0].value);
                        }
                        
                        uint8_t* _tmp_10447 = (uint8_t*) buffer++;
                        *_tmp_10447 = ros->denm.situation[0].event_type.cc_and_scc.reserved84[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved84[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved84[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved84[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved85.size() != 0)  // CHOICE 85  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 85;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009310\033[0m| Choice selection: 85";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009311\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved85[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved85[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved85[0].value);
                        }
                        
                        uint8_t* _tmp_10448 = (uint8_t*) buffer++;
                        *_tmp_10448 = ros->denm.situation[0].event_type.cc_and_scc.reserved85[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved85[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved85[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved85[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved86.size() != 0)  // CHOICE 86  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 86;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009312\033[0m| Choice selection: 86";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009313\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved86[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved86[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved86[0].value);
                        }
                        
                        uint8_t* _tmp_10449 = (uint8_t*) buffer++;
                        *_tmp_10449 = ros->denm.situation[0].event_type.cc_and_scc.reserved86[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved86[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved86[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved86[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved87.size() != 0)  // CHOICE 87  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 87;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009314\033[0m| Choice selection: 87";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009315\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved87[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved87[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved87[0].value);
                        }
                        
                        uint8_t* _tmp_10450 = (uint8_t*) buffer++;
                        *_tmp_10450 = ros->denm.situation[0].event_type.cc_and_scc.reserved87[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved87[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved87[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved87[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved88.size() != 0)  // CHOICE 88  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 88;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009316\033[0m| Choice selection: 88";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009317\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved88[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved88[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved88[0].value);
                        }
                        
                        uint8_t* _tmp_10451 = (uint8_t*) buffer++;
                        *_tmp_10451 = ros->denm.situation[0].event_type.cc_and_scc.reserved88[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved88[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved88[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved88[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved89.size() != 0)  // CHOICE 89  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 89;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009318\033[0m| Choice selection: 89";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009319\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved89[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved89[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved89[0].value);
                        }
                        
                        uint8_t* _tmp_10452 = (uint8_t*) buffer++;
                        *_tmp_10452 = ros->denm.situation[0].event_type.cc_and_scc.reserved89[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved89[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved89[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved89[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved90.size() != 0)  // CHOICE 90  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 90;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009320\033[0m| Choice selection: 90";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009321\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved90[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved90[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved90[0].value);
                        }
                        
                        uint8_t* _tmp_10453 = (uint8_t*) buffer++;
                        *_tmp_10453 = ros->denm.situation[0].event_type.cc_and_scc.reserved90[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved90[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved90[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved90[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91.size() != 0)  // CHOICE 91  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 91;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009322\033[0m| Choice selection: 91";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009323\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value);
                        }
                        
                        uint8_t* _tmp_10454 = (uint8_t*) buffer++;
                        *_tmp_10454 = ros->denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.post_crash92.size() != 0)  // CHOICE 92  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 92;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009324\033[0m| Choice selection: 92";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009325\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.post_crash92[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.post_crash92[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.post_crash92[0].value);
                        }
                        
                        uint8_t* _tmp_10455 = (uint8_t*) buffer++;
                        *_tmp_10455 = ros->denm.situation[0].event_type.cc_and_scc.post_crash92[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.post_crash92[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.human_problem93.size() != 0)  // CHOICE 93  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 93;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009326\033[0m| Choice selection: 93";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009327\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.human_problem93[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.human_problem93[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.human_problem93[0].value);
                        }
                        
                        uint8_t* _tmp_10456 = (uint8_t*) buffer++;
                        *_tmp_10456 = ros->denm.situation[0].event_type.cc_and_scc.human_problem93[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.human_problem93[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.stationary_vehicle94.size() != 0)  // CHOICE 94  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 94;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009328\033[0m| Choice selection: 94";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009329\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value);
                        }
                        
                        uint8_t* _tmp_10457 = (uint8_t*) buffer++;
                        *_tmp_10457 = ros->denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95.size() != 0)  // CHOICE 95  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 95;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009330\033[0m| Choice selection: 95";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009331\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value);
                        }
                        
                        uint8_t* _tmp_10458 = (uint8_t*) buffer++;
                        *_tmp_10458 = ros->denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96.size() != 0)  // CHOICE 96  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 96;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009332\033[0m| Choice selection: 96";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009333\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value);
                        }
                        
                        uint8_t* _tmp_10459 = (uint8_t*) buffer++;
                        *_tmp_10459 = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.collision_risk97.size() != 0)  // CHOICE 97  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 97;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009334\033[0m| Choice selection: 97";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009335\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value);
                        }
                        
                        uint8_t* _tmp_10460 = (uint8_t*) buffer++;
                        *_tmp_10460 = ros->denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.signal_violation98.size() != 0)  // CHOICE 98  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 98;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009336\033[0m| Choice selection: 98";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009337\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value);
                        }
                        
                        uint8_t* _tmp_10461 = (uint8_t*) buffer++;
                        *_tmp_10461 = ros->denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.dangerous_situation99.size() != 0)  // CHOICE 99  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 99;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009338\033[0m| Choice selection: 99";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009339\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value);
                        }
                        
                        uint8_t* _tmp_10462 = (uint8_t*) buffer++;
                        *_tmp_10462 = ros->denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.railway_level_crossing100.size() != 0)  // CHOICE 100  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 100;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009340\033[0m| Choice selection: 100";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009341\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value);
                        }
                        
                        uint8_t* _tmp_10463 = (uint8_t*) buffer++;
                        *_tmp_10463 = ros->denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved101.size() != 0)  // CHOICE 101  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 101;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009342\033[0m| Choice selection: 101";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009343\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved101[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved101[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved101[0].value);
                        }
                        
                        uint8_t* _tmp_10464 = (uint8_t*) buffer++;
                        *_tmp_10464 = ros->denm.situation[0].event_type.cc_and_scc.reserved101[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved101[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved101[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved101[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved102.size() != 0)  // CHOICE 102  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 102;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009344\033[0m| Choice selection: 102";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009345\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved102[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved102[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved102[0].value);
                        }
                        
                        uint8_t* _tmp_10465 = (uint8_t*) buffer++;
                        *_tmp_10465 = ros->denm.situation[0].event_type.cc_and_scc.reserved102[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved102[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved102[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved102[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved103.size() != 0)  // CHOICE 103  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 103;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009346\033[0m| Choice selection: 103";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009347\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved103[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved103[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved103[0].value);
                        }
                        
                        uint8_t* _tmp_10466 = (uint8_t*) buffer++;
                        *_tmp_10466 = ros->denm.situation[0].event_type.cc_and_scc.reserved103[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved103[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved103[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved103[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved104.size() != 0)  // CHOICE 104  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 104;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009348\033[0m| Choice selection: 104";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009349\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved104[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved104[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved104[0].value);
                        }
                        
                        uint8_t* _tmp_10467 = (uint8_t*) buffer++;
                        *_tmp_10467 = ros->denm.situation[0].event_type.cc_and_scc.reserved104[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved104[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved104[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved104[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved105.size() != 0)  // CHOICE 105  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 105;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009350\033[0m| Choice selection: 105";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009351\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved105[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved105[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved105[0].value);
                        }
                        
                        uint8_t* _tmp_10468 = (uint8_t*) buffer++;
                        *_tmp_10468 = ros->denm.situation[0].event_type.cc_and_scc.reserved105[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved105[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved105[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved105[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved106.size() != 0)  // CHOICE 106  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 106;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009352\033[0m| Choice selection: 106";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009353\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved106[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved106[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved106[0].value);
                        }
                        
                        uint8_t* _tmp_10469 = (uint8_t*) buffer++;
                        *_tmp_10469 = ros->denm.situation[0].event_type.cc_and_scc.reserved106[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved106[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved106[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved106[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved107.size() != 0)  // CHOICE 107  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 107;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009354\033[0m| Choice selection: 107";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009355\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved107[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved107[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved107[0].value);
                        }
                        
                        uint8_t* _tmp_10470 = (uint8_t*) buffer++;
                        *_tmp_10470 = ros->denm.situation[0].event_type.cc_and_scc.reserved107[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved107[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved107[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved107[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved108.size() != 0)  // CHOICE 108  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 108;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009356\033[0m| Choice selection: 108";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009357\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved108[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved108[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved108[0].value);
                        }
                        
                        uint8_t* _tmp_10471 = (uint8_t*) buffer++;
                        *_tmp_10471 = ros->denm.situation[0].event_type.cc_and_scc.reserved108[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved108[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved108[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved108[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved109.size() != 0)  // CHOICE 109  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 109;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009358\033[0m| Choice selection: 109";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009359\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved109[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved109[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved109[0].value);
                        }
                        
                        uint8_t* _tmp_10472 = (uint8_t*) buffer++;
                        *_tmp_10472 = ros->denm.situation[0].event_type.cc_and_scc.reserved109[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved109[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved109[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved109[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved110.size() != 0)  // CHOICE 110  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 110;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009360\033[0m| Choice selection: 110";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009361\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved110[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved110[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved110[0].value);
                        }
                        
                        uint8_t* _tmp_10473 = (uint8_t*) buffer++;
                        *_tmp_10473 = ros->denm.situation[0].event_type.cc_and_scc.reserved110[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved110[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved110[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved110[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved111.size() != 0)  // CHOICE 111  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 111;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009362\033[0m| Choice selection: 111";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009363\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved111[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved111[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved111[0].value);
                        }
                        
                        uint8_t* _tmp_10474 = (uint8_t*) buffer++;
                        *_tmp_10474 = ros->denm.situation[0].event_type.cc_and_scc.reserved111[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved111[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved111[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved111[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved112.size() != 0)  // CHOICE 112  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 112;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009364\033[0m| Choice selection: 112";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009365\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved112[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved112[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved112[0].value);
                        }
                        
                        uint8_t* _tmp_10475 = (uint8_t*) buffer++;
                        *_tmp_10475 = ros->denm.situation[0].event_type.cc_and_scc.reserved112[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved112[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved112[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved112[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved113.size() != 0)  // CHOICE 113  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 113;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009366\033[0m| Choice selection: 113";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009367\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved113[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved113[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved113[0].value);
                        }
                        
                        uint8_t* _tmp_10476 = (uint8_t*) buffer++;
                        *_tmp_10476 = ros->denm.situation[0].event_type.cc_and_scc.reserved113[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved113[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved113[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved113[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved114.size() != 0)  // CHOICE 114  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 114;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009368\033[0m| Choice selection: 114";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009369\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved114[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved114[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved114[0].value);
                        }
                        
                        uint8_t* _tmp_10477 = (uint8_t*) buffer++;
                        *_tmp_10477 = ros->denm.situation[0].event_type.cc_and_scc.reserved114[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved114[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved114[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved114[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved115.size() != 0)  // CHOICE 115  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 115;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009370\033[0m| Choice selection: 115";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009371\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved115[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved115[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved115[0].value);
                        }
                        
                        uint8_t* _tmp_10478 = (uint8_t*) buffer++;
                        *_tmp_10478 = ros->denm.situation[0].event_type.cc_and_scc.reserved115[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved115[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved115[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved115[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved116.size() != 0)  // CHOICE 116  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 116;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009372\033[0m| Choice selection: 116";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009373\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved116[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved116[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved116[0].value);
                        }
                        
                        uint8_t* _tmp_10479 = (uint8_t*) buffer++;
                        *_tmp_10479 = ros->denm.situation[0].event_type.cc_and_scc.reserved116[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved116[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved116[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved116[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved117.size() != 0)  // CHOICE 117  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 117;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009374\033[0m| Choice selection: 117";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009375\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved117[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved117[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved117[0].value);
                        }
                        
                        uint8_t* _tmp_10480 = (uint8_t*) buffer++;
                        *_tmp_10480 = ros->denm.situation[0].event_type.cc_and_scc.reserved117[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved117[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved117[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved117[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved118.size() != 0)  // CHOICE 118  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 118;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009376\033[0m| Choice selection: 118";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009377\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved118[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved118[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved118[0].value);
                        }
                        
                        uint8_t* _tmp_10481 = (uint8_t*) buffer++;
                        *_tmp_10481 = ros->denm.situation[0].event_type.cc_and_scc.reserved118[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved118[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved118[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved118[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved119.size() != 0)  // CHOICE 119  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 119;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009378\033[0m| Choice selection: 119";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009379\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved119[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved119[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved119[0].value);
                        }
                        
                        uint8_t* _tmp_10482 = (uint8_t*) buffer++;
                        *_tmp_10482 = ros->denm.situation[0].event_type.cc_and_scc.reserved119[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved119[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved119[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved119[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved120.size() != 0)  // CHOICE 120  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 120;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009380\033[0m| Choice selection: 120";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009381\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved120[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved120[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved120[0].value);
                        }
                        
                        uint8_t* _tmp_10483 = (uint8_t*) buffer++;
                        *_tmp_10483 = ros->denm.situation[0].event_type.cc_and_scc.reserved120[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved120[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved120[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved120[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved121.size() != 0)  // CHOICE 121  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 121;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009382\033[0m| Choice selection: 121";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009383\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved121[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved121[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved121[0].value);
                        }
                        
                        uint8_t* _tmp_10484 = (uint8_t*) buffer++;
                        *_tmp_10484 = ros->denm.situation[0].event_type.cc_and_scc.reserved121[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved121[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved121[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved121[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved122.size() != 0)  // CHOICE 122  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 122;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009384\033[0m| Choice selection: 122";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009385\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved122[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved122[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved122[0].value);
                        }
                        
                        uint8_t* _tmp_10485 = (uint8_t*) buffer++;
                        *_tmp_10485 = ros->denm.situation[0].event_type.cc_and_scc.reserved122[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved122[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved122[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved122[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved123.size() != 0)  // CHOICE 123  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 123;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009386\033[0m| Choice selection: 123";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009387\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved123[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved123[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved123[0].value);
                        }
                        
                        uint8_t* _tmp_10486 = (uint8_t*) buffer++;
                        *_tmp_10486 = ros->denm.situation[0].event_type.cc_and_scc.reserved123[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved123[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved123[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved123[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved124.size() != 0)  // CHOICE 124  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 124;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009388\033[0m| Choice selection: 124";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009389\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved124[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved124[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved124[0].value);
                        }
                        
                        uint8_t* _tmp_10487 = (uint8_t*) buffer++;
                        *_tmp_10487 = ros->denm.situation[0].event_type.cc_and_scc.reserved124[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved124[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved124[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved124[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved125.size() != 0)  // CHOICE 125  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 125;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009390\033[0m| Choice selection: 125";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009391\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved125[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved125[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved125[0].value);
                        }
                        
                        uint8_t* _tmp_10488 = (uint8_t*) buffer++;
                        *_tmp_10488 = ros->denm.situation[0].event_type.cc_and_scc.reserved125[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved125[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved125[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved125[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved126.size() != 0)  // CHOICE 126  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 126;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009392\033[0m| Choice selection: 126";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009393\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved126[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved126[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved126[0].value);
                        }
                        
                        uint8_t* _tmp_10489 = (uint8_t*) buffer++;
                        *_tmp_10489 = ros->denm.situation[0].event_type.cc_and_scc.reserved126[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved126[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved126[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved126[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved127.size() != 0)  // CHOICE 127  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 127;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009394\033[0m| Choice selection: 127";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009395\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved127[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved127[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved127[0].value);
                        }
                        
                        uint8_t* _tmp_10490 = (uint8_t*) buffer++;
                        *_tmp_10490 = ros->denm.situation[0].event_type.cc_and_scc.reserved127[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved127[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved127[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved127[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved128.size() != 0)  // CHOICE 128  fieldType(CauseCodeChoice) 
                    {
                        *_choice_317 = 128;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009396\033[0m| Choice selection: 128";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009397\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved128[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved128[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved128[0].value);
                        }
                        
                        uint8_t* _tmp_10491 = (uint8_t*) buffer++;
                        *_tmp_10491 = ros->denm.situation[0].event_type.cc_and_scc.reserved128[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved128[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved128[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved128[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else
                    {
                        logger->warning() << "Wrong option (" << static_cast<int>(*_choice_317) << ") selected in CHOICE CauseCodeChoice in 'denm.situation[0].event_type.cc_and_scc'; message dropped.";
                        return -1;
                    }
                    
                    if(*_ext_flag_4706) {
                    }
                
                if(ros->denm.situation[0].linked_cause.size() != 0) {
                    // Field:  type(CauseCodeV2) name(linked_cause) extGroup(0)
                        // CauseCodeV2  SEQUENCE
                            //  ccAndScc   CauseCodeChoice     
                            //  ...
                        uint8_t* _ext_flag_4837 = (uint8_t*) buffer++;  // Write extension flag for CauseCodeV2
                        *_ext_flag_4837 = 0;  
                        
                        // Optional fields bytemap
                        
                        // Field:  type(CauseCodeChoice) name(cc_and_scc) extGroup(0)
                        // Choice
                           // #0  reserved0   SubCauseCodeType
                           // #1  trafficCondition1   TrafficConditionSubCauseCode
                           // #2  accident2   AccidentSubCauseCode
                           // #3  roadworks3   RoadworksSubCauseCode
                           // #4  reserved4   SubCauseCodeType
                           // #5  impassability5   ImpassabilitySubCauseCode
                           // #6  adverseWeatherCondition_Adhesion6   AdverseWeatherCondition_AdhesionSubCauseCode
                           // #7  aquaplaning7   SubCauseCodeType
                           // #8  reserved8   SubCauseCodeType
                           // #9  hazardousLocation_SurfaceCondition9   HazardousLocation_SurfaceConditionSubCauseCode
                           // #10  hazardousLocation_ObstacleOnTheRoad10   HazardousLocation_ObstacleOnTheRoadSubCauseCode
                           // #11  hazardousLocation_AnimalOnTheRoad11   HazardousLocation_AnimalOnTheRoadSubCauseCode
                           // #12  humanPresenceOnTheRoad12   HumanPresenceOnTheRoadSubCauseCode
                           // #13  reserved13   SubCauseCodeType
                           // #14  wrongWayDriving14   WrongWayDrivingSubCauseCode
                           // #15  rescueAndRecoveryWorkInProgress15   RescueAndRecoveryWorkInProgressSubCauseCode
                           // #16  reserved16   SubCauseCodeType
                           // #17  adverseWeatherCondition_ExtremeWeatherCondition17   AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode
                           // #18  adverseWeatherCondition_Visibility18   AdverseWeatherCondition_VisibilitySubCauseCode
                           // #19  adverseWeatherCondition_Precipitation19   AdverseWeatherCondition_PrecipitationSubCauseCode
                           // #20  violence20   SubCauseCodeType
                           // #21  reserved21   SubCauseCodeType
                           // #22  reserved22   SubCauseCodeType
                           // #23  reserved23   SubCauseCodeType
                           // #24  reserved24   SubCauseCodeType
                           // #25  reserved25   SubCauseCodeType
                           // #26  slowVehicle26   SlowVehicleSubCauseCode
                           // #27  dangerousEndOfQueue27   DangerousEndOfQueueSubCauseCode
                           // #28  publicTransportVehicleApproaching28   SubCauseCodeType
                           // #29  reserved29   SubCauseCodeType
                           // #30  reserved30   SubCauseCodeType
                           // #31  reserved31   SubCauseCodeType
                           // #32  reserved32   SubCauseCodeType
                           // #33  reserved33   SubCauseCodeType
                           // #34  reserved34   SubCauseCodeType
                           // #35  reserved35   SubCauseCodeType
                           // #36  reserved36   SubCauseCodeType
                           // #37  reserved37   SubCauseCodeType
                           // #38  reserved38   SubCauseCodeType
                           // #39  reserved39   SubCauseCodeType
                           // #40  reserved40   SubCauseCodeType
                           // #41  reserved41   SubCauseCodeType
                           // #42  reserved42   SubCauseCodeType
                           // #43  reserved43   SubCauseCodeType
                           // #44  reserved44   SubCauseCodeType
                           // #45  reserved45   SubCauseCodeType
                           // #46  reserved46   SubCauseCodeType
                           // #47  reserved47   SubCauseCodeType
                           // #48  reserved48   SubCauseCodeType
                           // #49  reserved49   SubCauseCodeType
                           // #50  reserved50   SubCauseCodeType
                           // #51  reserved51   SubCauseCodeType
                           // #52  reserved52   SubCauseCodeType
                           // #53  reserved53   SubCauseCodeType
                           // #54  reserved54   SubCauseCodeType
                           // #55  reserved55   SubCauseCodeType
                           // #56  reserved56   SubCauseCodeType
                           // #57  reserved57   SubCauseCodeType
                           // #58  reserved58   SubCauseCodeType
                           // #59  reserved59   SubCauseCodeType
                           // #60  reserved60   SubCauseCodeType
                           // #61  reserved61   SubCauseCodeType
                           // #62  reserved62   SubCauseCodeType
                           // #63  reserved63   SubCauseCodeType
                           // #64  reserved64   SubCauseCodeType
                           // #65  reserved65   SubCauseCodeType
                           // #66  reserved66   SubCauseCodeType
                           // #67  reserved67   SubCauseCodeType
                           // #68  reserved68   SubCauseCodeType
                           // #69  reserved69   SubCauseCodeType
                           // #70  reserved70   SubCauseCodeType
                           // #71  reserved71   SubCauseCodeType
                           // #72  reserved72   SubCauseCodeType
                           // #73  reserved73   SubCauseCodeType
                           // #74  reserved74   SubCauseCodeType
                           // #75  reserved75   SubCauseCodeType
                           // #76  reserved76   SubCauseCodeType
                           // #77  reserved77   SubCauseCodeType
                           // #78  reserved78   SubCauseCodeType
                           // #79  reserved79   SubCauseCodeType
                           // #80  reserved80   SubCauseCodeType
                           // #81  reserved81   SubCauseCodeType
                           // #82  reserved82   SubCauseCodeType
                           // #83  reserved83   SubCauseCodeType
                           // #84  reserved84   SubCauseCodeType
                           // #85  reserved85   SubCauseCodeType
                           // #86  reserved86   SubCauseCodeType
                           // #87  reserved87   SubCauseCodeType
                           // #88  reserved88   SubCauseCodeType
                           // #89  reserved89   SubCauseCodeType
                           // #90  reserved90   SubCauseCodeType
                           // #91  vehicleBreakdown91   VehicleBreakdownSubCauseCode
                           // #92  postCrash92   PostCrashSubCauseCode
                           // #93  humanProblem93   HumanProblemSubCauseCode
                           // #94  stationaryVehicle94   StationaryVehicleSubCauseCode
                           // #95  emergencyVehicleApproaching95   EmergencyVehicleApproachingSubCauseCode
                           // #96  hazardousLocation_DangerousCurve96   HazardousLocation_DangerousCurveSubCauseCode
                           // #97  collisionRisk97   CollisionRiskSubCauseCode
                           // #98  signalViolation98   SignalViolationSubCauseCode
                           // #99  dangerousSituation99   DangerousSituationSubCauseCode
                           // #100  railwayLevelCrossing100   RailwayLevelCrossingSubCauseCode
                           // #101  reserved101   SubCauseCodeType
                           // #102  reserved102   SubCauseCodeType
                           // #103  reserved103   SubCauseCodeType
                           // #104  reserved104   SubCauseCodeType
                           // #105  reserved105   SubCauseCodeType
                           // #106  reserved106   SubCauseCodeType
                           // #107  reserved107   SubCauseCodeType
                           // #108  reserved108   SubCauseCodeType
                           // #109  reserved109   SubCauseCodeType
                           // #110  reserved110   SubCauseCodeType
                           // #111  reserved111   SubCauseCodeType
                           // #112  reserved112   SubCauseCodeType
                           // #113  reserved113   SubCauseCodeType
                           // #114  reserved114   SubCauseCodeType
                           // #115  reserved115   SubCauseCodeType
                           // #116  reserved116   SubCauseCodeType
                           // #117  reserved117   SubCauseCodeType
                           // #118  reserved118   SubCauseCodeType
                           // #119  reserved119   SubCauseCodeType
                           // #120  reserved120   SubCauseCodeType
                           // #121  reserved121   SubCauseCodeType
                           // #122  reserved122   SubCauseCodeType
                           // #123  reserved123   SubCauseCodeType
                           // #124  reserved124   SubCauseCodeType
                           // #125  reserved125   SubCauseCodeType
                           // #126  reserved126   SubCauseCodeType
                           // #127  reserved127   SubCauseCodeType
                           // #128  reserved128   SubCauseCodeType
                        uint8_t* _choice_318 = (uint8_t*) buffer;
                        buffer++;
                        
                        if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved0.size() != 0) {  // CHOICE 0  fieldType(CauseCodeChoice) 
                            *_choice_318 = 0;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009398\033[0m| Choice selection: 0";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009399\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value);
                            }
                            
                            uint8_t* _tmp_10493 = (uint8_t*) buffer++;
                            *_tmp_10493 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1.size() != 0)  // CHOICE 1  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 1;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009400\033[0m| Choice selection: 1";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009401\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value);
                            }
                            
                            uint8_t* _tmp_10494 = (uint8_t*) buffer++;
                            *_tmp_10494 = ros->denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.accident2.size() != 0)  // CHOICE 2  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 2;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009402\033[0m| Choice selection: 2";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009403\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value);
                            }
                            
                            uint8_t* _tmp_10495 = (uint8_t*) buffer++;
                            *_tmp_10495 = ros->denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.roadworks3.size() != 0)  // CHOICE 3  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 3;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009404\033[0m| Choice selection: 3";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009405\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value);
                            }
                            
                            uint8_t* _tmp_10496 = (uint8_t*) buffer++;
                            *_tmp_10496 = ros->denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved4.size() != 0)  // CHOICE 4  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 4;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009406\033[0m| Choice selection: 4";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009407\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value);
                            }
                            
                            uint8_t* _tmp_10497 = (uint8_t*) buffer++;
                            *_tmp_10497 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.impassability5.size() != 0)  // CHOICE 5  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 5;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009408\033[0m| Choice selection: 5";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009409\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value);
                            }
                            
                            uint8_t* _tmp_10498 = (uint8_t*) buffer++;
                            *_tmp_10498 = ros->denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6.size() != 0)  // CHOICE 6  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 6;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009410\033[0m| Choice selection: 6";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009411\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value);
                            }
                            
                            uint8_t* _tmp_10499 = (uint8_t*) buffer++;
                            *_tmp_10499 = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7.size() != 0)  // CHOICE 7  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 7;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009412\033[0m| Choice selection: 7";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009413\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value);
                            }
                            
                            uint8_t* _tmp_10500 = (uint8_t*) buffer++;
                            *_tmp_10500 = ros->denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved8.size() != 0)  // CHOICE 8  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 8;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009414\033[0m| Choice selection: 8";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009415\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value);
                            }
                            
                            uint8_t* _tmp_10501 = (uint8_t*) buffer++;
                            *_tmp_10501 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9.size() != 0)  // CHOICE 9  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 9;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009416\033[0m| Choice selection: 9";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009417\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value);
                            }
                            
                            uint8_t* _tmp_10502 = (uint8_t*) buffer++;
                            *_tmp_10502 = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10.size() != 0)  // CHOICE 10  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 10;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009418\033[0m| Choice selection: 10";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009419\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value);
                            }
                            
                            uint8_t* _tmp_10503 = (uint8_t*) buffer++;
                            *_tmp_10503 = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11.size() != 0)  // CHOICE 11  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 11;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009420\033[0m| Choice selection: 11";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009421\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value);
                            }
                            
                            uint8_t* _tmp_10504 = (uint8_t*) buffer++;
                            *_tmp_10504 = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12.size() != 0)  // CHOICE 12  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 12;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009422\033[0m| Choice selection: 12";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009423\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value);
                            }
                            
                            uint8_t* _tmp_10505 = (uint8_t*) buffer++;
                            *_tmp_10505 = ros->denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved13.size() != 0)  // CHOICE 13  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 13;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009424\033[0m| Choice selection: 13";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009425\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value);
                            }
                            
                            uint8_t* _tmp_10506 = (uint8_t*) buffer++;
                            *_tmp_10506 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14.size() != 0)  // CHOICE 14  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 14;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009426\033[0m| Choice selection: 14";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009427\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value);
                            }
                            
                            uint8_t* _tmp_10507 = (uint8_t*) buffer++;
                            *_tmp_10507 = ros->denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15.size() != 0)  // CHOICE 15  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 15;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009428\033[0m| Choice selection: 15";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009429\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value);
                            }
                            
                            uint8_t* _tmp_10508 = (uint8_t*) buffer++;
                            *_tmp_10508 = ros->denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved16.size() != 0)  // CHOICE 16  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 16;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009430\033[0m| Choice selection: 16";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009431\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value);
                            }
                            
                            uint8_t* _tmp_10509 = (uint8_t*) buffer++;
                            *_tmp_10509 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17.size() != 0)  // CHOICE 17  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 17;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009432\033[0m| Choice selection: 17";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009433\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value);
                            }
                            
                            uint8_t* _tmp_10510 = (uint8_t*) buffer++;
                            *_tmp_10510 = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18.size() != 0)  // CHOICE 18  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 18;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009434\033[0m| Choice selection: 18";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009435\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value);
                            }
                            
                            uint8_t* _tmp_10511 = (uint8_t*) buffer++;
                            *_tmp_10511 = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19.size() != 0)  // CHOICE 19  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 19;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009436\033[0m| Choice selection: 19";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009437\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value);
                            }
                            
                            uint8_t* _tmp_10512 = (uint8_t*) buffer++;
                            *_tmp_10512 = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.violence20.size() != 0)  // CHOICE 20  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 20;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009438\033[0m| Choice selection: 20";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009439\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value);
                            }
                            
                            uint8_t* _tmp_10513 = (uint8_t*) buffer++;
                            *_tmp_10513 = ros->denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved21.size() != 0)  // CHOICE 21  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 21;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009440\033[0m| Choice selection: 21";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009441\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value);
                            }
                            
                            uint8_t* _tmp_10514 = (uint8_t*) buffer++;
                            *_tmp_10514 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved22.size() != 0)  // CHOICE 22  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 22;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009442\033[0m| Choice selection: 22";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009443\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value);
                            }
                            
                            uint8_t* _tmp_10515 = (uint8_t*) buffer++;
                            *_tmp_10515 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved23.size() != 0)  // CHOICE 23  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 23;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009444\033[0m| Choice selection: 23";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009445\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value);
                            }
                            
                            uint8_t* _tmp_10516 = (uint8_t*) buffer++;
                            *_tmp_10516 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved24.size() != 0)  // CHOICE 24  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 24;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009446\033[0m| Choice selection: 24";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009447\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value);
                            }
                            
                            uint8_t* _tmp_10517 = (uint8_t*) buffer++;
                            *_tmp_10517 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved25.size() != 0)  // CHOICE 25  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 25;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009448\033[0m| Choice selection: 25";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009449\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value);
                            }
                            
                            uint8_t* _tmp_10518 = (uint8_t*) buffer++;
                            *_tmp_10518 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26.size() != 0)  // CHOICE 26  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 26;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009450\033[0m| Choice selection: 26";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009451\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value);
                            }
                            
                            uint8_t* _tmp_10519 = (uint8_t*) buffer++;
                            *_tmp_10519 = ros->denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27.size() != 0)  // CHOICE 27  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 27;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009452\033[0m| Choice selection: 27";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009453\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value);
                            }
                            
                            uint8_t* _tmp_10520 = (uint8_t*) buffer++;
                            *_tmp_10520 = ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28.size() != 0)  // CHOICE 28  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 28;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009454\033[0m| Choice selection: 28";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009455\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value);
                            }
                            
                            uint8_t* _tmp_10521 = (uint8_t*) buffer++;
                            *_tmp_10521 = ros->denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved29.size() != 0)  // CHOICE 29  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 29;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009456\033[0m| Choice selection: 29";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009457\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value);
                            }
                            
                            uint8_t* _tmp_10522 = (uint8_t*) buffer++;
                            *_tmp_10522 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved30.size() != 0)  // CHOICE 30  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 30;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009458\033[0m| Choice selection: 30";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009459\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value);
                            }
                            
                            uint8_t* _tmp_10523 = (uint8_t*) buffer++;
                            *_tmp_10523 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved31.size() != 0)  // CHOICE 31  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 31;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009460\033[0m| Choice selection: 31";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009461\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value);
                            }
                            
                            uint8_t* _tmp_10524 = (uint8_t*) buffer++;
                            *_tmp_10524 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved32.size() != 0)  // CHOICE 32  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 32;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009462\033[0m| Choice selection: 32";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009463\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value);
                            }
                            
                            uint8_t* _tmp_10525 = (uint8_t*) buffer++;
                            *_tmp_10525 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved33.size() != 0)  // CHOICE 33  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 33;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009464\033[0m| Choice selection: 33";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009465\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value);
                            }
                            
                            uint8_t* _tmp_10526 = (uint8_t*) buffer++;
                            *_tmp_10526 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved34.size() != 0)  // CHOICE 34  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 34;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009466\033[0m| Choice selection: 34";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009467\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value);
                            }
                            
                            uint8_t* _tmp_10527 = (uint8_t*) buffer++;
                            *_tmp_10527 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved35.size() != 0)  // CHOICE 35  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 35;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009468\033[0m| Choice selection: 35";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009469\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value);
                            }
                            
                            uint8_t* _tmp_10528 = (uint8_t*) buffer++;
                            *_tmp_10528 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved36.size() != 0)  // CHOICE 36  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 36;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009470\033[0m| Choice selection: 36";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009471\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value);
                            }
                            
                            uint8_t* _tmp_10529 = (uint8_t*) buffer++;
                            *_tmp_10529 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved37.size() != 0)  // CHOICE 37  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 37;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009472\033[0m| Choice selection: 37";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009473\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value);
                            }
                            
                            uint8_t* _tmp_10530 = (uint8_t*) buffer++;
                            *_tmp_10530 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved38.size() != 0)  // CHOICE 38  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 38;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009474\033[0m| Choice selection: 38";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009475\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value);
                            }
                            
                            uint8_t* _tmp_10531 = (uint8_t*) buffer++;
                            *_tmp_10531 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved39.size() != 0)  // CHOICE 39  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 39;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009476\033[0m| Choice selection: 39";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009477\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value);
                            }
                            
                            uint8_t* _tmp_10532 = (uint8_t*) buffer++;
                            *_tmp_10532 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved40.size() != 0)  // CHOICE 40  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 40;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009478\033[0m| Choice selection: 40";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009479\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value);
                            }
                            
                            uint8_t* _tmp_10533 = (uint8_t*) buffer++;
                            *_tmp_10533 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved41.size() != 0)  // CHOICE 41  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 41;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009480\033[0m| Choice selection: 41";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009481\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value);
                            }
                            
                            uint8_t* _tmp_10534 = (uint8_t*) buffer++;
                            *_tmp_10534 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved42.size() != 0)  // CHOICE 42  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 42;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009482\033[0m| Choice selection: 42";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009483\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value);
                            }
                            
                            uint8_t* _tmp_10535 = (uint8_t*) buffer++;
                            *_tmp_10535 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved43.size() != 0)  // CHOICE 43  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 43;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009484\033[0m| Choice selection: 43";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009485\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value);
                            }
                            
                            uint8_t* _tmp_10536 = (uint8_t*) buffer++;
                            *_tmp_10536 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved44.size() != 0)  // CHOICE 44  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 44;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009486\033[0m| Choice selection: 44";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009487\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value);
                            }
                            
                            uint8_t* _tmp_10537 = (uint8_t*) buffer++;
                            *_tmp_10537 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved45.size() != 0)  // CHOICE 45  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 45;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009488\033[0m| Choice selection: 45";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009489\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value);
                            }
                            
                            uint8_t* _tmp_10538 = (uint8_t*) buffer++;
                            *_tmp_10538 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved46.size() != 0)  // CHOICE 46  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 46;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009490\033[0m| Choice selection: 46";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009491\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value);
                            }
                            
                            uint8_t* _tmp_10539 = (uint8_t*) buffer++;
                            *_tmp_10539 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved47.size() != 0)  // CHOICE 47  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 47;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009492\033[0m| Choice selection: 47";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009493\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value);
                            }
                            
                            uint8_t* _tmp_10540 = (uint8_t*) buffer++;
                            *_tmp_10540 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved48.size() != 0)  // CHOICE 48  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 48;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009494\033[0m| Choice selection: 48";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009495\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value);
                            }
                            
                            uint8_t* _tmp_10541 = (uint8_t*) buffer++;
                            *_tmp_10541 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved49.size() != 0)  // CHOICE 49  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 49;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009496\033[0m| Choice selection: 49";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009497\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value);
                            }
                            
                            uint8_t* _tmp_10542 = (uint8_t*) buffer++;
                            *_tmp_10542 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved50.size() != 0)  // CHOICE 50  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 50;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009498\033[0m| Choice selection: 50";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009499\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value);
                            }
                            
                            uint8_t* _tmp_10543 = (uint8_t*) buffer++;
                            *_tmp_10543 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved51.size() != 0)  // CHOICE 51  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 51;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009500\033[0m| Choice selection: 51";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009501\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value);
                            }
                            
                            uint8_t* _tmp_10544 = (uint8_t*) buffer++;
                            *_tmp_10544 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved52.size() != 0)  // CHOICE 52  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 52;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009502\033[0m| Choice selection: 52";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009503\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value);
                            }
                            
                            uint8_t* _tmp_10545 = (uint8_t*) buffer++;
                            *_tmp_10545 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved53.size() != 0)  // CHOICE 53  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 53;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009504\033[0m| Choice selection: 53";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009505\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value);
                            }
                            
                            uint8_t* _tmp_10546 = (uint8_t*) buffer++;
                            *_tmp_10546 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved54.size() != 0)  // CHOICE 54  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 54;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009506\033[0m| Choice selection: 54";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009507\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value);
                            }
                            
                            uint8_t* _tmp_10547 = (uint8_t*) buffer++;
                            *_tmp_10547 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved55.size() != 0)  // CHOICE 55  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 55;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009508\033[0m| Choice selection: 55";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009509\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value);
                            }
                            
                            uint8_t* _tmp_10548 = (uint8_t*) buffer++;
                            *_tmp_10548 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved56.size() != 0)  // CHOICE 56  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 56;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009510\033[0m| Choice selection: 56";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009511\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value);
                            }
                            
                            uint8_t* _tmp_10549 = (uint8_t*) buffer++;
                            *_tmp_10549 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved57.size() != 0)  // CHOICE 57  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 57;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009512\033[0m| Choice selection: 57";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009513\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value);
                            }
                            
                            uint8_t* _tmp_10550 = (uint8_t*) buffer++;
                            *_tmp_10550 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved58.size() != 0)  // CHOICE 58  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 58;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009514\033[0m| Choice selection: 58";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009515\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value);
                            }
                            
                            uint8_t* _tmp_10551 = (uint8_t*) buffer++;
                            *_tmp_10551 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved59.size() != 0)  // CHOICE 59  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 59;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009516\033[0m| Choice selection: 59";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009517\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value);
                            }
                            
                            uint8_t* _tmp_10552 = (uint8_t*) buffer++;
                            *_tmp_10552 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved60.size() != 0)  // CHOICE 60  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 60;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009518\033[0m| Choice selection: 60";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009519\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value);
                            }
                            
                            uint8_t* _tmp_10553 = (uint8_t*) buffer++;
                            *_tmp_10553 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved61.size() != 0)  // CHOICE 61  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 61;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009520\033[0m| Choice selection: 61";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009521\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value);
                            }
                            
                            uint8_t* _tmp_10554 = (uint8_t*) buffer++;
                            *_tmp_10554 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved62.size() != 0)  // CHOICE 62  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 62;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009522\033[0m| Choice selection: 62";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009523\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value);
                            }
                            
                            uint8_t* _tmp_10555 = (uint8_t*) buffer++;
                            *_tmp_10555 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved63.size() != 0)  // CHOICE 63  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 63;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009524\033[0m| Choice selection: 63";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009525\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value);
                            }
                            
                            uint8_t* _tmp_10556 = (uint8_t*) buffer++;
                            *_tmp_10556 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved64.size() != 0)  // CHOICE 64  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 64;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009526\033[0m| Choice selection: 64";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009527\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value);
                            }
                            
                            uint8_t* _tmp_10557 = (uint8_t*) buffer++;
                            *_tmp_10557 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved65.size() != 0)  // CHOICE 65  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 65;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009528\033[0m| Choice selection: 65";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009529\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value);
                            }
                            
                            uint8_t* _tmp_10558 = (uint8_t*) buffer++;
                            *_tmp_10558 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved66.size() != 0)  // CHOICE 66  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 66;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009530\033[0m| Choice selection: 66";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009531\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value);
                            }
                            
                            uint8_t* _tmp_10559 = (uint8_t*) buffer++;
                            *_tmp_10559 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved67.size() != 0)  // CHOICE 67  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 67;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009532\033[0m| Choice selection: 67";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009533\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value);
                            }
                            
                            uint8_t* _tmp_10560 = (uint8_t*) buffer++;
                            *_tmp_10560 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved68.size() != 0)  // CHOICE 68  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 68;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009534\033[0m| Choice selection: 68";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009535\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value);
                            }
                            
                            uint8_t* _tmp_10561 = (uint8_t*) buffer++;
                            *_tmp_10561 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved69.size() != 0)  // CHOICE 69  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 69;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009536\033[0m| Choice selection: 69";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009537\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value);
                            }
                            
                            uint8_t* _tmp_10562 = (uint8_t*) buffer++;
                            *_tmp_10562 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved70.size() != 0)  // CHOICE 70  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 70;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009538\033[0m| Choice selection: 70";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009539\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value);
                            }
                            
                            uint8_t* _tmp_10563 = (uint8_t*) buffer++;
                            *_tmp_10563 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved71.size() != 0)  // CHOICE 71  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 71;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009540\033[0m| Choice selection: 71";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009541\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value);
                            }
                            
                            uint8_t* _tmp_10564 = (uint8_t*) buffer++;
                            *_tmp_10564 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved72.size() != 0)  // CHOICE 72  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 72;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009542\033[0m| Choice selection: 72";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009543\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value);
                            }
                            
                            uint8_t* _tmp_10565 = (uint8_t*) buffer++;
                            *_tmp_10565 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved73.size() != 0)  // CHOICE 73  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 73;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009544\033[0m| Choice selection: 73";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009545\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value);
                            }
                            
                            uint8_t* _tmp_10566 = (uint8_t*) buffer++;
                            *_tmp_10566 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved74.size() != 0)  // CHOICE 74  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 74;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009546\033[0m| Choice selection: 74";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009547\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value);
                            }
                            
                            uint8_t* _tmp_10567 = (uint8_t*) buffer++;
                            *_tmp_10567 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved75.size() != 0)  // CHOICE 75  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 75;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009548\033[0m| Choice selection: 75";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009549\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value);
                            }
                            
                            uint8_t* _tmp_10568 = (uint8_t*) buffer++;
                            *_tmp_10568 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved76.size() != 0)  // CHOICE 76  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 76;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009550\033[0m| Choice selection: 76";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009551\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value);
                            }
                            
                            uint8_t* _tmp_10569 = (uint8_t*) buffer++;
                            *_tmp_10569 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved77.size() != 0)  // CHOICE 77  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 77;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009552\033[0m| Choice selection: 77";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009553\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value);
                            }
                            
                            uint8_t* _tmp_10570 = (uint8_t*) buffer++;
                            *_tmp_10570 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved78.size() != 0)  // CHOICE 78  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 78;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009554\033[0m| Choice selection: 78";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009555\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value);
                            }
                            
                            uint8_t* _tmp_10571 = (uint8_t*) buffer++;
                            *_tmp_10571 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved79.size() != 0)  // CHOICE 79  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 79;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009556\033[0m| Choice selection: 79";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009557\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value);
                            }
                            
                            uint8_t* _tmp_10572 = (uint8_t*) buffer++;
                            *_tmp_10572 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved80.size() != 0)  // CHOICE 80  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 80;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009558\033[0m| Choice selection: 80";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009559\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value);
                            }
                            
                            uint8_t* _tmp_10573 = (uint8_t*) buffer++;
                            *_tmp_10573 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved81.size() != 0)  // CHOICE 81  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 81;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009560\033[0m| Choice selection: 81";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009561\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value);
                            }
                            
                            uint8_t* _tmp_10574 = (uint8_t*) buffer++;
                            *_tmp_10574 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved82.size() != 0)  // CHOICE 82  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 82;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009562\033[0m| Choice selection: 82";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009563\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value);
                            }
                            
                            uint8_t* _tmp_10575 = (uint8_t*) buffer++;
                            *_tmp_10575 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved83.size() != 0)  // CHOICE 83  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 83;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009564\033[0m| Choice selection: 83";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009565\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value);
                            }
                            
                            uint8_t* _tmp_10576 = (uint8_t*) buffer++;
                            *_tmp_10576 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved84.size() != 0)  // CHOICE 84  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 84;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009566\033[0m| Choice selection: 84";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009567\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value);
                            }
                            
                            uint8_t* _tmp_10577 = (uint8_t*) buffer++;
                            *_tmp_10577 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved85.size() != 0)  // CHOICE 85  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 85;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009568\033[0m| Choice selection: 85";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009569\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value);
                            }
                            
                            uint8_t* _tmp_10578 = (uint8_t*) buffer++;
                            *_tmp_10578 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved86.size() != 0)  // CHOICE 86  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 86;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009570\033[0m| Choice selection: 86";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009571\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value);
                            }
                            
                            uint8_t* _tmp_10579 = (uint8_t*) buffer++;
                            *_tmp_10579 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved87.size() != 0)  // CHOICE 87  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 87;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009572\033[0m| Choice selection: 87";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009573\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value);
                            }
                            
                            uint8_t* _tmp_10580 = (uint8_t*) buffer++;
                            *_tmp_10580 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved88.size() != 0)  // CHOICE 88  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 88;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009574\033[0m| Choice selection: 88";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009575\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value);
                            }
                            
                            uint8_t* _tmp_10581 = (uint8_t*) buffer++;
                            *_tmp_10581 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved89.size() != 0)  // CHOICE 89  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 89;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009576\033[0m| Choice selection: 89";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009577\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value);
                            }
                            
                            uint8_t* _tmp_10582 = (uint8_t*) buffer++;
                            *_tmp_10582 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved90.size() != 0)  // CHOICE 90  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 90;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009578\033[0m| Choice selection: 90";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009579\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value);
                            }
                            
                            uint8_t* _tmp_10583 = (uint8_t*) buffer++;
                            *_tmp_10583 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91.size() != 0)  // CHOICE 91  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 91;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009580\033[0m| Choice selection: 91";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009581\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value);
                            }
                            
                            uint8_t* _tmp_10584 = (uint8_t*) buffer++;
                            *_tmp_10584 = ros->denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.post_crash92.size() != 0)  // CHOICE 92  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 92;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009582\033[0m| Choice selection: 92";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009583\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value);
                            }
                            
                            uint8_t* _tmp_10585 = (uint8_t*) buffer++;
                            *_tmp_10585 = ros->denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_problem93.size() != 0)  // CHOICE 93  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 93;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009584\033[0m| Choice selection: 93";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009585\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value);
                            }
                            
                            uint8_t* _tmp_10586 = (uint8_t*) buffer++;
                            *_tmp_10586 = ros->denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94.size() != 0)  // CHOICE 94  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 94;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009586\033[0m| Choice selection: 94";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009587\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value);
                            }
                            
                            uint8_t* _tmp_10587 = (uint8_t*) buffer++;
                            *_tmp_10587 = ros->denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95.size() != 0)  // CHOICE 95  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 95;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009588\033[0m| Choice selection: 95";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009589\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value);
                            }
                            
                            uint8_t* _tmp_10588 = (uint8_t*) buffer++;
                            *_tmp_10588 = ros->denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96.size() != 0)  // CHOICE 96  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 96;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009590\033[0m| Choice selection: 96";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009591\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value);
                            }
                            
                            uint8_t* _tmp_10589 = (uint8_t*) buffer++;
                            *_tmp_10589 = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97.size() != 0)  // CHOICE 97  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 97;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009592\033[0m| Choice selection: 97";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009593\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value);
                            }
                            
                            uint8_t* _tmp_10590 = (uint8_t*) buffer++;
                            *_tmp_10590 = ros->denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98.size() != 0)  // CHOICE 98  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 98;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009594\033[0m| Choice selection: 98";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009595\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value);
                            }
                            
                            uint8_t* _tmp_10591 = (uint8_t*) buffer++;
                            *_tmp_10591 = ros->denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99.size() != 0)  // CHOICE 99  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 99;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009596\033[0m| Choice selection: 99";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009597\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value);
                            }
                            
                            uint8_t* _tmp_10592 = (uint8_t*) buffer++;
                            *_tmp_10592 = ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100.size() != 0)  // CHOICE 100  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 100;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009598\033[0m| Choice selection: 100";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009599\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value);
                            }
                            
                            uint8_t* _tmp_10593 = (uint8_t*) buffer++;
                            *_tmp_10593 = ros->denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved101.size() != 0)  // CHOICE 101  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 101;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009600\033[0m| Choice selection: 101";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009601\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value);
                            }
                            
                            uint8_t* _tmp_10594 = (uint8_t*) buffer++;
                            *_tmp_10594 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved102.size() != 0)  // CHOICE 102  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 102;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009602\033[0m| Choice selection: 102";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009603\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value);
                            }
                            
                            uint8_t* _tmp_10595 = (uint8_t*) buffer++;
                            *_tmp_10595 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved103.size() != 0)  // CHOICE 103  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 103;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009604\033[0m| Choice selection: 103";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009605\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value);
                            }
                            
                            uint8_t* _tmp_10596 = (uint8_t*) buffer++;
                            *_tmp_10596 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved104.size() != 0)  // CHOICE 104  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 104;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009606\033[0m| Choice selection: 104";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009607\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value);
                            }
                            
                            uint8_t* _tmp_10597 = (uint8_t*) buffer++;
                            *_tmp_10597 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved105.size() != 0)  // CHOICE 105  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 105;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009608\033[0m| Choice selection: 105";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009609\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value);
                            }
                            
                            uint8_t* _tmp_10598 = (uint8_t*) buffer++;
                            *_tmp_10598 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved106.size() != 0)  // CHOICE 106  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 106;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009610\033[0m| Choice selection: 106";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009611\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value);
                            }
                            
                            uint8_t* _tmp_10599 = (uint8_t*) buffer++;
                            *_tmp_10599 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved107.size() != 0)  // CHOICE 107  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 107;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009612\033[0m| Choice selection: 107";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009613\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value);
                            }
                            
                            uint8_t* _tmp_10600 = (uint8_t*) buffer++;
                            *_tmp_10600 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved108.size() != 0)  // CHOICE 108  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 108;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009614\033[0m| Choice selection: 108";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009615\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value);
                            }
                            
                            uint8_t* _tmp_10601 = (uint8_t*) buffer++;
                            *_tmp_10601 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved109.size() != 0)  // CHOICE 109  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 109;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009616\033[0m| Choice selection: 109";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009617\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value);
                            }
                            
                            uint8_t* _tmp_10602 = (uint8_t*) buffer++;
                            *_tmp_10602 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved110.size() != 0)  // CHOICE 110  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 110;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009618\033[0m| Choice selection: 110";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009619\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value);
                            }
                            
                            uint8_t* _tmp_10603 = (uint8_t*) buffer++;
                            *_tmp_10603 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved111.size() != 0)  // CHOICE 111  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 111;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009620\033[0m| Choice selection: 111";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009621\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value);
                            }
                            
                            uint8_t* _tmp_10604 = (uint8_t*) buffer++;
                            *_tmp_10604 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved112.size() != 0)  // CHOICE 112  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 112;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009622\033[0m| Choice selection: 112";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009623\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value);
                            }
                            
                            uint8_t* _tmp_10605 = (uint8_t*) buffer++;
                            *_tmp_10605 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved113.size() != 0)  // CHOICE 113  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 113;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009624\033[0m| Choice selection: 113";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009625\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value);
                            }
                            
                            uint8_t* _tmp_10606 = (uint8_t*) buffer++;
                            *_tmp_10606 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved114.size() != 0)  // CHOICE 114  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 114;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009626\033[0m| Choice selection: 114";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009627\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value);
                            }
                            
                            uint8_t* _tmp_10607 = (uint8_t*) buffer++;
                            *_tmp_10607 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved115.size() != 0)  // CHOICE 115  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 115;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009628\033[0m| Choice selection: 115";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009629\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value);
                            }
                            
                            uint8_t* _tmp_10608 = (uint8_t*) buffer++;
                            *_tmp_10608 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved116.size() != 0)  // CHOICE 116  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 116;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009630\033[0m| Choice selection: 116";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009631\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value);
                            }
                            
                            uint8_t* _tmp_10609 = (uint8_t*) buffer++;
                            *_tmp_10609 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved117.size() != 0)  // CHOICE 117  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 117;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009632\033[0m| Choice selection: 117";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009633\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value);
                            }
                            
                            uint8_t* _tmp_10610 = (uint8_t*) buffer++;
                            *_tmp_10610 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved118.size() != 0)  // CHOICE 118  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 118;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009634\033[0m| Choice selection: 118";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009635\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value);
                            }
                            
                            uint8_t* _tmp_10611 = (uint8_t*) buffer++;
                            *_tmp_10611 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved119.size() != 0)  // CHOICE 119  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 119;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009636\033[0m| Choice selection: 119";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009637\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value);
                            }
                            
                            uint8_t* _tmp_10612 = (uint8_t*) buffer++;
                            *_tmp_10612 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved120.size() != 0)  // CHOICE 120  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 120;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009638\033[0m| Choice selection: 120";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009639\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value);
                            }
                            
                            uint8_t* _tmp_10613 = (uint8_t*) buffer++;
                            *_tmp_10613 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved121.size() != 0)  // CHOICE 121  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 121;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009640\033[0m| Choice selection: 121";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009641\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value);
                            }
                            
                            uint8_t* _tmp_10614 = (uint8_t*) buffer++;
                            *_tmp_10614 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved122.size() != 0)  // CHOICE 122  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 122;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009642\033[0m| Choice selection: 122";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009643\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value);
                            }
                            
                            uint8_t* _tmp_10615 = (uint8_t*) buffer++;
                            *_tmp_10615 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved123.size() != 0)  // CHOICE 123  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 123;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009644\033[0m| Choice selection: 123";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009645\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value);
                            }
                            
                            uint8_t* _tmp_10616 = (uint8_t*) buffer++;
                            *_tmp_10616 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved124.size() != 0)  // CHOICE 124  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 124;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009646\033[0m| Choice selection: 124";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009647\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value);
                            }
                            
                            uint8_t* _tmp_10617 = (uint8_t*) buffer++;
                            *_tmp_10617 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved125.size() != 0)  // CHOICE 125  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 125;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009648\033[0m| Choice selection: 125";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009649\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value);
                            }
                            
                            uint8_t* _tmp_10618 = (uint8_t*) buffer++;
                            *_tmp_10618 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved126.size() != 0)  // CHOICE 126  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 126;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009650\033[0m| Choice selection: 126";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009651\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value);
                            }
                            
                            uint8_t* _tmp_10619 = (uint8_t*) buffer++;
                            *_tmp_10619 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved127.size() != 0)  // CHOICE 127  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 127;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009652\033[0m| Choice selection: 127";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009653\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value);
                            }
                            
                            uint8_t* _tmp_10620 = (uint8_t*) buffer++;
                            *_tmp_10620 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved128.size() != 0)  // CHOICE 128  fieldType(CauseCodeChoice) 
                        {
                            *_choice_318 = 128;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009654\033[0m| Choice selection: 128";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009655\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value);
                            }
                            
                            uint8_t* _tmp_10621 = (uint8_t*) buffer++;
                            *_tmp_10621 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else
                        {
                            logger->warning() << "Wrong option (" << static_cast<int>(*_choice_318) << ") selected in CHOICE CauseCodeChoice in 'denm.situation[0].linked_cause[0].cc_and_scc'; message dropped.";
                            return -1;
                        }
                        
                        if(*_ext_flag_4837) {
                        }
                }
                
                if(ros->denm.situation[0].event_zone.size() != 0) {
                    // Field:  type(EventZone) name(event_zone) extGroup(0)
                    // SequenceOf
                    // Data Type UInt8
                    // SEQUENCE_OF  min(1) max(23) span(23) ext(false)
                    __aux64__ = ros->denm.situation[0].event_zone[0].elements.size();
                    if(__aux64__ > 23) __aux64__ = 23;
                    uint16_t* _tmp_10623 = (uint16_t*)buffer;
                    buffer += 2;
                    *_tmp_10623 = __aux64__ - 1;
                    
                    int __ifm = __aux64__;
                    for(int m = 0; m < __ifm; m++) { 
                        
                            // EventPoint  SEQUENCE
                                //  eventPosition      DeltaReferencePosition     
                                //  eventDeltaTime     PathDeltaTime            OPTIONAL  
                                //  informationQuality InformationQuality         
                            // Optional fields bytemap
                            char* _tmp_10624 = (char*) buffer++;
                            *_tmp_10624 = (ros->denm.situation[0].event_zone[0].elements[m].event_delta_time.size() != 0 ? 1 : 0);
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009657\033[0m| Optional field event_delta_time = " << *_tmp_10624;
                            
                            // Field:  type(DeltaReferencePosition) name(event_position) extGroup(0)
                                // DeltaReferencePosition  SEQUENCE
                                    //  deltaLatitude  DeltaLatitude      
                                    //  deltaLongitude DeltaLongitude     
                                    //  deltaAltitude  DeltaAltitude      
                                // Optional fields bytemap
                                
                                // Field:  type(DeltaLatitude) name(delta_latitude) extGroup(0)
                                // Real
                                
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m009658\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_zone[0].elements[m].event_position.delta_latitude.value) << 
                                                 " denm.situation[0].event_zone[0].elements[m].event_position.delta_latitude.value: " << ros->denm.situation[0].event_zone[0].elements[m].event_position.delta_latitude.value;
                                }
                                
                                double _tmp_10626 = ros->denm.situation[0].event_zone[0].elements[m].event_position.delta_latitude.value;
                                _tmp_10626 *= 1.0E7;
                                __aux64__ = static_cast<uint64_t>(_tmp_10626);
                                _tmp_10626 -= -131071;
                                uint32_t* _tmp_10625 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_10625 = static_cast<uint32_t>(_tmp_10626);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[m].event_position.delta_latitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[m].event_position.delta_latitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DeltaLongitude) name(delta_longitude) extGroup(0)
                                // Real
                                
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m009659\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_zone[0].elements[m].event_position.delta_longitude.value) << 
                                                 " denm.situation[0].event_zone[0].elements[m].event_position.delta_longitude.value: " << ros->denm.situation[0].event_zone[0].elements[m].event_position.delta_longitude.value;
                                }
                                
                                double _tmp_10628 = ros->denm.situation[0].event_zone[0].elements[m].event_position.delta_longitude.value;
                                _tmp_10628 *= 1.0E7;
                                __aux64__ = static_cast<uint64_t>(_tmp_10628);
                                _tmp_10628 -= -131071;
                                uint32_t* _tmp_10627 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_10627 = static_cast<uint32_t>(_tmp_10628);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[m].event_position.delta_longitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[m].event_position.delta_longitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DeltaAltitude) name(delta_altitude) extGroup(0)
                                // Real
                                
                                // FLOAT  min(-12700) max(12800) span(25501) scaleDivisor(100.0) dataType(Float)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m009660\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_zone[0].elements[m].event_position.delta_altitude.value) << 
                                                 " denm.situation[0].event_zone[0].elements[m].event_position.delta_altitude.value: " << ros->denm.situation[0].event_zone[0].elements[m].event_position.delta_altitude.value;
                                }
                                
                                float _tmp_10630 = ros->denm.situation[0].event_zone[0].elements[m].event_position.delta_altitude.value;
                                _tmp_10630 *= 100.0;
                                __aux64__ = static_cast<uint64_t>(_tmp_10630);
                                _tmp_10630 -= -12700;
                                uint16_t* _tmp_10629 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_10629 = static_cast<uint16_t>(_tmp_10630);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -12700) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[m].event_position.delta_altitude.value' (" << __aux64__ << ") less than (-12700); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 12800) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[m].event_position.delta_altitude.value' (" << __aux64__ << ") exceeds max allowable (12800); message dropped.";
                                    return -1;
                                }
                            
                            if(ros->denm.situation[0].event_zone[0].elements[m].event_delta_time.size() != 0) {
                                // Field:  type(PathDeltaTime) name(event_delta_time) extGroup(0)
                                // Real
                                
                                // FLOAT  min(1) max(65535) span(65535) scaleDivisor(100.0) dataType(Float)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m009661\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_zone[0].elements[m].event_delta_time[0].value) << 
                                                 " denm.situation[0].event_zone[0].elements[m].event_delta_time[0].value: " << ros->denm.situation[0].event_zone[0].elements[m].event_delta_time[0].value;
                                }
                                
                                uint8_t* _ext_flag_4971 = (uint8_t*) buffer++; // Extension flag for ros->denm.situation[0].event_zone[0].elements[m].event_delta_time[0].
                                float _tmp_10631 = ros->denm.situation[0].event_zone[0].elements[m].event_delta_time[0].value;
                                _tmp_10631 *= 100.0;
                                __aux64__ = static_cast<int64_t>(_tmp_10631);
                                *_ext_flag_4971 = (__aux64__ >= 1 && __aux64__ <= 65535) ? 0 : 1;
                                
                                if(*_ext_flag_4971) {
                                    uint8_t* _tmp_10632 = (uint8_t*) buffer++; 
                                
                                    if(__aux64__ >= INT32_MIN && __aux64__ <= INT32_MAX) {
                                        *_tmp_10632 = 0;
                                
                                        float _tmp_10634 = ros->denm.situation[0].event_zone[0].elements[m].event_delta_time[0].value;
                                        _tmp_10634 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_10634);
                                        _tmp_10634 -= INT32_MIN;
                                        uint32_t* _tmp_10633 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_10633 = static_cast<uint32_t>(_tmp_10634);
                                    }
                                    else
                                    {
                                        *_tmp_10632 = 1;
                                
                                        float _tmp_10636 = ros->denm.situation[0].event_zone[0].elements[m].event_delta_time[0].value;
                                        _tmp_10636 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_10636);
                                        _tmp_10636 -= INT64_MIN;
                                        uint32_t* _tmp_10635 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_10635 = static_cast<uint32_t>(_tmp_10636);
                                    }
                                }
                                else
                                {
                                    float _tmp_10638 = ros->denm.situation[0].event_zone[0].elements[m].event_delta_time[0].value;
                                    _tmp_10638 *= 100.0;
                                    __aux64__ = static_cast<uint64_t>(_tmp_10638);
                                    _tmp_10638 -= 1;
                                    uint16_t* _tmp_10637 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_10637 = static_cast<uint16_t>(_tmp_10638);
                                }
                            }
                            
                            // Field:  type(InformationQuality) name(information_quality) extGroup(0)
                            // Integer
                            
                            // UINT8  min(0) max(7) span(8) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009662\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_zone[0].elements[m].information_quality.value) << 
                                             " denm.situation[0].event_zone[0].elements[m].information_quality.value: " << static_cast<int>(ros->denm.situation[0].event_zone[0].elements[m].information_quality.value);
                            }
                            
                            uint8_t* _tmp_10639 = (uint8_t*) buffer++;
                            *_tmp_10639 = ros->denm.situation[0].event_zone[0].elements[m].information_quality.value; 
                            __aux64__ = ros->denm.situation[0].event_zone[0].elements[m].information_quality.value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[m].information_quality.value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 7) {
                                logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[m].information_quality.value' (" << __aux64__ << ") exceeds max allowable (7); message dropped.";
                                return -1;
                            }
                            
                    }
                }
                
                if(*_ext_flag_4704) {
                    // Write number of extensions 
                    uint8_t* _tmp_10640 = (uint8_t*) buffer++;
                    *_tmp_10640 = 1;
                    
                    // Write Bytemap
                    // extension group #1)
                    uint8_t* _tmp_10641 = (uint8_t*) buffer++;
                    *_tmp_10641 = (ros->denm.situation[0].linked_denms.size() != 0 || ros->denm.situation[0].event_end.size() != 0) ? 1 : 0;
                    
                    // OpenType length variable 
                    uint16_t* _tmp_10642_openType = (uint16_t*) buffer;
                    buffer += 2;
                    const uint8_t *_tmp_10643_start = buffer; // Starting point
                    
                    // Optional fields bytemap
                    uint8_t* _tmp_10644 = (uint8_t*)buffer++;
                    *_tmp_10644 = (ros->denm.situation[0].linked_denms.size() != 0 ? 1: 0);
                    
                    uint8_t* _tmp_10645 = (uint8_t*)buffer++;
                    *_tmp_10645 = (ros->denm.situation[0].event_end.size() != 0 ? 1: 0);
                    
                    if(ros->denm.situation[0].linked_denms.size() != 0) {
                        // Field:  type(ActionIdList) name(linked_denms) extGroup(1)
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(8) span(8) ext(true)
                        uint8_t* _ext_flag_4973 = (uint8_t*) buffer++; // Write extension flag for ros->denm.situation[0].linked_denms[0].
                        *_ext_flag_4973 = 0; 
                        
                        __aux64__ = ros->denm.situation[0].linked_denms[0].elements.size();
                        if(__aux64__ > 8) __aux64__ = 8;
                        uint16_t* _tmp_10646 = (uint16_t*)buffer;
                        buffer += 2;
                        *_tmp_10646 = __aux64__ - 1;
                        
                        int __ifn = __aux64__;
                        for(int n = 0; n < __ifn; n++) { 
                            
                                // ActionId  SEQUENCE
                                    //  originatingStationId StationId          
                                    //  sequenceNumber       SequenceNumber     
                                // Optional fields bytemap
                                
                                // Field:  type(StationId) name(originating_station_id) extGroup(0)
                                // Integer
                                
                                // UINT32  min(0) max(4294967295) span(4294967296) dataType(UInt32)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m009664\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_denms[0].elements[n].originating_station_id.value) << 
                                                 " denm.situation[0].linked_denms[0].elements[n].originating_station_id.value: " << ros->denm.situation[0].linked_denms[0].elements[n].originating_station_id.value;
                                }
                                
                                uint32_t* _tmp_10647 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_10647 = ros->denm.situation[0].linked_denms[0].elements[n].originating_station_id.value; 
                                __aux64__ = ros->denm.situation[0].linked_denms[0].elements[n].originating_station_id.value;
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].linked_denms[0].elements[n].originating_station_id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 4294967295) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].linked_denms[0].elements[n].originating_station_id.value' (" << __aux64__ << ") exceeds max allowable (4294967295); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(SequenceNumber) name(sequence_number) extGroup(0)
                                // Integer
                                
                                // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m009665\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_denms[0].elements[n].sequence_number.value) << 
                                                 " denm.situation[0].linked_denms[0].elements[n].sequence_number.value: " << ros->denm.situation[0].linked_denms[0].elements[n].sequence_number.value;
                                }
                                
                                uint16_t* _tmp_10648 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_10648 = ros->denm.situation[0].linked_denms[0].elements[n].sequence_number.value; 
                                __aux64__ = ros->denm.situation[0].linked_denms[0].elements[n].sequence_number.value;
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].linked_denms[0].elements[n].sequence_number.value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].linked_denms[0].elements[n].sequence_number.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                    return -1;
                                }
                                
                        }
                    }
                    
                    if(ros->denm.situation[0].event_end.size() != 0) {
                        // Field:  type(Position1d) name(event_end) extGroup(1)
                        // Integer
                        
                        // INT16  min(-8190) max(8191) span(16382) dataType(Int16)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009666\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_end[0].value) << 
                                         " denm.situation[0].event_end[0].value: " << ros->denm.situation[0].event_end[0].value;
                        }
                        
                        uint16_t* _tmp_10649 = (uint16_t*) buffer; buffer += 2;
                        __aux64__ = ros->denm.situation[0].event_end[0].value - -8190;
                        *_tmp_10649 = __aux64__;
                        __aux64__ = ros->denm.situation[0].event_end[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < -8190) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_end[0].value' (" << __aux64__ << ") less than (-8190); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 8191) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_end[0].value' (" << __aux64__ << ") exceeds max allowable (8191); message dropped.";
                            return -1;
                        }
                    }
                    
                    *_tmp_10642_openType = buffer - _tmp_10643_start;  // OpenType length
                }
        }
        
        if(ros->denm.location.size() != 0) {
            // Field:  type(LocationContainer) name(location) extGroup(0)
                // LocationContainer  SEQUENCE
                    //  eventSpeed                          Speed                         OPTIONAL  
                    //  eventPositionHeading                Wgs84Angle                    OPTIONAL  
                    //  detectionZonesToEventPosition       Traces                          
                    //  roadType                            RoadType                      OPTIONAL  
                    //  lanePositions                       GeneralizedLanePositions      OPTIONAL  Extension group #1
                    //  occupiedLanes                       OccupiedLanesWithConfidence   OPTIONAL  Extension group #1
                    //  linkedIvims                         IvimReferences                OPTIONAL  Extension group #1
                    //  linkedMapems                        MapReferences                 OPTIONAL  Extension group #1
                    //  detectionZonesToSpecifiedEventPoint TracesExtended                OPTIONAL  Extension group #1
                    //  predictedPaths                      PathPredictedList             OPTIONAL  Extension group #1
                uint8_t* _ext_flag_4977 = (uint8_t*) buffer++;  // Write extension flag for LocationContainer
                *_ext_flag_4977 = (ros->denm.location[0].lane_positions.size() != 0 || ros->denm.location[0].occupied_lanes.size() != 0 || ros->denm.location[0].linked_ivims.size() != 0 || ros->denm.location[0].linked_mapems.size() != 0 || ros->denm.location[0].detection_zones_to_specified_event_point.size() != 0 || ros->denm.location[0].predicted_paths.size() != 0) ? 1 : 0; 
                
                // Optional fields bytemap
                char* _tmp_10650 = (char*) buffer++;
                *_tmp_10650 = (ros->denm.location[0].event_speed.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m009667\033[0m| Optional field event_speed = " << *_tmp_10650;
                char* _tmp_10651 = (char*) buffer++;
                *_tmp_10651 = (ros->denm.location[0].event_position_heading.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m009668\033[0m| Optional field event_position_heading = " << *_tmp_10651;
                char* _tmp_10652 = (char*) buffer++;
                *_tmp_10652 = (ros->denm.location[0].road_type.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m009669\033[0m| Optional field road_type = " << *_tmp_10652;
                
                if(ros->denm.location[0].event_speed.size() != 0) {
                    // Field:  type(Speed) name(event_speed) extGroup(0)
                        // Speed  SEQUENCE
                            //  speedValue      SpeedValue          
                            //  speedConfidence SpeedConfidence     
                        // Optional fields bytemap
                        
                        // Field:  type(SpeedValue) name(speed_value) extGroup(0)
                        // Real
                        
                        // FLOAT  min(0) max(16383) span(16384) scaleDivisor(100.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009670\033[0m| " << tools::getTypeName(ros->denm.location[0].event_speed[0].speed_value.value) << 
                                         " denm.location[0].event_speed[0].speed_value.value: " << ros->denm.location[0].event_speed[0].speed_value.value;
                        }
                        
                        float _tmp_10654 = ros->denm.location[0].event_speed[0].speed_value.value;
                        _tmp_10654 *= 100.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_10654);
                        uint16_t* _tmp_10653 = (uint16_t*) buffer; buffer += 2;
                        *_tmp_10653 = static_cast<uint16_t>(_tmp_10654);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_speed[0].speed_value.value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 16383) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_speed[0].speed_value.value' (" << __aux64__ << ") exceeds max allowable (16383); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(SpeedConfidence) name(speed_confidence) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009671\033[0m| " << tools::getTypeName(ros->denm.location[0].event_speed[0].speed_confidence.value) << 
                                         " denm.location[0].event_speed[0].speed_confidence.value: " << static_cast<int>(ros->denm.location[0].event_speed[0].speed_confidence.value);
                        }
                        
                        float _tmp_10656 = ros->denm.location[0].event_speed[0].speed_confidence.value;
                        _tmp_10656 *= 100.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_10656);
                        _tmp_10656 -= 1;
                        uint8_t* _tmp_10655 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_10655 = static_cast<uint8_t>(_tmp_10656);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_speed[0].speed_confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_speed[0].speed_confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                            return -1;
                        }
                }
                
                if(ros->denm.location[0].event_position_heading.size() != 0) {
                    // Field:  type(Wgs84Angle) name(event_position_heading) extGroup(0)
                        // Wgs84Angle  SEQUENCE
                            //  value      Wgs84AngleValue          
                            //  confidence Wgs84AngleConfidence     
                        // Optional fields bytemap
                        
                        // Field:  type(Wgs84AngleValue) name(value) extGroup(0)
                        // Real
                        
                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009672\033[0m| " << tools::getTypeName(ros->denm.location[0].event_position_heading[0].value.value) << 
                                         " denm.location[0].event_position_heading[0].value.value: " << ros->denm.location[0].event_position_heading[0].value.value;
                        }
                        
                        float _tmp_10658 = ros->denm.location[0].event_position_heading[0].value.value;
                        _tmp_10658 *= 10.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_10658);
                        uint16_t* _tmp_10657 = (uint16_t*) buffer; buffer += 2;
                        *_tmp_10657 = static_cast<uint16_t>(_tmp_10658);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_position_heading[0].value.value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_position_heading[0].value.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(Wgs84AngleConfidence) name(confidence) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009673\033[0m| " << tools::getTypeName(ros->denm.location[0].event_position_heading[0].confidence.value) << 
                                         " denm.location[0].event_position_heading[0].confidence.value: " << static_cast<int>(ros->denm.location[0].event_position_heading[0].confidence.value);
                        }
                        
                        float _tmp_10660 = ros->denm.location[0].event_position_heading[0].confidence.value;
                        _tmp_10660 *= 10.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_10660);
                        _tmp_10660 -= 1;
                        uint8_t* _tmp_10659 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_10659 = static_cast<uint8_t>(_tmp_10660);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_position_heading[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_position_heading[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                            return -1;
                        }
                }
                
                // Field:  type(Traces) name(detection_zones_to_event_position) extGroup(0)
                // SequenceOf
                // Data Type UInt8
                // SEQUENCE_OF  min(1) max(7) span(7) ext(false)
                __aux64__ = ros->denm.location[0].detection_zones_to_event_position.elements.size();
                if(__aux64__ > 7) __aux64__ = 7;
                uint16_t* _tmp_10661 = (uint16_t*)buffer;
                buffer += 2;
                *_tmp_10661 = __aux64__ - 1;
                
                int __ifo = __aux64__;
                for(int o = 0; o < __ifo; o++) { 
                    
                    // SequenceOf
                    // Data Type UInt8
                    // SEQUENCE_OF  min(0) max(40) span(41) ext(false)
                    __aux64__ = ros->denm.location[0].detection_zones_to_event_position.elements[o].elements.size();
                    if(__aux64__ > 40) __aux64__ = 40;
                    uint16_t* _tmp_10662 = (uint16_t*)buffer;
                    buffer += 2;
                    *_tmp_10662 = __aux64__;
                    
                    int __ifp = __aux64__;
                    for(int p = 0; p < __ifp; p++) { 
                        
                            // PathPoint  SEQUENCE
                                //  pathPosition  DeltaReferencePosition     
                                //  pathDeltaTime PathDeltaTime            OPTIONAL  
                            // Optional fields bytemap
                            char* _tmp_10663 = (char*) buffer++;
                            *_tmp_10663 = (ros->denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_delta_time.size() != 0 ? 1 : 0);
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009676\033[0m| Optional field path_delta_time = " << *_tmp_10663;
                            
                            // Field:  type(DeltaReferencePosition) name(path_position) extGroup(0)
                                // DeltaReferencePosition  SEQUENCE
                                    //  deltaLatitude  DeltaLatitude      
                                    //  deltaLongitude DeltaLongitude     
                                    //  deltaAltitude  DeltaAltitude      
                                // Optional fields bytemap
                                
                                // Field:  type(DeltaLatitude) name(delta_latitude) extGroup(0)
                                // Real
                                
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m009677\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_position.delta_latitude.value) << 
                                                 " denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_position.delta_latitude.value: " << ros->denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_position.delta_latitude.value;
                                }
                                
                                double _tmp_10665 = ros->denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_position.delta_latitude.value;
                                _tmp_10665 *= 1.0E7;
                                __aux64__ = static_cast<uint64_t>(_tmp_10665);
                                _tmp_10665 -= -131071;
                                uint32_t* _tmp_10664 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_10664 = static_cast<uint32_t>(_tmp_10665);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_position.delta_latitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_position.delta_latitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DeltaLongitude) name(delta_longitude) extGroup(0)
                                // Real
                                
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m009678\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_position.delta_longitude.value) << 
                                                 " denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_position.delta_longitude.value: " << ros->denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_position.delta_longitude.value;
                                }
                                
                                double _tmp_10667 = ros->denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_position.delta_longitude.value;
                                _tmp_10667 *= 1.0E7;
                                __aux64__ = static_cast<uint64_t>(_tmp_10667);
                                _tmp_10667 -= -131071;
                                uint32_t* _tmp_10666 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_10666 = static_cast<uint32_t>(_tmp_10667);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_position.delta_longitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_position.delta_longitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DeltaAltitude) name(delta_altitude) extGroup(0)
                                // Real
                                
                                // FLOAT  min(-12700) max(12800) span(25501) scaleDivisor(100.0) dataType(Float)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m009679\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_position.delta_altitude.value) << 
                                                 " denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_position.delta_altitude.value: " << ros->denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_position.delta_altitude.value;
                                }
                                
                                float _tmp_10669 = ros->denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_position.delta_altitude.value;
                                _tmp_10669 *= 100.0;
                                __aux64__ = static_cast<uint64_t>(_tmp_10669);
                                _tmp_10669 -= -12700;
                                uint16_t* _tmp_10668 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_10668 = static_cast<uint16_t>(_tmp_10669);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -12700) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_position.delta_altitude.value' (" << __aux64__ << ") less than (-12700); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 12800) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_position.delta_altitude.value' (" << __aux64__ << ") exceeds max allowable (12800); message dropped.";
                                    return -1;
                                }
                            
                            if(ros->denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_delta_time.size() != 0) {
                                // Field:  type(PathDeltaTime) name(path_delta_time) extGroup(0)
                                // Real
                                
                                // FLOAT  min(1) max(65535) span(65535) scaleDivisor(100.0) dataType(Float)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m009680\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_delta_time[0].value) << 
                                                 " denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_delta_time[0].value: " << ros->denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_delta_time[0].value;
                                }
                                
                                uint8_t* _ext_flag_4985 = (uint8_t*) buffer++; // Extension flag for ros->denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_delta_time[0].
                                float _tmp_10670 = ros->denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_delta_time[0].value;
                                _tmp_10670 *= 100.0;
                                __aux64__ = static_cast<int64_t>(_tmp_10670);
                                *_ext_flag_4985 = (__aux64__ >= 1 && __aux64__ <= 65535) ? 0 : 1;
                                
                                if(*_ext_flag_4985) {
                                    uint8_t* _tmp_10671 = (uint8_t*) buffer++; 
                                
                                    if(__aux64__ >= INT32_MIN && __aux64__ <= INT32_MAX) {
                                        *_tmp_10671 = 0;
                                
                                        float _tmp_10673 = ros->denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_delta_time[0].value;
                                        _tmp_10673 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_10673);
                                        _tmp_10673 -= INT32_MIN;
                                        uint32_t* _tmp_10672 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_10672 = static_cast<uint32_t>(_tmp_10673);
                                    }
                                    else
                                    {
                                        *_tmp_10671 = 1;
                                
                                        float _tmp_10675 = ros->denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_delta_time[0].value;
                                        _tmp_10675 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_10675);
                                        _tmp_10675 -= INT64_MIN;
                                        uint32_t* _tmp_10674 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_10674 = static_cast<uint32_t>(_tmp_10675);
                                    }
                                }
                                else
                                {
                                    float _tmp_10677 = ros->denm.location[0].detection_zones_to_event_position.elements[o].elements[p].path_delta_time[0].value;
                                    _tmp_10677 *= 100.0;
                                    __aux64__ = static_cast<uint64_t>(_tmp_10677);
                                    _tmp_10677 -= 1;
                                    uint16_t* _tmp_10676 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_10676 = static_cast<uint16_t>(_tmp_10677);
                                }
                            }
                            
                    }
                    
                }
                
                if(ros->denm.location[0].road_type.size() != 0) {
                    // Field:  type(RoadType) name(road_type) extGroup(0)
                    // Enumerated
                    // INT32  min(0) max(3) span(4) dataType(Int32)
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m009681\033[0m| " << tools::getTypeName(ros->denm.location[0].road_type[0].value) << 
                                     " denm.location[0].road_type[0].value: " << static_cast<int>(ros->denm.location[0].road_type[0].value);
                    }
                    
                    uint8_t* _tmp_10678 = (uint8_t*)buffer;
                    buffer += 1;
                    *_tmp_10678 = ros->denm.location[0].road_type[0].value; 
                    __aux64__ = ros->denm.location[0].road_type[0].value; 
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'denm.location[0].road_type[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 3) {
                        logger->warning() << "Error: Value in 'denm.location[0].road_type[0].value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                        return -1;
                    }
                }
                
                if(*_ext_flag_4977) {
                    // Write number of extensions 
                    uint8_t* _tmp_10679 = (uint8_t*) buffer++;
                    *_tmp_10679 = 1;
                    
                    // Write Bytemap
                    // extension group #1)
                    uint8_t* _tmp_10680 = (uint8_t*) buffer++;
                    *_tmp_10680 = (ros->denm.location[0].lane_positions.size() != 0 || ros->denm.location[0].occupied_lanes.size() != 0 || ros->denm.location[0].linked_ivims.size() != 0 || ros->denm.location[0].linked_mapems.size() != 0 || ros->denm.location[0].detection_zones_to_specified_event_point.size() != 0 || ros->denm.location[0].predicted_paths.size() != 0) ? 1 : 0;
                    
                    // OpenType length variable 
                    uint16_t* _tmp_10681_openType = (uint16_t*) buffer;
                    buffer += 2;
                    const uint8_t *_tmp_10682_start = buffer; // Starting point
                    
                    // Optional fields bytemap
                    uint8_t* _tmp_10683 = (uint8_t*)buffer++;
                    *_tmp_10683 = (ros->denm.location[0].lane_positions.size() != 0 ? 1: 0);
                    
                    uint8_t* _tmp_10684 = (uint8_t*)buffer++;
                    *_tmp_10684 = (ros->denm.location[0].occupied_lanes.size() != 0 ? 1: 0);
                    
                    uint8_t* _tmp_10685 = (uint8_t*)buffer++;
                    *_tmp_10685 = (ros->denm.location[0].linked_ivims.size() != 0 ? 1: 0);
                    
                    uint8_t* _tmp_10686 = (uint8_t*)buffer++;
                    *_tmp_10686 = (ros->denm.location[0].linked_mapems.size() != 0 ? 1: 0);
                    
                    uint8_t* _tmp_10687 = (uint8_t*)buffer++;
                    *_tmp_10687 = (ros->denm.location[0].detection_zones_to_specified_event_point.size() != 0 ? 1: 0);
                    
                    uint8_t* _tmp_10688 = (uint8_t*)buffer++;
                    *_tmp_10688 = (ros->denm.location[0].predicted_paths.size() != 0 ? 1: 0);
                    
                    if(ros->denm.location[0].lane_positions.size() != 0) {
                        // Field:  type(GeneralizedLanePositions) name(lane_positions) extGroup(1)
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(4) span(4) ext(false)
                        __aux64__ = ros->denm.location[0].lane_positions[0].elements.size();
                        if(__aux64__ > 4) __aux64__ = 4;
                        uint16_t* _tmp_10689 = (uint16_t*)buffer;
                        buffer += 2;
                        *_tmp_10689 = __aux64__ - 1;
                        
                        int __ifq = __aux64__;
                        for(int q = 0; q < __ifq; q++) { 
                            
                                // GeneralizedLanePosition  SEQUENCE
                                    //  lanePositionBased LanePositionOptions     
                                    //  mapBased          MapPosition           OPTIONAL  
                                    //  confidence        MetaInformation         
                                    //  ...
                                uint8_t* _ext_flag_4987 = (uint8_t*) buffer++;  // Write extension flag for GeneralizedLanePosition
                                *_ext_flag_4987 = 0;  
                                
                                // Optional fields bytemap
                                char* _tmp_10690 = (char*) buffer++;
                                *_tmp_10690 = (ros->denm.location[0].lane_positions[0].elements[q].map_based.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m009683\033[0m| Optional field map_based = " << *_tmp_10690;
                                
                                // Field:  type(LanePositionOptions) name(lane_position_based) extGroup(0)
                                // Choice
                                   // #0  simplelanePosition   LanePosition
                                   // #1  simpleLaneType   LaneType
                                   // #2  detailedlanePosition   LanePositionAndType
                                   // #3  lanePositionWithLateralDetails   LanePositionWithLateralDetails
                                   // #4  trafficIslandPosition   TrafficIslandPosition
                                uint8_t* _ext_flag_4988 = (uint8_t*) buffer; 
                                buffer++;
                                *_ext_flag_4988 = 0; 
                                
                                uint8_t* _choice_319 = (uint8_t*) buffer;
                                buffer++;
                                
                                if(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.simplelane_position.size() != 0) {  // CHOICE 0  fieldType(LanePositionOptions) 
                                    *_choice_319 = 0;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009684\033[0m| Choice selection: 0";
                                
                                    // Integer
                                    
                                    // INT8  min(-1) max(14) span(16) dataType(Int8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009685\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.simplelane_position[0].value) << 
                                                     " denm.location[0].lane_positions[0].elements[q].lane_position_based.simplelane_position[0].value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.simplelane_position[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10691 = (uint8_t*) buffer++;
                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.simplelane_position[0].value - -1;
                                    *_tmp_10691 = __aux64__;
                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.simplelane_position[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.simplelane_position[0].value' (" << __aux64__ << ") less than (-1); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.simplelane_position[0].value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.simple_lane_type.size() != 0)  // CHOICE 1  fieldType(LanePositionOptions) 
                                {
                                    *_choice_319 = 1;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009686\033[0m| Choice selection: 1";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009687\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.simple_lane_type[0].value) << 
                                                     " denm.location[0].lane_positions[0].elements[q].lane_position_based.simple_lane_type[0].value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.simple_lane_type[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10692 = (uint8_t*) buffer++;
                                    *_tmp_10692 = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.simple_lane_type[0].value; 
                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.simple_lane_type[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.simple_lane_type[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.simple_lane_type[0].value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position.size() != 0)  // CHOICE 2  fieldType(LanePositionOptions) 
                                {
                                    *_choice_319 = 2;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009688\033[0m| Choice selection: 2";
                                
                                        // LanePositionAndType  SEQUENCE
                                            //  transversalPosition LanePosition     
                                            //  laneType            LaneType         
                                            //  direction           Direction        
                                            //  ...
                                        uint8_t* _ext_flag_4991 = (uint8_t*) buffer++;  // Write extension flag for LanePositionAndType
                                        *_ext_flag_4991 = 0;  
                                        
                                        // Optional fields bytemap
                                        
                                        // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                        // Integer
                                        
                                        // INT8  min(-1) max(14) span(16) dataType(Int8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009689\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position[0].transversal_position.value) << 
                                                         " denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position[0].transversal_position.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position[0].transversal_position.value);
                                        }
                                        
                                        uint8_t* _tmp_10693 = (uint8_t*) buffer++;
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position[0].transversal_position.value - -1;
                                        *_tmp_10693 = __aux64__;
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position[0].transversal_position.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position[0].transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position[0].transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(LaneType) name(lane_type) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009690\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position[0].lane_type.value) << 
                                                         " denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position[0].lane_type.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position[0].lane_type.value);
                                        }
                                        
                                        uint8_t* _tmp_10694 = (uint8_t*) buffer++;
                                        *_tmp_10694 = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position[0].lane_type.value; 
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position[0].lane_type.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position[0].lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position[0].lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(Direction) name(direction) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009691\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position[0].direction.value) << 
                                                         " denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position[0].direction.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position[0].direction.value);
                                        }
                                        
                                        uint8_t* _tmp_10695 = (uint8_t*) buffer++;
                                        *_tmp_10695 = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position[0].direction.value; 
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position[0].direction.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position[0].direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.detailedlane_position[0].direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                            return -1;
                                        }
                                        
                                        if(*_ext_flag_4991) {
                                        }
                                
                                }
                                else if(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details.size() != 0)  // CHOICE 3  fieldType(LanePositionOptions) 
                                {
                                    *_choice_319 = 3;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009692\033[0m| Choice selection: 3";
                                
                                        // LanePositionWithLateralDetails  SEQUENCE
                                            //  transversalPosition   LanePosition         
                                            //  laneType              LaneType             
                                            //  direction             Direction            
                                            //  distanceToLeftBorder  StandardLength9b     
                                            //  distanceToRightBorder StandardLength9b     
                                            //  ...
                                        uint8_t* _ext_flag_4995 = (uint8_t*) buffer++;  // Write extension flag for LanePositionWithLateralDetails
                                        *_ext_flag_4995 = 0;  
                                        
                                        // Optional fields bytemap
                                        
                                        // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                        // Integer
                                        
                                        // INT8  min(-1) max(14) span(16) dataType(Int8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009693\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value) << 
                                                         " denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value);
                                        }
                                        
                                        uint8_t* _tmp_10697 = (uint8_t*) buffer++;
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value - -1;
                                        *_tmp_10697 = __aux64__;
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(LaneType) name(lane_type) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009694\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].lane_type.value) << 
                                                         " denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].lane_type.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].lane_type.value);
                                        }
                                        
                                        uint8_t* _tmp_10698 = (uint8_t*) buffer++;
                                        *_tmp_10698 = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].lane_type.value; 
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].lane_type.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(Direction) name(direction) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009695\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].direction.value) << 
                                                         " denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].direction.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].direction.value);
                                        }
                                        
                                        uint8_t* _tmp_10699 = (uint8_t*) buffer++;
                                        *_tmp_10699 = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].direction.value; 
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].direction.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(StandardLength9b) name(distance_to_left_border) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009696\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value) << 
                                                         " denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value: " << ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value;
                                        }
                                        
                                        float _tmp_10701 = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value;
                                        _tmp_10701 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_10701);
                                        uint16_t* _tmp_10700 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_10700 = static_cast<uint16_t>(_tmp_10701);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 511) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value' (" << __aux64__ << ") exceeds max allowable (511); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(StandardLength9b) name(distance_to_right_border) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009697\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value) << 
                                                         " denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value: " << ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value;
                                        }
                                        
                                        float _tmp_10703 = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value;
                                        _tmp_10703 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_10703);
                                        uint16_t* _tmp_10702 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_10702 = static_cast<uint16_t>(_tmp_10703);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 511) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value' (" << __aux64__ << ") exceeds max allowable (511); message dropped.";
                                            return -1;
                                        }
                                        
                                        if(*_ext_flag_4995) {
                                        }
                                
                                }
                                else if(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position.size() != 0)  // CHOICE 4  fieldType(LanePositionOptions) 
                                {
                                    *_choice_319 = 4;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009698\033[0m| Choice selection: 4";
                                
                                        // TrafficIslandPosition  SEQUENCE
                                            //  oneSide    LanePositionAndType     
                                            //  otherSide  LanePositionAndType     
                                            //  ...
                                        uint8_t* _ext_flag_5001 = (uint8_t*) buffer++;  // Write extension flag for TrafficIslandPosition
                                        *_ext_flag_5001 = 0;  
                                        
                                        // Optional fields bytemap
                                        
                                        // Field:  type(LanePositionAndType) name(one_side) extGroup(0)
                                            // LanePositionAndType  SEQUENCE
                                                //  transversalPosition LanePosition     
                                                //  laneType            LaneType         
                                                //  direction           Direction        
                                                //  ...
                                            uint8_t* _ext_flag_5002 = (uint8_t*) buffer++;  // Write extension flag for LanePositionAndType
                                            *_ext_flag_5002 = 0;  
                                            
                                            // Optional fields bytemap
                                            
                                            // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                            // Integer
                                            
                                            // INT8  min(-1) max(14) span(16) dataType(Int8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009699\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].one_side.transversal_position.value) << 
                                                             " denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].one_side.transversal_position.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].one_side.transversal_position.value);
                                            }
                                            
                                            uint8_t* _tmp_10705 = (uint8_t*) buffer++;
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].one_side.transversal_position.value - -1;
                                            *_tmp_10705 = __aux64__;
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].one_side.transversal_position.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].one_side.transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].one_side.transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(LaneType) name(lane_type) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009700\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].one_side.lane_type.value) << 
                                                             " denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].one_side.lane_type.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].one_side.lane_type.value);
                                            }
                                            
                                            uint8_t* _tmp_10706 = (uint8_t*) buffer++;
                                            *_tmp_10706 = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].one_side.lane_type.value; 
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].one_side.lane_type.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].one_side.lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].one_side.lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(Direction) name(direction) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009701\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].one_side.direction.value) << 
                                                             " denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].one_side.direction.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].one_side.direction.value);
                                            }
                                            
                                            uint8_t* _tmp_10707 = (uint8_t*) buffer++;
                                            *_tmp_10707 = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].one_side.direction.value; 
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].one_side.direction.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].one_side.direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].one_side.direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                                return -1;
                                            }
                                            
                                            if(*_ext_flag_5002) {
                                            }
                                        
                                        // Field:  type(LanePositionAndType) name(other_side) extGroup(0)
                                            // LanePositionAndType  SEQUENCE
                                                //  transversalPosition LanePosition     
                                                //  laneType            LaneType         
                                                //  direction           Direction        
                                                //  ...
                                            uint8_t* _ext_flag_5006 = (uint8_t*) buffer++;  // Write extension flag for LanePositionAndType
                                            *_ext_flag_5006 = 0;  
                                            
                                            // Optional fields bytemap
                                            
                                            // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                            // Integer
                                            
                                            // INT8  min(-1) max(14) span(16) dataType(Int8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009702\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].other_side.transversal_position.value) << 
                                                             " denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].other_side.transversal_position.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].other_side.transversal_position.value);
                                            }
                                            
                                            uint8_t* _tmp_10709 = (uint8_t*) buffer++;
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].other_side.transversal_position.value - -1;
                                            *_tmp_10709 = __aux64__;
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].other_side.transversal_position.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].other_side.transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].other_side.transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(LaneType) name(lane_type) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009703\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].other_side.lane_type.value) << 
                                                             " denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].other_side.lane_type.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].other_side.lane_type.value);
                                            }
                                            
                                            uint8_t* _tmp_10710 = (uint8_t*) buffer++;
                                            *_tmp_10710 = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].other_side.lane_type.value; 
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].other_side.lane_type.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].other_side.lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].other_side.lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(Direction) name(direction) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009704\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].other_side.direction.value) << 
                                                             " denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].other_side.direction.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].other_side.direction.value);
                                            }
                                            
                                            uint8_t* _tmp_10711 = (uint8_t*) buffer++;
                                            *_tmp_10711 = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].other_side.direction.value; 
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].other_side.direction.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].other_side.direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].lane_position_based.traffic_island_position[0].other_side.direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                                return -1;
                                            }
                                            
                                            if(*_ext_flag_5006) {
                                            }
                                        
                                        if(*_ext_flag_5001) {
                                        }
                                
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(*_choice_319) << ") selected in CHOICE LanePositionOptions in 'denm.location[0].lane_positions[0].elements[q].lane_position_based'; message dropped.";
                                    return -1;
                                }
                                
                                if(ros->denm.location[0].lane_positions[0].elements[q].map_based.size() != 0) {
                                    // Field:  type(MapPosition) name(map_based) extGroup(0)
                                        // MapPosition  SEQUENCE
                                            //  mapReference             MapReference               OPTIONAL  
                                            //  laneId                   Identifier1B               OPTIONAL  
                                            //  connectionId             Identifier1B               OPTIONAL  
                                            //  longitudinalLanePosition LongitudinalLanePosition   OPTIONAL  
                                            //  ...
                                        uint8_t* _ext_flag_5010 = (uint8_t*) buffer++;  // Write extension flag for MapPosition
                                        *_ext_flag_5010 = 0;  
                                        
                                        // Optional fields bytemap
                                        char* _tmp_10714 = (char*) buffer++;
                                        *_tmp_10714 = (ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m009705\033[0m| Optional field map_reference = " << *_tmp_10714;
                                        char* _tmp_10715 = (char*) buffer++;
                                        *_tmp_10715 = (ros->denm.location[0].lane_positions[0].elements[q].map_based[0].lane_id.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m009706\033[0m| Optional field lane_id = " << *_tmp_10715;
                                        char* _tmp_10716 = (char*) buffer++;
                                        *_tmp_10716 = (ros->denm.location[0].lane_positions[0].elements[q].map_based[0].connection_id.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m009707\033[0m| Optional field connection_id = " << *_tmp_10716;
                                        char* _tmp_10717 = (char*) buffer++;
                                        *_tmp_10717 = (ros->denm.location[0].lane_positions[0].elements[q].map_based[0].longitudinal_lane_position.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m009708\033[0m| Optional field longitudinal_lane_position = " << *_tmp_10717;
                                        
                                        if(ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference.size() != 0) {
                                            // Field:  type(MapReference) name(map_reference) extGroup(0)
                                            // Choice
                                               // #0  roadsegment   RoadSegmentReferenceId
                                               // #1  intersection   IntersectionReferenceId
                                            uint8_t* _choice_320 = (uint8_t*) buffer;
                                            buffer++;
                                            
                                            if(ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].roadsegment.size() != 0) {  // CHOICE 0  fieldType(MapReference) 
                                                *_choice_320 = 0;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m009709\033[0m| Choice selection: 0";
                                            
                                                    // RoadSegmentReferenceId  SEQUENCE
                                                        //  region     Identifier2B   OPTIONAL  
                                                        //  id         Identifier2B     
                                                    // Optional fields bytemap
                                                    char* _tmp_10718 = (char*) buffer++;
                                                    *_tmp_10718 = (ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].roadsegment[0].region.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m009710\033[0m| Optional field region = " << *_tmp_10718;
                                                    
                                                    if(ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].roadsegment[0].region.size() != 0) {
                                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                                        // Integer
                                                        
                                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                        if(debug) {
                                                            logger->debug() << "|\033[38;5;94m009711\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].roadsegment[0].region[0].value) << 
                                                                         " denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].roadsegment[0].region[0].value: " << ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].roadsegment[0].region[0].value;
                                                        }
                                                        
                                                        uint16_t* _tmp_10719 = (uint16_t*) buffer; buffer += 2;
                                                        *_tmp_10719 = ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].roadsegment[0].region[0].value; 
                                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].roadsegment[0].region[0].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m009712\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].roadsegment[0].id.value) << 
                                                                     " denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].roadsegment[0].id.value: " << ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].roadsegment[0].id.value;
                                                    }
                                                    
                                                    uint16_t* _tmp_10720 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_10720 = ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].roadsegment[0].id.value; 
                                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].roadsegment[0].id.value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                        return -1;
                                                    }
                                            
                                            }
                                            else if(ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].intersection.size() != 0)  // CHOICE 1  fieldType(MapReference) 
                                            {
                                                *_choice_320 = 1;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m009713\033[0m| Choice selection: 1";
                                            
                                                    // IntersectionReferenceId  SEQUENCE
                                                        //  region     Identifier2B   OPTIONAL  
                                                        //  id         Identifier2B     
                                                    // Optional fields bytemap
                                                    char* _tmp_10721 = (char*) buffer++;
                                                    *_tmp_10721 = (ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].intersection[0].region.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m009714\033[0m| Optional field region = " << *_tmp_10721;
                                                    
                                                    if(ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].intersection[0].region.size() != 0) {
                                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                                        // Integer
                                                        
                                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                        if(debug) {
                                                            logger->debug() << "|\033[38;5;94m009715\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].intersection[0].region[0].value) << 
                                                                         " denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].intersection[0].region[0].value: " << ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].intersection[0].region[0].value;
                                                        }
                                                        
                                                        uint16_t* _tmp_10722 = (uint16_t*) buffer; buffer += 2;
                                                        *_tmp_10722 = ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].intersection[0].region[0].value; 
                                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].intersection[0].region[0].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m009716\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].intersection[0].id.value) << 
                                                                     " denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].intersection[0].id.value: " << ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].intersection[0].id.value;
                                                    }
                                                    
                                                    uint16_t* _tmp_10723 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_10723 = ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].intersection[0].id.value; 
                                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].intersection[0].id.value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                        return -1;
                                                    }
                                            
                                            }
                                            else
                                            {
                                                logger->warning() << "Wrong option (" << static_cast<int>(*_choice_320) << ") selected in CHOICE MapReference in 'denm.location[0].lane_positions[0].elements[q].map_based[0].map_reference[0]'; message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.location[0].lane_positions[0].elements[q].map_based[0].lane_id.size() != 0) {
                                            // Field:  type(Identifier1B) name(lane_id) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009717\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].map_based[0].lane_id[0].value) << 
                                                             " denm.location[0].lane_positions[0].elements[q].map_based[0].lane_id[0].value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[q].map_based[0].lane_id[0].value);
                                            }
                                            
                                            uint8_t* _tmp_10724 = (uint8_t*) buffer++;
                                            *_tmp_10724 = ros->denm.location[0].lane_positions[0].elements[q].map_based[0].lane_id[0].value; 
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].map_based[0].lane_id[0].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].map_based[0].lane_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].map_based[0].lane_id[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.location[0].lane_positions[0].elements[q].map_based[0].connection_id.size() != 0) {
                                            // Field:  type(Identifier1B) name(connection_id) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009718\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].map_based[0].connection_id[0].value) << 
                                                             " denm.location[0].lane_positions[0].elements[q].map_based[0].connection_id[0].value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[q].map_based[0].connection_id[0].value);
                                            }
                                            
                                            uint8_t* _tmp_10725 = (uint8_t*) buffer++;
                                            *_tmp_10725 = ros->denm.location[0].lane_positions[0].elements[q].map_based[0].connection_id[0].value; 
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].map_based[0].connection_id[0].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].map_based[0].connection_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].map_based[0].connection_id[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.location[0].lane_positions[0].elements[q].map_based[0].longitudinal_lane_position.size() != 0) {
                                            // Field:  type(LongitudinalLanePosition) name(longitudinal_lane_position) extGroup(0)
                                                // LongitudinalLanePosition  SEQUENCE
                                                    //  longitudinalLanePositionValue      LongitudinalLanePositionValue          
                                                    //  longitudinalLanePositionConfidence LongitudinalLanePositionConfidence     
                                                // Optional fields bytemap
                                                
                                                // Field:  type(LongitudinalLanePositionValue) name(longitudinal_lane_position_value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(32767) span(32768) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m009719\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value) << 
                                                                 " denm.location[0].lane_positions[0].elements[q].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value: " << ros->denm.location[0].lane_positions[0].elements[q].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                                }
                                                
                                                float _tmp_10727 = ros->denm.location[0].lane_positions[0].elements[q].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                                _tmp_10727 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_10727);
                                                uint16_t* _tmp_10726 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_10726 = static_cast<uint16_t>(_tmp_10727);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(LongitudinalLanePositionConfidence) name(longitudinal_lane_position_confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(1023) span(1024) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m009720\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value) << 
                                                                 " denm.location[0].lane_positions[0].elements[q].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value: " << ros->denm.location[0].lane_positions[0].elements[q].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                                }
                                                
                                                float _tmp_10729 = ros->denm.location[0].lane_positions[0].elements[q].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                                _tmp_10729 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_10729);
                                                uint16_t* _tmp_10728 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_10728 = static_cast<uint16_t>(_tmp_10729);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 1023) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' (" << __aux64__ << ") exceeds max allowable (1023); message dropped.";
                                                    return -1;
                                                }
                                        }
                                        
                                        if(*_ext_flag_5010) {
                                        }
                                }
                                
                                // Field:  type(MetaInformation) name(confidence) extGroup(0)
                                    // MetaInformation  SEQUENCE
                                        //  usedDetectionInformation SensorTypes               
                                        //  usedStoredInformation    StoredInformationType     
                                        //  confidenceValue          ConfidenceLevel         OPTIONAL  
                                        //  ...
                                    uint8_t* _ext_flag_5020 = (uint8_t*) buffer++;  // Write extension flag for MetaInformation
                                    *_ext_flag_5020 = 0;  
                                    
                                    // Optional fields bytemap
                                    char* _tmp_10731 = (char*) buffer++;
                                    *_tmp_10731 = (ros->denm.location[0].lane_positions[0].elements[q].confidence.confidence_value.size() != 0 ? 1 : 0);
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009721\033[0m| Optional field confidence_value = " << *_tmp_10731;
                                    
                                    // Field:  type(SensorTypes) name(used_detection_information) extGroup(0)
                                    // BitString
                                    // BIT_STRING  min(16) max(16) span(1)
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009722\033[0m| denm.location[0].lane_positions[0].elements[q].confidence.used_detection_information.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[q].confidence.used_detection_information.values.size());
                                    
                                    if(ros->denm.location[0].lane_positions[0].elements[q].confidence.used_detection_information.values.size() < 16) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].confidence.used_detection_information.value' " << (ros->denm.location[0].lane_positions[0].elements[q].confidence.used_detection_information.values.size()) << " is less than allowable (16); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.location[0].lane_positions[0].elements[q].confidence.used_detection_information.values.size() > 16) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].confidence.used_detection_information.value' " << (ros->denm.location[0].lane_positions[0].elements[q].confidence.used_detection_information.values.size()) << " exceeds max allowable (16); message dropped.";
                                        return -1;
                                    }
                                    
                                    uint8_t* _ext_flag_5021 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].lane_positions[0].elements[q].confidence.used_detection_information.
                                    *_ext_flag_5021 = 0; 
                                    
                                    uint8_t* _tmp_10732 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].confidence.used_detection_information.values.size();
                                    if(__aux64__ > 16) __aux64__ = 16;
                                    *_tmp_10732 = __aux64__ - 16;
                                    buffer += 1;
                                    
                                    int __ifr = __aux64__;
                                    for(int r = 0; r < __ifr; r++) {
                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                        *__b__ = (ros->denm.location[0].lane_positions[0].elements[q].confidence.used_detection_information.values[r]? 1: 0);
                                    }
                                    
                                    // Field:  type(StoredInformationType) name(used_stored_information) extGroup(0)
                                    // BitString
                                    // BIT_STRING  min(1) max(168) span(168)
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009723\033[0m| denm.location[0].lane_positions[0].elements[q].confidence.used_stored_information.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[q].confidence.used_stored_information.values.size());
                                    
                                    if(ros->denm.location[0].lane_positions[0].elements[q].confidence.used_stored_information.values.size() < 1) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].confidence.used_stored_information.value' " << (ros->denm.location[0].lane_positions[0].elements[q].confidence.used_stored_information.values.size()) << " is less than allowable (1); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.location[0].lane_positions[0].elements[q].confidence.used_stored_information.values.size() > 168) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].confidence.used_stored_information.value' " << (ros->denm.location[0].lane_positions[0].elements[q].confidence.used_stored_information.values.size()) << " exceeds max allowable (168); message dropped.";
                                        return -1;
                                    }
                                    
                                    uint8_t* _ext_flag_5022 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].lane_positions[0].elements[q].confidence.used_stored_information.
                                    *_ext_flag_5022 = 0; 
                                    
                                    uint8_t* _tmp_10733 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].confidence.used_stored_information.values.size();
                                    if(__aux64__ > 168) __aux64__ = 168;
                                    *_tmp_10733 = __aux64__ - 1;
                                    buffer += 1;
                                    
                                    int __ifs = __aux64__;
                                    for(int s = 0; s < __ifs; s++) {
                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                        *__b__ = (ros->denm.location[0].lane_positions[0].elements[q].confidence.used_stored_information.values[s]? 1: 0);
                                    }
                                    
                                    if(ros->denm.location[0].lane_positions[0].elements[q].confidence.confidence_value.size() != 0) {
                                        // Field:  type(ConfidenceLevel) name(confidence_value) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(1) max(101) span(101) dataType(UInt8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009724\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[q].confidence.confidence_value[0].value) << 
                                                         " denm.location[0].lane_positions[0].elements[q].confidence.confidence_value[0].value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[q].confidence.confidence_value[0].value);
                                        }
                                        
                                        uint8_t* _tmp_10734 = (uint8_t*) buffer++;
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].confidence.confidence_value[0].value - 1;
                                        *_tmp_10734 = __aux64__;
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[q].confidence.confidence_value[0].value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].confidence.confidence_value[0].value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 101) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[q].confidence.confidence_value[0].value' (" << __aux64__ << ") exceeds max allowable (101); message dropped.";
                                            return -1;
                                        }
                                    }
                                    
                                    if(*_ext_flag_5020) {
                                    }
                                
                                if(*_ext_flag_4987) {
                                }
                        }
                    }
                    
                    if(ros->denm.location[0].occupied_lanes.size() != 0) {
                        // Field:  type(OccupiedLanesWithConfidence) name(occupied_lanes) extGroup(1)
                            // OccupiedLanesWithConfidence  SEQUENCE
                                //  lanePositionBased OccupiedLanesWithConfidence_lanePositionBased     
                                //  mapBased          OccupiedLanesWithConfidence_mapBased            OPTIONAL  
                                //  confidence        MetaInformation                                   
                                //  ...
                            uint8_t* _ext_flag_5024 = (uint8_t*) buffer++;  // Write extension flag for OccupiedLanesWithConfidence
                            *_ext_flag_5024 = 0;  
                            
                            // Optional fields bytemap
                            char* _tmp_10737 = (char*) buffer++;
                            *_tmp_10737 = (ros->denm.location[0].occupied_lanes[0].map_based.size() != 0 ? 1 : 0);
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009725\033[0m| Optional field map_based = " << *_tmp_10737;
                            
                            // Field:  type(OccupiedLanesWithConfidence_lanePositionBased) name(lane_position_based) extGroup(0)
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(4) span(4) ext(false)
                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements.size();
                            if(__aux64__ > 4) __aux64__ = 4;
                            uint16_t* _tmp_10738 = (uint16_t*)buffer;
                            buffer += 2;
                            *_tmp_10738 = __aux64__ - 1;
                            
                            int __ift = __aux64__;
                            for(int t = 0; t < __ift; t++) { 
                                
                                // Choice
                                   // #0  simplelanePosition   LanePosition
                                   // #1  simpleLaneType   LaneType
                                   // #2  detailedlanePosition   LanePositionAndType
                                   // #3  lanePositionWithLateralDetails   LanePositionWithLateralDetails
                                   // #4  trafficIslandPosition   TrafficIslandPosition
                                uint8_t* _ext_flag_5025 = (uint8_t*) buffer; 
                                buffer++;
                                *_ext_flag_5025 = 0; 
                                
                                uint8_t* _choice_321 = (uint8_t*) buffer;
                                buffer++;
                                
                                if(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].simplelane_position.size() != 0) {  // CHOICE 0  fieldType(LanePositionOptions) 
                                    *_choice_321 = 0;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009727\033[0m| Choice selection: 0";
                                
                                    // Integer
                                    
                                    // INT8  min(-1) max(14) span(16) dataType(Int8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009728\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].simplelane_position[0].value) << 
                                                     " denm.location[0].occupied_lanes[0].lane_position_based.elements[t].simplelane_position[0].value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].simplelane_position[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10739 = (uint8_t*) buffer++;
                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].simplelane_position[0].value - -1;
                                    *_tmp_10739 = __aux64__;
                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].simplelane_position[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].simplelane_position[0].value' (" << __aux64__ << ") less than (-1); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].simplelane_position[0].value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].simple_lane_type.size() != 0)  // CHOICE 1  fieldType(LanePositionOptions) 
                                {
                                    *_choice_321 = 1;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009729\033[0m| Choice selection: 1";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009730\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].simple_lane_type[0].value) << 
                                                     " denm.location[0].occupied_lanes[0].lane_position_based.elements[t].simple_lane_type[0].value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].simple_lane_type[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10740 = (uint8_t*) buffer++;
                                    *_tmp_10740 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].simple_lane_type[0].value; 
                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].simple_lane_type[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].simple_lane_type[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].simple_lane_type[0].value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position.size() != 0)  // CHOICE 2  fieldType(LanePositionOptions) 
                                {
                                    *_choice_321 = 2;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009731\033[0m| Choice selection: 2";
                                
                                        // LanePositionAndType  SEQUENCE
                                            //  transversalPosition LanePosition     
                                            //  laneType            LaneType         
                                            //  direction           Direction        
                                            //  ...
                                        uint8_t* _ext_flag_5028 = (uint8_t*) buffer++;  // Write extension flag for LanePositionAndType
                                        *_ext_flag_5028 = 0;  
                                        
                                        // Optional fields bytemap
                                        
                                        // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                        // Integer
                                        
                                        // INT8  min(-1) max(14) span(16) dataType(Int8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009732\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position[0].transversal_position.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position[0].transversal_position.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position[0].transversal_position.value);
                                        }
                                        
                                        uint8_t* _tmp_10741 = (uint8_t*) buffer++;
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position[0].transversal_position.value - -1;
                                        *_tmp_10741 = __aux64__;
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position[0].transversal_position.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position[0].transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position[0].transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(LaneType) name(lane_type) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009733\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position[0].lane_type.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position[0].lane_type.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position[0].lane_type.value);
                                        }
                                        
                                        uint8_t* _tmp_10742 = (uint8_t*) buffer++;
                                        *_tmp_10742 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position[0].lane_type.value; 
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position[0].lane_type.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position[0].lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position[0].lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(Direction) name(direction) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009734\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position[0].direction.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position[0].direction.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position[0].direction.value);
                                        }
                                        
                                        uint8_t* _tmp_10743 = (uint8_t*) buffer++;
                                        *_tmp_10743 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position[0].direction.value; 
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position[0].direction.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position[0].direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].detailedlane_position[0].direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                            return -1;
                                        }
                                        
                                        if(*_ext_flag_5028) {
                                        }
                                
                                }
                                else if(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details.size() != 0)  // CHOICE 3  fieldType(LanePositionOptions) 
                                {
                                    *_choice_321 = 3;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009735\033[0m| Choice selection: 3";
                                
                                        // LanePositionWithLateralDetails  SEQUENCE
                                            //  transversalPosition   LanePosition         
                                            //  laneType              LaneType             
                                            //  direction             Direction            
                                            //  distanceToLeftBorder  StandardLength9b     
                                            //  distanceToRightBorder StandardLength9b     
                                            //  ...
                                        uint8_t* _ext_flag_5032 = (uint8_t*) buffer++;  // Write extension flag for LanePositionWithLateralDetails
                                        *_ext_flag_5032 = 0;  
                                        
                                        // Optional fields bytemap
                                        
                                        // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                        // Integer
                                        
                                        // INT8  min(-1) max(14) span(16) dataType(Int8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009736\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].transversal_position.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].transversal_position.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].transversal_position.value);
                                        }
                                        
                                        uint8_t* _tmp_10745 = (uint8_t*) buffer++;
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].transversal_position.value - -1;
                                        *_tmp_10745 = __aux64__;
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].transversal_position.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(LaneType) name(lane_type) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009737\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].lane_type.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].lane_type.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].lane_type.value);
                                        }
                                        
                                        uint8_t* _tmp_10746 = (uint8_t*) buffer++;
                                        *_tmp_10746 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].lane_type.value; 
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].lane_type.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(Direction) name(direction) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009738\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].direction.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].direction.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].direction.value);
                                        }
                                        
                                        uint8_t* _tmp_10747 = (uint8_t*) buffer++;
                                        *_tmp_10747 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].direction.value; 
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].direction.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(StandardLength9b) name(distance_to_left_border) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009739\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].distance_to_left_border.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].distance_to_left_border.value: " << ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].distance_to_left_border.value;
                                        }
                                        
                                        float _tmp_10749 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].distance_to_left_border.value;
                                        _tmp_10749 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_10749);
                                        uint16_t* _tmp_10748 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_10748 = static_cast<uint16_t>(_tmp_10749);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].distance_to_left_border.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 511) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].distance_to_left_border.value' (" << __aux64__ << ") exceeds max allowable (511); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(StandardLength9b) name(distance_to_right_border) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009740\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].distance_to_right_border.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].distance_to_right_border.value: " << ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].distance_to_right_border.value;
                                        }
                                        
                                        float _tmp_10751 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].distance_to_right_border.value;
                                        _tmp_10751 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_10751);
                                        uint16_t* _tmp_10750 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_10750 = static_cast<uint16_t>(_tmp_10751);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].distance_to_right_border.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 511) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].lane_position_with_lateral_details[0].distance_to_right_border.value' (" << __aux64__ << ") exceeds max allowable (511); message dropped.";
                                            return -1;
                                        }
                                        
                                        if(*_ext_flag_5032) {
                                        }
                                
                                }
                                else if(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position.size() != 0)  // CHOICE 4  fieldType(LanePositionOptions) 
                                {
                                    *_choice_321 = 4;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009741\033[0m| Choice selection: 4";
                                
                                        // TrafficIslandPosition  SEQUENCE
                                            //  oneSide    LanePositionAndType     
                                            //  otherSide  LanePositionAndType     
                                            //  ...
                                        uint8_t* _ext_flag_5038 = (uint8_t*) buffer++;  // Write extension flag for TrafficIslandPosition
                                        *_ext_flag_5038 = 0;  
                                        
                                        // Optional fields bytemap
                                        
                                        // Field:  type(LanePositionAndType) name(one_side) extGroup(0)
                                            // LanePositionAndType  SEQUENCE
                                                //  transversalPosition LanePosition     
                                                //  laneType            LaneType         
                                                //  direction           Direction        
                                                //  ...
                                            uint8_t* _ext_flag_5039 = (uint8_t*) buffer++;  // Write extension flag for LanePositionAndType
                                            *_ext_flag_5039 = 0;  
                                            
                                            // Optional fields bytemap
                                            
                                            // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                            // Integer
                                            
                                            // INT8  min(-1) max(14) span(16) dataType(Int8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009742\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].one_side.transversal_position.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].one_side.transversal_position.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].one_side.transversal_position.value);
                                            }
                                            
                                            uint8_t* _tmp_10753 = (uint8_t*) buffer++;
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].one_side.transversal_position.value - -1;
                                            *_tmp_10753 = __aux64__;
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].one_side.transversal_position.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].one_side.transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].one_side.transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(LaneType) name(lane_type) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009743\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].one_side.lane_type.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].one_side.lane_type.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].one_side.lane_type.value);
                                            }
                                            
                                            uint8_t* _tmp_10754 = (uint8_t*) buffer++;
                                            *_tmp_10754 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].one_side.lane_type.value; 
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].one_side.lane_type.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].one_side.lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].one_side.lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(Direction) name(direction) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009744\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].one_side.direction.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].one_side.direction.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].one_side.direction.value);
                                            }
                                            
                                            uint8_t* _tmp_10755 = (uint8_t*) buffer++;
                                            *_tmp_10755 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].one_side.direction.value; 
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].one_side.direction.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].one_side.direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].one_side.direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                                return -1;
                                            }
                                            
                                            if(*_ext_flag_5039) {
                                            }
                                        
                                        // Field:  type(LanePositionAndType) name(other_side) extGroup(0)
                                            // LanePositionAndType  SEQUENCE
                                                //  transversalPosition LanePosition     
                                                //  laneType            LaneType         
                                                //  direction           Direction        
                                                //  ...
                                            uint8_t* _ext_flag_5043 = (uint8_t*) buffer++;  // Write extension flag for LanePositionAndType
                                            *_ext_flag_5043 = 0;  
                                            
                                            // Optional fields bytemap
                                            
                                            // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                            // Integer
                                            
                                            // INT8  min(-1) max(14) span(16) dataType(Int8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009745\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].other_side.transversal_position.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].other_side.transversal_position.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].other_side.transversal_position.value);
                                            }
                                            
                                            uint8_t* _tmp_10757 = (uint8_t*) buffer++;
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].other_side.transversal_position.value - -1;
                                            *_tmp_10757 = __aux64__;
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].other_side.transversal_position.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].other_side.transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].other_side.transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(LaneType) name(lane_type) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009746\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].other_side.lane_type.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].other_side.lane_type.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].other_side.lane_type.value);
                                            }
                                            
                                            uint8_t* _tmp_10758 = (uint8_t*) buffer++;
                                            *_tmp_10758 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].other_side.lane_type.value; 
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].other_side.lane_type.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].other_side.lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].other_side.lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(Direction) name(direction) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009747\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].other_side.direction.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].other_side.direction.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].other_side.direction.value);
                                            }
                                            
                                            uint8_t* _tmp_10759 = (uint8_t*) buffer++;
                                            *_tmp_10759 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].other_side.direction.value; 
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].other_side.direction.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].other_side.direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t].traffic_island_position[0].other_side.direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                                return -1;
                                            }
                                            
                                            if(*_ext_flag_5043) {
                                            }
                                        
                                        if(*_ext_flag_5038) {
                                        }
                                
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(*_choice_321) << ") selected in CHOICE LanePositionOptions in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[t]'; message dropped.";
                                    return -1;
                                }
                            }
                            
                            if(ros->denm.location[0].occupied_lanes[0].map_based.size() != 0) {
                                // Field:  type(OccupiedLanesWithConfidence_mapBased) name(map_based) extGroup(0)
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(4) span(4) ext(false)
                                __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements.size();
                                if(__aux64__ > 4) __aux64__ = 4;
                                uint16_t* _tmp_10762 = (uint16_t*)buffer;
                                buffer += 2;
                                *_tmp_10762 = __aux64__ - 1;
                                
                                int __ifu = __aux64__;
                                for(int u = 0; u < __ifu; u++) { 
                                    
                                        // MapPosition  SEQUENCE
                                            //  mapReference             MapReference               OPTIONAL  
                                            //  laneId                   Identifier1B               OPTIONAL  
                                            //  connectionId             Identifier1B               OPTIONAL  
                                            //  longitudinalLanePosition LongitudinalLanePosition   OPTIONAL  
                                            //  ...
                                        uint8_t* _ext_flag_5047 = (uint8_t*) buffer++;  // Write extension flag for MapPosition
                                        *_ext_flag_5047 = 0;  
                                        
                                        // Optional fields bytemap
                                        char* _tmp_10763 = (char*) buffer++;
                                        *_tmp_10763 = (ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m009749\033[0m| Optional field map_reference = " << *_tmp_10763;
                                        char* _tmp_10764 = (char*) buffer++;
                                        *_tmp_10764 = (ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].lane_id.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m009750\033[0m| Optional field lane_id = " << *_tmp_10764;
                                        char* _tmp_10765 = (char*) buffer++;
                                        *_tmp_10765 = (ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].connection_id.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m009751\033[0m| Optional field connection_id = " << *_tmp_10765;
                                        char* _tmp_10766 = (char*) buffer++;
                                        *_tmp_10766 = (ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].longitudinal_lane_position.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m009752\033[0m| Optional field longitudinal_lane_position = " << *_tmp_10766;
                                        
                                        if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference.size() != 0) {
                                            // Field:  type(MapReference) name(map_reference) extGroup(0)
                                            // Choice
                                               // #0  roadsegment   RoadSegmentReferenceId
                                               // #1  intersection   IntersectionReferenceId
                                            uint8_t* _choice_322 = (uint8_t*) buffer;
                                            buffer++;
                                            
                                            if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].roadsegment.size() != 0) {  // CHOICE 0  fieldType(MapReference) 
                                                *_choice_322 = 0;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m009753\033[0m| Choice selection: 0";
                                            
                                                    // RoadSegmentReferenceId  SEQUENCE
                                                        //  region     Identifier2B   OPTIONAL  
                                                        //  id         Identifier2B     
                                                    // Optional fields bytemap
                                                    char* _tmp_10767 = (char*) buffer++;
                                                    *_tmp_10767 = (ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].roadsegment[0].region.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m009754\033[0m| Optional field region = " << *_tmp_10767;
                                                    
                                                    if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].roadsegment[0].region.size() != 0) {
                                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                                        // Integer
                                                        
                                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                        if(debug) {
                                                            logger->debug() << "|\033[38;5;94m009755\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].roadsegment[0].region[0].value) << 
                                                                         " denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].roadsegment[0].region[0].value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].roadsegment[0].region[0].value;
                                                        }
                                                        
                                                        uint16_t* _tmp_10768 = (uint16_t*) buffer; buffer += 2;
                                                        *_tmp_10768 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].roadsegment[0].region[0].value; 
                                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].roadsegment[0].region[0].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m009756\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].roadsegment[0].id.value) << 
                                                                     " denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].roadsegment[0].id.value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].roadsegment[0].id.value;
                                                    }
                                                    
                                                    uint16_t* _tmp_10769 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_10769 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].roadsegment[0].id.value; 
                                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].roadsegment[0].id.value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                        return -1;
                                                    }
                                            
                                            }
                                            else if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].intersection.size() != 0)  // CHOICE 1  fieldType(MapReference) 
                                            {
                                                *_choice_322 = 1;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m009757\033[0m| Choice selection: 1";
                                            
                                                    // IntersectionReferenceId  SEQUENCE
                                                        //  region     Identifier2B   OPTIONAL  
                                                        //  id         Identifier2B     
                                                    // Optional fields bytemap
                                                    char* _tmp_10770 = (char*) buffer++;
                                                    *_tmp_10770 = (ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].intersection[0].region.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m009758\033[0m| Optional field region = " << *_tmp_10770;
                                                    
                                                    if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].intersection[0].region.size() != 0) {
                                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                                        // Integer
                                                        
                                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                        if(debug) {
                                                            logger->debug() << "|\033[38;5;94m009759\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].intersection[0].region[0].value) << 
                                                                         " denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].intersection[0].region[0].value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].intersection[0].region[0].value;
                                                        }
                                                        
                                                        uint16_t* _tmp_10771 = (uint16_t*) buffer; buffer += 2;
                                                        *_tmp_10771 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].intersection[0].region[0].value; 
                                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].intersection[0].region[0].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m009760\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].intersection[0].id.value) << 
                                                                     " denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].intersection[0].id.value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].intersection[0].id.value;
                                                    }
                                                    
                                                    uint16_t* _tmp_10772 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_10772 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].intersection[0].id.value; 
                                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].intersection[0].id.value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                        return -1;
                                                    }
                                            
                                            }
                                            else
                                            {
                                                logger->warning() << "Wrong option (" << static_cast<int>(*_choice_322) << ") selected in CHOICE MapReference in 'denm.location[0].occupied_lanes[0].map_based[0].elements[u].map_reference[0]'; message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].lane_id.size() != 0) {
                                            // Field:  type(Identifier1B) name(lane_id) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009761\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].lane_id[0].value) << 
                                                             " denm.location[0].occupied_lanes[0].map_based[0].elements[u].lane_id[0].value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].lane_id[0].value);
                                            }
                                            
                                            uint8_t* _tmp_10773 = (uint8_t*) buffer++;
                                            *_tmp_10773 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].lane_id[0].value; 
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].lane_id[0].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[u].lane_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[u].lane_id[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].connection_id.size() != 0) {
                                            // Field:  type(Identifier1B) name(connection_id) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009762\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].connection_id[0].value) << 
                                                             " denm.location[0].occupied_lanes[0].map_based[0].elements[u].connection_id[0].value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].connection_id[0].value);
                                            }
                                            
                                            uint8_t* _tmp_10774 = (uint8_t*) buffer++;
                                            *_tmp_10774 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].connection_id[0].value; 
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].connection_id[0].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[u].connection_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[u].connection_id[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].longitudinal_lane_position.size() != 0) {
                                            // Field:  type(LongitudinalLanePosition) name(longitudinal_lane_position) extGroup(0)
                                                // LongitudinalLanePosition  SEQUENCE
                                                    //  longitudinalLanePositionValue      LongitudinalLanePositionValue          
                                                    //  longitudinalLanePositionConfidence LongitudinalLanePositionConfidence     
                                                // Optional fields bytemap
                                                
                                                // Field:  type(LongitudinalLanePositionValue) name(longitudinal_lane_position_value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(32767) span(32768) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m009763\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].longitudinal_lane_position[0].longitudinal_lane_position_value.value) << 
                                                                 " denm.location[0].occupied_lanes[0].map_based[0].elements[u].longitudinal_lane_position[0].longitudinal_lane_position_value.value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                                }
                                                
                                                float _tmp_10776 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                                _tmp_10776 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_10776);
                                                uint16_t* _tmp_10775 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_10775 = static_cast<uint16_t>(_tmp_10776);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[u].longitudinal_lane_position[0].longitudinal_lane_position_value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[u].longitudinal_lane_position[0].longitudinal_lane_position_value.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(LongitudinalLanePositionConfidence) name(longitudinal_lane_position_confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(1023) span(1024) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m009764\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value) << 
                                                                 " denm.location[0].occupied_lanes[0].map_based[0].elements[u].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                                }
                                                
                                                float _tmp_10778 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[u].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                                _tmp_10778 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_10778);
                                                uint16_t* _tmp_10777 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_10777 = static_cast<uint16_t>(_tmp_10778);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[u].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 1023) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[u].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' (" << __aux64__ << ") exceeds max allowable (1023); message dropped.";
                                                    return -1;
                                                }
                                        }
                                        
                                        if(*_ext_flag_5047) {
                                        }
                                }
                            }
                            
                            // Field:  type(MetaInformation) name(confidence) extGroup(0)
                                // MetaInformation  SEQUENCE
                                    //  usedDetectionInformation SensorTypes               
                                    //  usedStoredInformation    StoredInformationType     
                                    //  confidenceValue          ConfidenceLevel         OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_5057 = (uint8_t*) buffer++;  // Write extension flag for MetaInformation
                                *_ext_flag_5057 = 0;  
                                
                                // Optional fields bytemap
                                char* _tmp_10780 = (char*) buffer++;
                                *_tmp_10780 = (ros->denm.location[0].occupied_lanes[0].confidence.confidence_value.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m009765\033[0m| Optional field confidence_value = " << *_tmp_10780;
                                
                                // Field:  type(SensorTypes) name(used_detection_information) extGroup(0)
                                // BitString
                                // BIT_STRING  min(16) max(16) span(1)
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m009766\033[0m| denm.location[0].occupied_lanes[0].confidence.used_detection_information.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values.size());
                                
                                if(ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values.size() < 16) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.used_detection_information.value' " << (ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values.size()) << " is less than allowable (16); message dropped.";
                                    return -1;
                                }
                                if(ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values.size() > 16) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.used_detection_information.value' " << (ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values.size()) << " exceeds max allowable (16); message dropped.";
                                    return -1;
                                }
                                
                                uint8_t* _ext_flag_5058 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.
                                *_ext_flag_5058 = 0; 
                                
                                uint8_t* _tmp_10781 = (uint8_t*)buffer;
                                __aux64__ = ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values.size();
                                if(__aux64__ > 16) __aux64__ = 16;
                                *_tmp_10781 = __aux64__ - 16;
                                buffer += 1;
                                
                                int __ifv = __aux64__;
                                for(int v = 0; v < __ifv; v++) {
                                    uint8_t* __b__ = (uint8_t*)buffer++;
                                    *__b__ = (ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values[v]? 1: 0);
                                }
                                
                                // Field:  type(StoredInformationType) name(used_stored_information) extGroup(0)
                                // BitString
                                // BIT_STRING  min(1) max(168) span(168)
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m009767\033[0m| denm.location[0].occupied_lanes[0].confidence.used_stored_information.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values.size());
                                
                                if(ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values.size() < 1) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.used_stored_information.value' " << (ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values.size()) << " is less than allowable (1); message dropped.";
                                    return -1;
                                }
                                if(ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values.size() > 168) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.used_stored_information.value' " << (ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values.size()) << " exceeds max allowable (168); message dropped.";
                                    return -1;
                                }
                                
                                uint8_t* _ext_flag_5059 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.
                                *_ext_flag_5059 = 0; 
                                
                                uint8_t* _tmp_10782 = (uint8_t*)buffer;
                                __aux64__ = ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values.size();
                                if(__aux64__ > 168) __aux64__ = 168;
                                *_tmp_10782 = __aux64__ - 1;
                                buffer += 1;
                                
                                int __ifw = __aux64__;
                                for(int w = 0; w < __ifw; w++) {
                                    uint8_t* __b__ = (uint8_t*)buffer++;
                                    *__b__ = (ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values[w]? 1: 0);
                                }
                                
                                if(ros->denm.location[0].occupied_lanes[0].confidence.confidence_value.size() != 0) {
                                    // Field:  type(ConfidenceLevel) name(confidence_value) extGroup(0)
                                    // Integer
                                    
                                    // UINT8  min(1) max(101) span(101) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009768\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value) << 
                                                     " denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10783 = (uint8_t*) buffer++;
                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value - 1;
                                    *_tmp_10783 = __aux64__;
                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value' (" << __aux64__ << ") less than (1); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 101) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value' (" << __aux64__ << ") exceeds max allowable (101); message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(*_ext_flag_5057) {
                                }
                            
                            if(*_ext_flag_5024) {
                            }
                    }
                    
                    if(ros->denm.location[0].linked_ivims.size() != 0) {
                        // Field:  type(IvimReferences) name(linked_ivims) extGroup(1)
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(8) span(8) ext(true)
                        uint8_t* _ext_flag_5061 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].linked_ivims[0].
                        *_ext_flag_5061 = 0; 
                        
                        __aux64__ = ros->denm.location[0].linked_ivims[0].elements.size();
                        if(__aux64__ > 8) __aux64__ = 8;
                        uint16_t* _tmp_10786 = (uint16_t*)buffer;
                        buffer += 2;
                        *_tmp_10786 = __aux64__ - 1;
                        
                        int __ifx = __aux64__;
                        for(int x = 0; x < __ifx; x++) { 
                            
                                // IvimReference  SEQUENCE
                                    //  serviceProviderId       Provider                    
                                    //  iviIdentificationNumber IviIdentificationNumber     
                                // Optional fields bytemap
                                
                                // Field:  type(Provider) name(service_provider_id) extGroup(0)
                                    // Provider  SEQUENCE
                                        //  countryCode        CountryCode          
                                        //  providerIdentifier IssuerIdentifier     
                                    // Optional fields bytemap
                                    
                                    // Field:  type(CountryCode) name(country_code) extGroup(0)
                                    // BitString
                                    // BIT_STRING  min(10) max(10) span(1)
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009770\033[0m| denm.location[0].linked_ivims[0].elements[x].service_provider_id.country_code.value: " << static_cast<int>(ros->denm.location[0].linked_ivims[0].elements[x].service_provider_id.country_code.values.size());
                                    
                                    if(ros->denm.location[0].linked_ivims[0].elements[x].service_provider_id.country_code.values.size() < 10) {
                                            logger->warning() << "Error: Value in 'denm.location[0].linked_ivims[0].elements[x].service_provider_id.country_code.value' " << (ros->denm.location[0].linked_ivims[0].elements[x].service_provider_id.country_code.values.size()) << " is less than allowable (10); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.location[0].linked_ivims[0].elements[x].service_provider_id.country_code.values.size() > 10) {
                                            logger->warning() << "Error: Value in 'denm.location[0].linked_ivims[0].elements[x].service_provider_id.country_code.value' " << (ros->denm.location[0].linked_ivims[0].elements[x].service_provider_id.country_code.values.size()) << " exceeds max allowable (10); message dropped.";
                                        return -1;
                                    }
                                    
                                    uint8_t* _tmp_10787 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.location[0].linked_ivims[0].elements[x].service_provider_id.country_code.values.size();
                                    if(__aux64__ > 10) __aux64__ = 10;
                                    *_tmp_10787 = __aux64__ - 10;
                                    buffer += 1;
                                    
                                    int __ify = __aux64__;
                                    for(int y = 0; y < __ify; y++) {
                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                        *__b__ = (ros->denm.location[0].linked_ivims[0].elements[x].service_provider_id.country_code.values[y]? 1: 0);
                                    }
                                    
                                    // Field:  type(IssuerIdentifier) name(provider_identifier) extGroup(0)
                                    // Integer
                                    
                                    // UINT16  min(0) max(16383) span(16384) dataType(UInt16)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009771\033[0m| " << tools::getTypeName(ros->denm.location[0].linked_ivims[0].elements[x].service_provider_id.provider_identifier.value) << 
                                                     " denm.location[0].linked_ivims[0].elements[x].service_provider_id.provider_identifier.value: " << ros->denm.location[0].linked_ivims[0].elements[x].service_provider_id.provider_identifier.value;
                                    }
                                    
                                    uint16_t* _tmp_10788 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_10788 = ros->denm.location[0].linked_ivims[0].elements[x].service_provider_id.provider_identifier.value; 
                                    __aux64__ = ros->denm.location[0].linked_ivims[0].elements[x].service_provider_id.provider_identifier.value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.location[0].linked_ivims[0].elements[x].service_provider_id.provider_identifier.value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 16383) {
                                        logger->warning() << "Error: Value in 'denm.location[0].linked_ivims[0].elements[x].service_provider_id.provider_identifier.value' (" << __aux64__ << ") exceeds max allowable (16383); message dropped.";
                                        return -1;
                                    }
                                
                                // Field:  type(IviIdentificationNumber) name(ivi_identification_number) extGroup(0)
                                // Integer
                                
                                // UINT16  min(1) max(32767) span(32767) dataType(UInt16)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m009772\033[0m| " << tools::getTypeName(ros->denm.location[0].linked_ivims[0].elements[x].ivi_identification_number.value) << 
                                                 " denm.location[0].linked_ivims[0].elements[x].ivi_identification_number.value: " << ros->denm.location[0].linked_ivims[0].elements[x].ivi_identification_number.value;
                                }
                                
                                uint8_t* _ext_flag_5063 = (uint8_t*) buffer++; // Extension flag for ros->denm.location[0].linked_ivims[0].elements[x].ivi_identification_number.
                                *_ext_flag_5063 = (ros->denm.location[0].linked_ivims[0].elements[x].ivi_identification_number.value >= 1 && ros->denm.location[0].linked_ivims[0].elements[x].ivi_identification_number.value <= 32767) ? 0 : 1;
                                
                                if(*_ext_flag_5063) {
                                    uint8_t* _tmp_10790 = (uint8_t*) buffer++; 
                                    if(ros->denm.location[0].linked_ivims[0].elements[x].ivi_identification_number.value >= 0 && ros->denm.location[0].linked_ivims[0].elements[x].ivi_identification_number.value <= INT32_MAX) {
                                        *_tmp_10790 = 0;
                                    
                                        uint32_t* _tmp_10789 = (uint32_t*)buffer; buffer += 4;
                                        __aux64__ = ros->denm.location[0].linked_ivims[0].elements[x].ivi_identification_number.value;
                                        __aux64__ -= INT32_MIN;
                                        *_tmp_10789 = __aux64__;
                                    } 
                                    else
                                    {
                                        *_tmp_10790 = 1;
                                    
                                        uint64_t* _tmp_10789 = (uint64_t*)buffer; buffer += 8;
                                        __aux64__ = ros->denm.location[0].linked_ivims[0].elements[x].ivi_identification_number.value;
                                        __aux64__ -= INT64_MIN;
                                        *_tmp_10789 = __aux64__;
                                    }
                                } else {
                                    uint16_t* _tmp_10789 = (uint16_t*) buffer; buffer += 2;
                                    __aux64__ = ros->denm.location[0].linked_ivims[0].elements[x].ivi_identification_number.value - 1;
                                    *_tmp_10789 = __aux64__;
                                    __aux64__ = ros->denm.location[0].linked_ivims[0].elements[x].ivi_identification_number.value;
                                }
                                
                        }
                    }
                    
                    if(ros->denm.location[0].linked_mapems.size() != 0) {
                        // Field:  type(MapReferences) name(linked_mapems) extGroup(1)
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(8) span(8) ext(true)
                        uint8_t* _ext_flag_5064 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].linked_mapems[0].
                        *_ext_flag_5064 = 0; 
                        
                        __aux64__ = ros->denm.location[0].linked_mapems[0].elements.size();
                        if(__aux64__ > 8) __aux64__ = 8;
                        uint16_t* _tmp_10791 = (uint16_t*)buffer;
                        buffer += 2;
                        *_tmp_10791 = __aux64__ - 1;
                        
                        int __ifz = __aux64__;
                        for(int z = 0; z < __ifz; z++) { 
                            
                            // Choice
                               // #0  roadsegment   RoadSegmentReferenceId
                               // #1  intersection   IntersectionReferenceId
                            uint8_t* _choice_323 = (uint8_t*) buffer;
                            buffer++;
                            
                            if(ros->denm.location[0].linked_mapems[0].elements[z].roadsegment.size() != 0) {  // CHOICE 0  fieldType(MapReference) 
                                *_choice_323 = 0;  // Setting choice selection
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m009774\033[0m| Choice selection: 0";
                            
                                    // RoadSegmentReferenceId  SEQUENCE
                                        //  region     Identifier2B   OPTIONAL  
                                        //  id         Identifier2B     
                                    // Optional fields bytemap
                                    char* _tmp_10792 = (char*) buffer++;
                                    *_tmp_10792 = (ros->denm.location[0].linked_mapems[0].elements[z].roadsegment[0].region.size() != 0 ? 1 : 0);
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009775\033[0m| Optional field region = " << *_tmp_10792;
                                    
                                    if(ros->denm.location[0].linked_mapems[0].elements[z].roadsegment[0].region.size() != 0) {
                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                        // Integer
                                        
                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009776\033[0m| " << tools::getTypeName(ros->denm.location[0].linked_mapems[0].elements[z].roadsegment[0].region[0].value) << 
                                                         " denm.location[0].linked_mapems[0].elements[z].roadsegment[0].region[0].value: " << ros->denm.location[0].linked_mapems[0].elements[z].roadsegment[0].region[0].value;
                                        }
                                        
                                        uint16_t* _tmp_10793 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_10793 = ros->denm.location[0].linked_mapems[0].elements[z].roadsegment[0].region[0].value; 
                                        __aux64__ = ros->denm.location[0].linked_mapems[0].elements[z].roadsegment[0].region[0].value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[z].roadsegment[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                            logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[z].roadsegment[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                            return -1;
                                        }
                                    }
                                    
                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                    // Integer
                                    
                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009777\033[0m| " << tools::getTypeName(ros->denm.location[0].linked_mapems[0].elements[z].roadsegment[0].id.value) << 
                                                     " denm.location[0].linked_mapems[0].elements[z].roadsegment[0].id.value: " << ros->denm.location[0].linked_mapems[0].elements[z].roadsegment[0].id.value;
                                    }
                                    
                                    uint16_t* _tmp_10794 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_10794 = ros->denm.location[0].linked_mapems[0].elements[z].roadsegment[0].id.value; 
                                    __aux64__ = ros->denm.location[0].linked_mapems[0].elements[z].roadsegment[0].id.value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[z].roadsegment[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[z].roadsegment[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                        return -1;
                                    }
                            
                            }
                            else if(ros->denm.location[0].linked_mapems[0].elements[z].intersection.size() != 0)  // CHOICE 1  fieldType(MapReference) 
                            {
                                *_choice_323 = 1;  // Setting choice selection
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m009778\033[0m| Choice selection: 1";
                            
                                    // IntersectionReferenceId  SEQUENCE
                                        //  region     Identifier2B   OPTIONAL  
                                        //  id         Identifier2B     
                                    // Optional fields bytemap
                                    char* _tmp_10795 = (char*) buffer++;
                                    *_tmp_10795 = (ros->denm.location[0].linked_mapems[0].elements[z].intersection[0].region.size() != 0 ? 1 : 0);
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009779\033[0m| Optional field region = " << *_tmp_10795;
                                    
                                    if(ros->denm.location[0].linked_mapems[0].elements[z].intersection[0].region.size() != 0) {
                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                        // Integer
                                        
                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009780\033[0m| " << tools::getTypeName(ros->denm.location[0].linked_mapems[0].elements[z].intersection[0].region[0].value) << 
                                                         " denm.location[0].linked_mapems[0].elements[z].intersection[0].region[0].value: " << ros->denm.location[0].linked_mapems[0].elements[z].intersection[0].region[0].value;
                                        }
                                        
                                        uint16_t* _tmp_10796 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_10796 = ros->denm.location[0].linked_mapems[0].elements[z].intersection[0].region[0].value; 
                                        __aux64__ = ros->denm.location[0].linked_mapems[0].elements[z].intersection[0].region[0].value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[z].intersection[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                            logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[z].intersection[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                            return -1;
                                        }
                                    }
                                    
                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                    // Integer
                                    
                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009781\033[0m| " << tools::getTypeName(ros->denm.location[0].linked_mapems[0].elements[z].intersection[0].id.value) << 
                                                     " denm.location[0].linked_mapems[0].elements[z].intersection[0].id.value: " << ros->denm.location[0].linked_mapems[0].elements[z].intersection[0].id.value;
                                    }
                                    
                                    uint16_t* _tmp_10797 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_10797 = ros->denm.location[0].linked_mapems[0].elements[z].intersection[0].id.value; 
                                    __aux64__ = ros->denm.location[0].linked_mapems[0].elements[z].intersection[0].id.value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[z].intersection[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[z].intersection[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                        return -1;
                                    }
                            
                            }
                            else
                            {
                                logger->warning() << "Wrong option (" << static_cast<int>(*_choice_323) << ") selected in CHOICE MapReference in 'denm.location[0].linked_mapems[0].elements[z]'; message dropped.";
                                return -1;
                            }
                        }
                    }
                    
                    if(ros->denm.location[0].detection_zones_to_specified_event_point.size() != 0) {
                        // Field:  type(TracesExtended) name(detection_zones_to_specified_event_point) extGroup(1)
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(7) span(7) ext(false)
                        __aux64__ = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements.size();
                        if(__aux64__ > 7) __aux64__ = 7;
                        uint16_t* _tmp_10798 = (uint16_t*)buffer;
                        buffer += 2;
                        *_tmp_10798 = __aux64__ - 1;
                        
                        int __ifa = __aux64__;
                        for(int a = 0; a < __ifa; a++) { 
                            
                                // PathExtended  SEQUENCE
                                    //  pointOfEventZone PathExtended_pointOfEventZone     
                                    //  path             Path                              
                                // Optional fields bytemap
                                
                                // Field:  type(PathExtended_pointOfEventZone) name(point_of_event_zone) extGroup(0)
                                // Integer
                                
                                // UINT8  min(1) max(23) span(23) dataType(UInt8)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m009783\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].point_of_event_zone.value) << 
                                                 " denm.location[0].detection_zones_to_specified_event_point[0].elements[a].point_of_event_zone.value: " << static_cast<int>(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].point_of_event_zone.value);
                                }
                                
                                uint8_t* _tmp_10799 = (uint8_t*) buffer++;
                                __aux64__ = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].point_of_event_zone.value - 1;
                                *_tmp_10799 = __aux64__;
                                __aux64__ = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].point_of_event_zone.value;
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[a].point_of_event_zone.value' (" << __aux64__ << ") less than (1); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 23) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[a].point_of_event_zone.value' (" << __aux64__ << ") exceeds max allowable (23); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(Path) name(path) extGroup(0)
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(0) max(40) span(41) ext(false)
                                __aux64__ = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements.size();
                                if(__aux64__ > 40) __aux64__ = 40;
                                uint16_t* _tmp_10800 = (uint16_t*)buffer;
                                buffer += 2;
                                *_tmp_10800 = __aux64__;
                                
                                int __ifb = __aux64__;
                                for(int b = 0; b < __ifb; b++) { 
                                    
                                        // PathPoint  SEQUENCE
                                            //  pathPosition  DeltaReferencePosition     
                                            //  pathDeltaTime PathDeltaTime            OPTIONAL  
                                        // Optional fields bytemap
                                        char* _tmp_10801 = (char*) buffer++;
                                        *_tmp_10801 = (ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_delta_time.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m009785\033[0m| Optional field path_delta_time = " << *_tmp_10801;
                                        
                                        // Field:  type(DeltaReferencePosition) name(path_position) extGroup(0)
                                            // DeltaReferencePosition  SEQUENCE
                                                //  deltaLatitude  DeltaLatitude      
                                                //  deltaLongitude DeltaLongitude     
                                                //  deltaAltitude  DeltaAltitude      
                                            // Optional fields bytemap
                                            
                                            // Field:  type(DeltaLatitude) name(delta_latitude) extGroup(0)
                                            // Real
                                            
                                            // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009786\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_position.delta_latitude.value) << 
                                                             " denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_position.delta_latitude.value: " << ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_position.delta_latitude.value;
                                            }
                                            
                                            double _tmp_10803 = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_position.delta_latitude.value;
                                            _tmp_10803 *= 1.0E7;
                                            __aux64__ = static_cast<uint64_t>(_tmp_10803);
                                            _tmp_10803 -= -131071;
                                            uint32_t* _tmp_10802 = (uint32_t*) buffer; buffer += 4;
                                            *_tmp_10802 = static_cast<uint32_t>(_tmp_10803);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                                logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_position.delta_latitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                                logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_position.delta_latitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(DeltaLongitude) name(delta_longitude) extGroup(0)
                                            // Real
                                            
                                            // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009787\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_position.delta_longitude.value) << 
                                                             " denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_position.delta_longitude.value: " << ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_position.delta_longitude.value;
                                            }
                                            
                                            double _tmp_10805 = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_position.delta_longitude.value;
                                            _tmp_10805 *= 1.0E7;
                                            __aux64__ = static_cast<uint64_t>(_tmp_10805);
                                            _tmp_10805 -= -131071;
                                            uint32_t* _tmp_10804 = (uint32_t*) buffer; buffer += 4;
                                            *_tmp_10804 = static_cast<uint32_t>(_tmp_10805);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                                logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_position.delta_longitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                                logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_position.delta_longitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(DeltaAltitude) name(delta_altitude) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(-12700) max(12800) span(25501) scaleDivisor(100.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009788\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_position.delta_altitude.value) << 
                                                             " denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_position.delta_altitude.value: " << ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_position.delta_altitude.value;
                                            }
                                            
                                            float _tmp_10807 = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_position.delta_altitude.value;
                                            _tmp_10807 *= 100.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_10807);
                                            _tmp_10807 -= -12700;
                                            uint16_t* _tmp_10806 = (uint16_t*) buffer; buffer += 2;
                                            *_tmp_10806 = static_cast<uint16_t>(_tmp_10807);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -12700) {
                                                logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_position.delta_altitude.value' (" << __aux64__ << ") less than (-12700); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 12800) {
                                                logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_position.delta_altitude.value' (" << __aux64__ << ") exceeds max allowable (12800); message dropped.";
                                                return -1;
                                            }
                                        
                                        if(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_delta_time.size() != 0) {
                                            // Field:  type(PathDeltaTime) name(path_delta_time) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(1) max(65535) span(65535) scaleDivisor(100.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009789\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_delta_time[0].value) << 
                                                             " denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_delta_time[0].value: " << ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_delta_time[0].value;
                                            }
                                            
                                            uint8_t* _ext_flag_5074 = (uint8_t*) buffer++; // Extension flag for ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_delta_time[0].
                                            float _tmp_10808 = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_delta_time[0].value;
                                            _tmp_10808 *= 100.0;
                                            __aux64__ = static_cast<int64_t>(_tmp_10808);
                                            *_ext_flag_5074 = (__aux64__ >= 1 && __aux64__ <= 65535) ? 0 : 1;
                                            
                                            if(*_ext_flag_5074) {
                                                uint8_t* _tmp_10809 = (uint8_t*) buffer++; 
                                            
                                                if(__aux64__ >= INT32_MIN && __aux64__ <= INT32_MAX) {
                                                    *_tmp_10809 = 0;
                                            
                                                    float _tmp_10811 = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_delta_time[0].value;
                                                    _tmp_10811 *= 100.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_10811);
                                                    _tmp_10811 -= INT32_MIN;
                                                    uint32_t* _tmp_10810 = (uint32_t*) buffer; buffer += 4;
                                                    *_tmp_10810 = static_cast<uint32_t>(_tmp_10811);
                                                }
                                                else
                                                {
                                                    *_tmp_10809 = 1;
                                            
                                                    float _tmp_10813 = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_delta_time[0].value;
                                                    _tmp_10813 *= 100.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_10813);
                                                    _tmp_10813 -= INT64_MIN;
                                                    uint32_t* _tmp_10812 = (uint32_t*) buffer; buffer += 4;
                                                    *_tmp_10812 = static_cast<uint32_t>(_tmp_10813);
                                                }
                                            }
                                            else
                                            {
                                                float _tmp_10815 = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[a].path.elements[b].path_delta_time[0].value;
                                                _tmp_10815 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_10815);
                                                _tmp_10815 -= 1;
                                                uint16_t* _tmp_10814 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_10814 = static_cast<uint16_t>(_tmp_10815);
                                            }
                                        }
                                        
                                }
                                
                        }
                    }
                    
                    if(ros->denm.location[0].predicted_paths.size() != 0) {
                        // Field:  type(PathPredictedList) name(predicted_paths) extGroup(1)
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(16) span(16) ext(true)
                        uint8_t* _ext_flag_5075 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].predicted_paths[0].
                        *_ext_flag_5075 = 0; 
                        
                        __aux64__ = ros->denm.location[0].predicted_paths[0].elements.size();
                        if(__aux64__ > 16) __aux64__ = 16;
                        uint16_t* _tmp_10816 = (uint16_t*)buffer;
                        buffer += 2;
                        *_tmp_10816 = __aux64__ - 1;
                        
                        int __ifc = __aux64__;
                        for(int c = 0; c < __ifc; c++) { 
                            
                                // PathPredicted2  SEQUENCE
                                    //  pathPredicted   PathPredicted       
                                    //  usageIndication UsageIndication     
                                    //  confidenceLevel ConfidenceLevel     
                                    //  ...
                                uint8_t* _ext_flag_5076 = (uint8_t*) buffer++;  // Write extension flag for PathPredicted2
                                *_ext_flag_5076 = 0;  
                                
                                // Optional fields bytemap
                                
                                // Field:  type(PathPredicted) name(path_predicted) extGroup(0)
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(16) span(16) ext(true)
                                uint8_t* _ext_flag_5077 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.
                                *_ext_flag_5077 = 0; 
                                
                                __aux64__ = ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements.size();
                                if(__aux64__ > 16) __aux64__ = 16;
                                uint16_t* _tmp_10817 = (uint16_t*)buffer;
                                buffer += 2;
                                *_tmp_10817 = __aux64__ - 1;
                                
                                int __ifd = __aux64__;
                                for(int d = 0; d < __ifd; d++) { 
                                    
                                        // PathPointPredicted  SEQUENCE
                                            //  deltaLatitude                DeltaLatitude            
                                            //  deltaLongitude               DeltaLongitude           
                                            //  horizontalPositionConfidence PosConfidenceEllipse   OPTIONAL  
                                            //  deltaAltitude                DeltaAltitude            
                                            //  altitudeConfidence           AltitudeConfidence       
                                            //  pathDeltaTime                PathDeltaTimeChoice      
                                            //  symmetricAreaOffset          StandardLength9b       OPTIONAL  
                                            //  asymmetricAreaOffset         StandardLength9b       OPTIONAL  
                                            //  ...
                                        uint8_t* _ext_flag_5078 = (uint8_t*) buffer++;  // Write extension flag for PathPointPredicted
                                        *_ext_flag_5078 = 0;  
                                        
                                        // Optional fields bytemap
                                        char* _tmp_10818 = (char*) buffer++;
                                        *_tmp_10818 = (ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].horizontal_position_confidence.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m009792\033[0m| Optional field horizontal_position_confidence = " << *_tmp_10818;
                                        char* _tmp_10819 = (char*) buffer++;
                                        *_tmp_10819 = (ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].symmetric_area_offset.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m009793\033[0m| Optional field symmetric_area_offset = " << *_tmp_10819;
                                        char* _tmp_10820 = (char*) buffer++;
                                        *_tmp_10820 = (ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].asymmetric_area_offset.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m009794\033[0m| Optional field asymmetric_area_offset = " << *_tmp_10820;
                                        
                                        // Field:  type(DeltaLatitude) name(delta_latitude) extGroup(0)
                                        // Real
                                        
                                        // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009795\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].delta_latitude.value) << 
                                                         " denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].delta_latitude.value: " << ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].delta_latitude.value;
                                        }
                                        
                                        double _tmp_10822 = ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].delta_latitude.value;
                                        _tmp_10822 *= 1.0E7;
                                        __aux64__ = static_cast<uint64_t>(_tmp_10822);
                                        _tmp_10822 -= -131071;
                                        uint32_t* _tmp_10821 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_10821 = static_cast<uint32_t>(_tmp_10822);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].delta_latitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].delta_latitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(DeltaLongitude) name(delta_longitude) extGroup(0)
                                        // Real
                                        
                                        // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009796\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].delta_longitude.value) << 
                                                         " denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].delta_longitude.value: " << ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].delta_longitude.value;
                                        }
                                        
                                        double _tmp_10824 = ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].delta_longitude.value;
                                        _tmp_10824 *= 1.0E7;
                                        __aux64__ = static_cast<uint64_t>(_tmp_10824);
                                        _tmp_10824 -= -131071;
                                        uint32_t* _tmp_10823 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_10823 = static_cast<uint32_t>(_tmp_10824);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].delta_longitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].delta_longitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                            return -1;
                                        }
                                        
                                        if(ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].horizontal_position_confidence.size() != 0) {
                                            // Field:  type(PosConfidenceEllipse) name(horizontal_position_confidence) extGroup(0)
                                                // PosConfidenceEllipse  SEQUENCE
                                                    //  semiMajorConfidence  SemiAxisLength     
                                                    //  semiMinorConfidence  SemiAxisLength     
                                                    //  semiMajorOrientation HeadingValue       
                                                // Optional fields bytemap
                                                
                                                // Field:  type(SemiAxisLength) name(semi_major_confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m009797\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].horizontal_position_confidence[0].semi_major_confidence.value) << 
                                                                 " denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].horizontal_position_confidence[0].semi_major_confidence.value: " << ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].horizontal_position_confidence[0].semi_major_confidence.value;
                                                }
                                                
                                                float _tmp_10826 = ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].horizontal_position_confidence[0].semi_major_confidence.value;
                                                _tmp_10826 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_10826);
                                                uint16_t* _tmp_10825 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_10825 = static_cast<uint16_t>(_tmp_10826);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].horizontal_position_confidence[0].semi_major_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].horizontal_position_confidence[0].semi_major_confidence.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(SemiAxisLength) name(semi_minor_confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m009798\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].horizontal_position_confidence[0].semi_minor_confidence.value) << 
                                                                 " denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].horizontal_position_confidence[0].semi_minor_confidence.value: " << ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].horizontal_position_confidence[0].semi_minor_confidence.value;
                                                }
                                                
                                                float _tmp_10828 = ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].horizontal_position_confidence[0].semi_minor_confidence.value;
                                                _tmp_10828 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_10828);
                                                uint16_t* _tmp_10827 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_10827 = static_cast<uint16_t>(_tmp_10828);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].horizontal_position_confidence[0].semi_minor_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].horizontal_position_confidence[0].semi_minor_confidence.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(HeadingValue) name(semi_major_orientation) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m009799\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].horizontal_position_confidence[0].semi_major_orientation.value) << 
                                                                 " denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].horizontal_position_confidence[0].semi_major_orientation.value: " << ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].horizontal_position_confidence[0].semi_major_orientation.value;
                                                }
                                                
                                                float _tmp_10830 = ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].horizontal_position_confidence[0].semi_major_orientation.value;
                                                _tmp_10830 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_10830);
                                                uint16_t* _tmp_10829 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_10829 = static_cast<uint16_t>(_tmp_10830);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].horizontal_position_confidence[0].semi_major_orientation.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].horizontal_position_confidence[0].semi_major_orientation.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                    return -1;
                                                }
                                        }
                                        
                                        // Field:  type(DeltaAltitude) name(delta_altitude) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(-12700) max(12800) span(25501) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009800\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].delta_altitude.value) << 
                                                         " denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].delta_altitude.value: " << ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].delta_altitude.value;
                                        }
                                        
                                        float _tmp_10832 = ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].delta_altitude.value;
                                        _tmp_10832 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_10832);
                                        _tmp_10832 -= -12700;
                                        uint16_t* _tmp_10831 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_10831 = static_cast<uint16_t>(_tmp_10832);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -12700) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].delta_altitude.value' (" << __aux64__ << ") less than (-12700); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 12800) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].delta_altitude.value' (" << __aux64__ << ") exceeds max allowable (12800); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(AltitudeConfidence) name(altitude_confidence) extGroup(0)
                                        // Enumerated
                                        // INT32  min(0) max(15) span(16) dataType(Int32)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009801\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].altitude_confidence.value) << 
                                                         " denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].altitude_confidence.value: " << static_cast<int>(ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].altitude_confidence.value);
                                        }
                                        
                                        uint8_t* _tmp_10833 = (uint8_t*)buffer;
                                        buffer += 1;
                                        *_tmp_10833 = ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].altitude_confidence.value; 
                                        __aux64__ = ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].altitude_confidence.value; 
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].altitude_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 15) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].altitude_confidence.value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(PathDeltaTimeChoice) name(path_delta_time) extGroup(0)
                                        // Choice
                                           // #0  deltaTimeHighPrecision   DeltaTimeTenthOfSecond
                                           // #1  deltaTimeBigRange   DeltaTimeTenSeconds
                                        uint8_t* _choice_324 = (uint8_t*) buffer;
                                        buffer++;
                                        
                                        if(ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].path_delta_time.delta_time_high_precision.size() != 0) {  // CHOICE 0  fieldType(PathDeltaTimeChoice) 
                                            *_choice_324 = 0;  // Setting choice selection
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m009802\033[0m| Choice selection: 0";
                                        
                                            // Real
                                            
                                            // FLOAT  min(0) max(127) span(128) scaleDivisor(10.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009803\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].path_delta_time.delta_time_high_precision[0].value) << 
                                                             " denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].path_delta_time.delta_time_high_precision[0].value: " << static_cast<int>(ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].path_delta_time.delta_time_high_precision[0].value);
                                            }
                                            
                                            float _tmp_10835 = ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].path_delta_time.delta_time_high_precision[0].value;
                                            _tmp_10835 *= 10.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_10835);
                                            uint8_t* _tmp_10834 = (uint8_t*) buffer; buffer += 1;
                                            *_tmp_10834 = static_cast<uint8_t>(_tmp_10835);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].path_delta_time.delta_time_high_precision[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].path_delta_time.delta_time_high_precision[0].value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                return -1;
                                            }
                                        
                                        }
                                        else if(ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].path_delta_time.delta_time_big_range.size() != 0)  // CHOICE 1  fieldType(PathDeltaTimeChoice) 
                                        {
                                            *_choice_324 = 1;  // Setting choice selection
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m009804\033[0m| Choice selection: 1";
                                        
                                            // Real
                                            
                                            // FLOAT  min(0) max(127) span(128) scaleDivisor(0.1) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009805\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].path_delta_time.delta_time_big_range[0].value) << 
                                                             " denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].path_delta_time.delta_time_big_range[0].value: " << static_cast<int>(ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].path_delta_time.delta_time_big_range[0].value);
                                            }
                                            
                                            float _tmp_10837 = ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].path_delta_time.delta_time_big_range[0].value;
                                            _tmp_10837 *= 0.1;
                                            __aux64__ = static_cast<uint64_t>(_tmp_10837);
                                            uint8_t* _tmp_10836 = (uint8_t*) buffer; buffer += 1;
                                            *_tmp_10836 = static_cast<uint8_t>(_tmp_10837);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].path_delta_time.delta_time_big_range[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].path_delta_time.delta_time_big_range[0].value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                return -1;
                                            }
                                        
                                        }
                                        else
                                        {
                                            logger->warning() << "Wrong option (" << static_cast<int>(*_choice_324) << ") selected in CHOICE PathDeltaTimeChoice in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].path_delta_time'; message dropped.";
                                            return -1;
                                        }
                                        
                                        if(ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].symmetric_area_offset.size() != 0) {
                                            // Field:  type(StandardLength9b) name(symmetric_area_offset) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009806\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].symmetric_area_offset[0].value) << 
                                                             " denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].symmetric_area_offset[0].value: " << ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].symmetric_area_offset[0].value;
                                            }
                                            
                                            float _tmp_10839 = ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].symmetric_area_offset[0].value;
                                            _tmp_10839 *= 10.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_10839);
                                            uint16_t* _tmp_10838 = (uint16_t*) buffer; buffer += 2;
                                            *_tmp_10838 = static_cast<uint16_t>(_tmp_10839);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].symmetric_area_offset[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 511) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].symmetric_area_offset[0].value' (" << __aux64__ << ") exceeds max allowable (511); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].asymmetric_area_offset.size() != 0) {
                                            // Field:  type(StandardLength9b) name(asymmetric_area_offset) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009807\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].asymmetric_area_offset[0].value) << 
                                                             " denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].asymmetric_area_offset[0].value: " << ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].asymmetric_area_offset[0].value;
                                            }
                                            
                                            float _tmp_10841 = ros->denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].asymmetric_area_offset[0].value;
                                            _tmp_10841 *= 10.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_10841);
                                            uint16_t* _tmp_10840 = (uint16_t*) buffer; buffer += 2;
                                            *_tmp_10840 = static_cast<uint16_t>(_tmp_10841);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].asymmetric_area_offset[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 511) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].path_predicted.elements[d].asymmetric_area_offset[0].value' (" << __aux64__ << ") exceeds max allowable (511); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(*_ext_flag_5078) {
                                        }
                                }
                                
                                // Field:  type(UsageIndication) name(usage_indication) extGroup(0)
                                // Enumerated
                                // INT32  min(0) max(2) span(3) dataType(Int32)
                                uint8_t* _ext_flag_5091 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].predicted_paths[0].elements[c].usage_indication.
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m009808\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[c].usage_indication.value) << 
                                                 " denm.location[0].predicted_paths[0].elements[c].usage_indication.value: " << static_cast<int>(ros->denm.location[0].predicted_paths[0].elements[c].usage_indication.value);
                                }
                                
                                uint8_t* _tmp_10843 = (uint8_t*)buffer;
                                buffer += 1;
                                *_tmp_10843 = ros->denm.location[0].predicted_paths[0].elements[c].usage_indication.value; 
                                __aux64__ = ros->denm.location[0].predicted_paths[0].elements[c].usage_indication.value; 
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].usage_indication.value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 2) {
                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].usage_indication.value' (" << __aux64__ << ") exceeds max allowable (2); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(ConfidenceLevel) name(confidence_level) extGroup(0)
                                // Integer
                                
                                // UINT8  min(1) max(101) span(101) dataType(UInt8)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m009809\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[c].confidence_level.value) << 
                                                 " denm.location[0].predicted_paths[0].elements[c].confidence_level.value: " << static_cast<int>(ros->denm.location[0].predicted_paths[0].elements[c].confidence_level.value);
                                }
                                
                                uint8_t* _tmp_10844 = (uint8_t*) buffer++;
                                __aux64__ = ros->denm.location[0].predicted_paths[0].elements[c].confidence_level.value - 1;
                                *_tmp_10844 = __aux64__;
                                __aux64__ = ros->denm.location[0].predicted_paths[0].elements[c].confidence_level.value;
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].confidence_level.value' (" << __aux64__ << ") less than (1); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 101) {
                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[c].confidence_level.value' (" << __aux64__ << ") exceeds max allowable (101); message dropped.";
                                    return -1;
                                }
                                
                                if(*_ext_flag_5076) {
                                }
                        }
                    }
                    
                    *_tmp_10681_openType = buffer - _tmp_10682_start;  // OpenType length
                }
        }
        
        if(ros->denm.alacarte.size() != 0) {
            // Field:  type(AlacarteContainer) name(alacarte) extGroup(0)
                // AlacarteContainer  SEQUENCE
                    //  lanePosition        LanePosition                 OPTIONAL  
                    //  impactReduction     ImpactReductionContainer     OPTIONAL  
                    //  externalTemperature Temperature                  OPTIONAL  
                    //  roadWorks           RoadWorksContainerExtended   OPTIONAL  
                    //  positioningSolution PositioningSolutionType      OPTIONAL  
                    //  stationaryVehicle   StationaryVehicleContainer   OPTIONAL  
                    //  roadConfiguration   RoadConfigurationContainer   OPTIONAL  Extension group #1
                    //  precrash            PreCrashContainer            OPTIONAL  Extension group #1
                uint8_t* _ext_flag_5093 = (uint8_t*) buffer++;  // Write extension flag for AlacarteContainer
                *_ext_flag_5093 = (ros->denm.alacarte[0].road_configuration.size() != 0 || ros->denm.alacarte[0].precrash.size() != 0) ? 1 : 0; 
                
                // Optional fields bytemap
                char* _tmp_10846 = (char*) buffer++;
                *_tmp_10846 = (ros->denm.alacarte[0].lane_position.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m009810\033[0m| Optional field lane_position = " << *_tmp_10846;
                char* _tmp_10847 = (char*) buffer++;
                *_tmp_10847 = (ros->denm.alacarte[0].impact_reduction.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m009811\033[0m| Optional field impact_reduction = " << *_tmp_10847;
                char* _tmp_10848 = (char*) buffer++;
                *_tmp_10848 = (ros->denm.alacarte[0].external_temperature.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m009812\033[0m| Optional field external_temperature = " << *_tmp_10848;
                char* _tmp_10849 = (char*) buffer++;
                *_tmp_10849 = (ros->denm.alacarte[0].road_works.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m009813\033[0m| Optional field road_works = " << *_tmp_10849;
                char* _tmp_10850 = (char*) buffer++;
                *_tmp_10850 = (ros->denm.alacarte[0].positioning_solution.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m009814\033[0m| Optional field positioning_solution = " << *_tmp_10850;
                char* _tmp_10851 = (char*) buffer++;
                *_tmp_10851 = (ros->denm.alacarte[0].stationary_vehicle.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m009815\033[0m| Optional field stationary_vehicle = " << *_tmp_10851;
                
                if(ros->denm.alacarte[0].lane_position.size() != 0) {
                    // Field:  type(LanePosition) name(lane_position) extGroup(0)
                    // Integer
                    
                    // INT8  min(-1) max(14) span(16) dataType(Int8)
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m009816\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].lane_position[0].value) << 
                                     " denm.alacarte[0].lane_position[0].value: " << static_cast<int>(ros->denm.alacarte[0].lane_position[0].value);
                    }
                    
                    uint8_t* _tmp_10852 = (uint8_t*) buffer++;
                    __aux64__ = ros->denm.alacarte[0].lane_position[0].value - -1;
                    *_tmp_10852 = __aux64__;
                    __aux64__ = ros->denm.alacarte[0].lane_position[0].value;
                    
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < -1) {
                        logger->warning() << "Error: Value in 'denm.alacarte[0].lane_position[0].value' (" << __aux64__ << ") less than (-1); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 14) {
                        logger->warning() << "Error: Value in 'denm.alacarte[0].lane_position[0].value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                        return -1;
                    }
                }
                
                if(ros->denm.alacarte[0].impact_reduction.size() != 0) {
                    // Field:  type(ImpactReductionContainer) name(impact_reduction) extGroup(0)
                        // ImpactReductionContainer  SEQUENCE
                            //  heightLonCarrLeft         HeightLonCarr                 
                            //  heightLonCarrRight        HeightLonCarr                 
                            //  posLonCarrLeft            PosLonCarr                    
                            //  posLonCarrRight           PosLonCarr                    
                            //  positionOfPillars         PositionOfPillars             
                            //  posCentMass               PosCentMass                   
                            //  wheelBaseVehicle          WheelBaseVehicle              
                            //  turningRadius             TurningRadius                 
                            //  posFrontAx                PosFrontAx                    
                            //  positionOfOccupants       PositionOfOccupants           
                            //  vehicleMass               VehicleMass                   
                            //  requestResponseIndication RequestResponseIndication     
                        // Optional fields bytemap
                        
                        // Field:  type(HeightLonCarr) name(height_lon_carr_left) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(100) span(100) scaleDivisor(100.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009817\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value) << 
                                         " denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value);
                        }
                        
                        float _tmp_10854 = ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value;
                        _tmp_10854 *= 100.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_10854);
                        _tmp_10854 -= 1;
                        uint8_t* _tmp_10853 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_10853 = static_cast<uint8_t>(_tmp_10854);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 100) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value' (" << __aux64__ << ") exceeds max allowable (100); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(HeightLonCarr) name(height_lon_carr_right) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(100) span(100) scaleDivisor(100.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009818\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value) << 
                                         " denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value);
                        }
                        
                        float _tmp_10856 = ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value;
                        _tmp_10856 *= 100.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_10856);
                        _tmp_10856 -= 1;
                        uint8_t* _tmp_10855 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_10855 = static_cast<uint8_t>(_tmp_10856);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 100) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value' (" << __aux64__ << ") exceeds max allowable (100); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(PosLonCarr) name(pos_lon_carr_left) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009819\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value) << 
                                         " denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value);
                        }
                        
                        float _tmp_10858 = ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value;
                        _tmp_10858 *= 100.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_10858);
                        _tmp_10858 -= 1;
                        uint8_t* _tmp_10857 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_10857 = static_cast<uint8_t>(_tmp_10858);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(PosLonCarr) name(pos_lon_carr_right) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009820\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value) << 
                                         " denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value);
                        }
                        
                        float _tmp_10860 = ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value;
                        _tmp_10860 *= 100.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_10860);
                        _tmp_10860 -= 1;
                        uint8_t* _tmp_10859 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_10859 = static_cast<uint8_t>(_tmp_10860);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(PositionOfPillars) name(position_of_pillars) extGroup(0)
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(3) span(3) ext(true)
                        uint8_t* _ext_flag_5099 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.
                        *_ext_flag_5099 = 0; 
                        
                        __aux64__ = ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.elements.size();
                        if(__aux64__ > 3) __aux64__ = 3;
                        uint16_t* _tmp_10861 = (uint16_t*)buffer;
                        buffer += 2;
                        *_tmp_10861 = __aux64__ - 1;
                        
                        int __ife = __aux64__;
                        for(int e = 0; e < __ife; e++) { 
                            
                            // Real
                            
                            // FLOAT  min(1) max(30) span(30) scaleDivisor(10.0) dataType(Float)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009822\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[e].value) << 
                                             " denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[e].value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[e].value);
                            }
                            
                            float _tmp_10863 = ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[e].value;
                            _tmp_10863 *= 10.0;
                            __aux64__ = static_cast<uint64_t>(_tmp_10863);
                            _tmp_10863 -= 1;
                            uint8_t* _tmp_10862 = (uint8_t*) buffer; buffer += 1;
                            *_tmp_10862 = static_cast<uint8_t>(_tmp_10863);
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[e].value' (" << __aux64__ << ") less than (1); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 30) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[e].value' (" << __aux64__ << ") exceeds max allowable (30); message dropped.";
                                return -1;
                            }
                            
                        }
                        
                        // Field:  type(PosCentMass) name(pos_cent_mass) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(63) span(63) scaleDivisor(10.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009823\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].pos_cent_mass.value) << 
                                         " denm.alacarte[0].impact_reduction[0].pos_cent_mass.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].pos_cent_mass.value);
                        }
                        
                        float _tmp_10865 = ros->denm.alacarte[0].impact_reduction[0].pos_cent_mass.value;
                        _tmp_10865 *= 10.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_10865);
                        _tmp_10865 -= 1;
                        uint8_t* _tmp_10864 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_10864 = static_cast<uint8_t>(_tmp_10865);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_cent_mass.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 63) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_cent_mass.value' (" << __aux64__ << ") exceeds max allowable (63); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(WheelBaseVehicle) name(wheel_base_vehicle) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009824\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value) << 
                                         " denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value);
                        }
                        
                        float _tmp_10867 = ros->denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value;
                        _tmp_10867 *= 10.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_10867);
                        _tmp_10867 -= 1;
                        uint8_t* _tmp_10866 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_10866 = static_cast<uint8_t>(_tmp_10867);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(TurningRadius) name(turning_radius) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(255) span(255) scaleDivisor(2.5) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009825\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].turning_radius.value) << 
                                         " denm.alacarte[0].impact_reduction[0].turning_radius.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].turning_radius.value);
                        }
                        
                        float _tmp_10869 = ros->denm.alacarte[0].impact_reduction[0].turning_radius.value;
                        _tmp_10869 *= 2.5;
                        __aux64__ = static_cast<uint64_t>(_tmp_10869);
                        _tmp_10869 -= 1;
                        uint8_t* _tmp_10868 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_10868 = static_cast<uint8_t>(_tmp_10869);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].turning_radius.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].turning_radius.value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(PosFrontAx) name(pos_front_ax) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(20) span(20) scaleDivisor(10.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009826\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].pos_front_ax.value) << 
                                         " denm.alacarte[0].impact_reduction[0].pos_front_ax.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].pos_front_ax.value);
                        }
                        
                        float _tmp_10871 = ros->denm.alacarte[0].impact_reduction[0].pos_front_ax.value;
                        _tmp_10871 *= 10.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_10871);
                        _tmp_10871 -= 1;
                        uint8_t* _tmp_10870 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_10870 = static_cast<uint8_t>(_tmp_10871);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_front_ax.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 20) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_front_ax.value' (" << __aux64__ << ") exceeds max allowable (20); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(PositionOfOccupants) name(position_of_occupants) extGroup(0)
                        // BitString
                        // BIT_STRING  min(20) max(20) span(1)
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009827\033[0m| denm.alacarte[0].impact_reduction[0].position_of_occupants.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values.size());
                        
                        if(ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values.size() < 20) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].position_of_occupants.value' " << (ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values.size()) << " is less than allowable (20); message dropped.";
                            return -1;
                        }
                        if(ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values.size() > 20) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].position_of_occupants.value' " << (ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values.size()) << " exceeds max allowable (20); message dropped.";
                            return -1;
                        }
                        
                        uint8_t* _tmp_10872 = (uint8_t*)buffer;
                        __aux64__ = ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values.size();
                        if(__aux64__ > 20) __aux64__ = 20;
                        *_tmp_10872 = __aux64__ - 20;
                        buffer += 1;
                        
                        int __iff = __aux64__;
                        for(int f = 0; f < __iff; f++) {
                            uint8_t* __b__ = (uint8_t*)buffer++;
                            *__b__ = (ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values[f]? 1: 0);
                        }
                        
                        // Field:  type(VehicleMass) name(vehicle_mass) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(1024) span(1024) scaleDivisor(1.0E-5) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009828\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].vehicle_mass.value) << 
                                         " denm.alacarte[0].impact_reduction[0].vehicle_mass.value: " << ros->denm.alacarte[0].impact_reduction[0].vehicle_mass.value;
                        }
                        
                        float _tmp_10874 = ros->denm.alacarte[0].impact_reduction[0].vehicle_mass.value;
                        _tmp_10874 *= 1.0E-5;
                        __aux64__ = static_cast<uint64_t>(_tmp_10874);
                        _tmp_10874 -= 1;
                        uint16_t* _tmp_10873 = (uint16_t*) buffer; buffer += 2;
                        *_tmp_10873 = static_cast<uint16_t>(_tmp_10874);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].vehicle_mass.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 1024) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].vehicle_mass.value' (" << __aux64__ << ") exceeds max allowable (1024); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(RequestResponseIndication) name(request_response_indication) extGroup(0)
                        // Enumerated
                        // INT32  min(0) max(1) span(2) dataType(Int32)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m009829\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].request_response_indication.value) << 
                                         " denm.alacarte[0].impact_reduction[0].request_response_indication.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].request_response_indication.value);
                        }
                        
                        uint8_t* _tmp_10875 = (uint8_t*)buffer;
                        buffer += 1;
                        *_tmp_10875 = ros->denm.alacarte[0].impact_reduction[0].request_response_indication.value; 
                        __aux64__ = ros->denm.alacarte[0].impact_reduction[0].request_response_indication.value; 
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].request_response_indication.value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].request_response_indication.value' (" << __aux64__ << ") exceeds max allowable (1); message dropped.";
                            return -1;
                        }
                }
                
                if(ros->denm.alacarte[0].external_temperature.size() != 0) {
                    // Field:  type(Temperature) name(external_temperature) extGroup(0)
                    // Integer
                    
                    // INT8  min(-60) max(67) span(128) dataType(Int8)
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m009830\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].external_temperature[0].value) << 
                                     " denm.alacarte[0].external_temperature[0].value: " << static_cast<int>(ros->denm.alacarte[0].external_temperature[0].value);
                    }
                    
                    uint8_t* _tmp_10876 = (uint8_t*) buffer++;
                    __aux64__ = ros->denm.alacarte[0].external_temperature[0].value - -60;
                    *_tmp_10876 = __aux64__;
                    __aux64__ = ros->denm.alacarte[0].external_temperature[0].value;
                    
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < -60) {
                        logger->warning() << "Error: Value in 'denm.alacarte[0].external_temperature[0].value' (" << __aux64__ << ") less than (-60); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 67) {
                        logger->warning() << "Error: Value in 'denm.alacarte[0].external_temperature[0].value' (" << __aux64__ << ") exceeds max allowable (67); message dropped.";
                        return -1;
                    }
                }
                
                if(ros->denm.alacarte[0].road_works.size() != 0) {
                    // Field:  type(RoadWorksContainerExtended) name(road_works) extGroup(0)
                        // RoadWorksContainerExtended  SEQUENCE
                            //  lightBarSirenInUse      LightBarSirenInUse       OPTIONAL  
                            //  closedLanes             ClosedLanes              OPTIONAL  
                            //  restriction             RestrictedTypes          OPTIONAL  
                            //  speedLimit              SpeedLimit               OPTIONAL  
                            //  incidentIndication      CauseCodeV2              OPTIONAL  
                            //  recommendedPath         ItineraryPath            OPTIONAL  
                            //  startingPointSpeedLimit DeltaReferencePosition   OPTIONAL  
                            //  trafficFlowRule         TrafficRule              OPTIONAL  
                            //  referenceDenms          ActionIdList             OPTIONAL  
                        // Optional fields bytemap
                        char* _tmp_10877 = (char*) buffer++;
                        *_tmp_10877 = (ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009831\033[0m| Optional field light_bar_siren_in_use = " << *_tmp_10877;
                        char* _tmp_10878 = (char*) buffer++;
                        *_tmp_10878 = (ros->denm.alacarte[0].road_works[0].closed_lanes.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009832\033[0m| Optional field closed_lanes = " << *_tmp_10878;
                        char* _tmp_10879 = (char*) buffer++;
                        *_tmp_10879 = (ros->denm.alacarte[0].road_works[0].restriction.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009833\033[0m| Optional field restriction = " << *_tmp_10879;
                        char* _tmp_10880 = (char*) buffer++;
                        *_tmp_10880 = (ros->denm.alacarte[0].road_works[0].speed_limit.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009834\033[0m| Optional field speed_limit = " << *_tmp_10880;
                        char* _tmp_10881 = (char*) buffer++;
                        *_tmp_10881 = (ros->denm.alacarte[0].road_works[0].incident_indication.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009835\033[0m| Optional field incident_indication = " << *_tmp_10881;
                        char* _tmp_10882 = (char*) buffer++;
                        *_tmp_10882 = (ros->denm.alacarte[0].road_works[0].recommended_path.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009836\033[0m| Optional field recommended_path = " << *_tmp_10882;
                        char* _tmp_10883 = (char*) buffer++;
                        *_tmp_10883 = (ros->denm.alacarte[0].road_works[0].starting_point_speed_limit.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009837\033[0m| Optional field starting_point_speed_limit = " << *_tmp_10883;
                        char* _tmp_10884 = (char*) buffer++;
                        *_tmp_10884 = (ros->denm.alacarte[0].road_works[0].traffic_flow_rule.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009838\033[0m| Optional field traffic_flow_rule = " << *_tmp_10884;
                        char* _tmp_10885 = (char*) buffer++;
                        *_tmp_10885 = (ros->denm.alacarte[0].road_works[0].reference_denms.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009839\033[0m| Optional field reference_denms = " << *_tmp_10885;
                        
                        if(ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use.size() != 0) {
                            // Field:  type(LightBarSirenInUse) name(light_bar_siren_in_use) extGroup(0)
                            // BitString
                            // BIT_STRING  min(2) max(2) span(1)
                            if(debug)
                                logger->debug() << "|\033[38;5;94m009840\033[0m| denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values.size());
                            
                            if(ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values.size() < 2) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].value' " << (ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values.size()) << " is less than allowable (2); message dropped.";
                                return -1;
                            }
                            if(ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values.size() > 2) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].value' " << (ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values.size()) << " exceeds max allowable (2); message dropped.";
                                return -1;
                            }
                            
                            uint8_t* _tmp_10886 = (uint8_t*)buffer;
                            __aux64__ = ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values.size();
                            if(__aux64__ > 2) __aux64__ = 2;
                            *_tmp_10886 = __aux64__ - 2;
                            buffer += 1;
                            
                            int __ifg = __aux64__;
                            for(int g = 0; g < __ifg; g++) {
                                uint8_t* __b__ = (uint8_t*)buffer++;
                                *__b__ = (ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values[g]? 1: 0);
                            }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].closed_lanes.size() != 0) {
                            // Field:  type(ClosedLanes) name(closed_lanes) extGroup(0)
                                // ClosedLanes  SEQUENCE
                                    //  innerhardShoulderStatus HardShoulderStatus   OPTIONAL  
                                    //  outerhardShoulderStatus HardShoulderStatus   OPTIONAL  
                                    //  drivingLaneStatus       DrivingLaneStatus    OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_5108 = (uint8_t*) buffer++;  // Write extension flag for ClosedLanes
                                *_ext_flag_5108 = 0;  
                                
                                // Optional fields bytemap
                                char* _tmp_10887 = (char*) buffer++;
                                *_tmp_10887 = (ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m009841\033[0m| Optional field innerhard_shoulder_status = " << *_tmp_10887;
                                char* _tmp_10888 = (char*) buffer++;
                                *_tmp_10888 = (ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m009842\033[0m| Optional field outerhard_shoulder_status = " << *_tmp_10888;
                                char* _tmp_10889 = (char*) buffer++;
                                *_tmp_10889 = (ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m009843\033[0m| Optional field driving_lane_status = " << *_tmp_10889;
                                
                                if(ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status.size() != 0) {
                                    // Field:  type(HardShoulderStatus) name(innerhard_shoulder_status) extGroup(0)
                                    // Enumerated
                                    // INT32  min(0) max(2) span(3) dataType(Int32)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009844\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value) << 
                                                     " denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10890 = (uint8_t*)buffer;
                                    buffer += 1;
                                    *_tmp_10890 = ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value; 
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 2) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value' (" << __aux64__ << ") exceeds max allowable (2); message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status.size() != 0) {
                                    // Field:  type(HardShoulderStatus) name(outerhard_shoulder_status) extGroup(0)
                                    // Enumerated
                                    // INT32  min(0) max(2) span(3) dataType(Int32)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009845\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value) << 
                                                     " denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10891 = (uint8_t*)buffer;
                                    buffer += 1;
                                    *_tmp_10891 = ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value; 
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 2) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value' (" << __aux64__ << ") exceeds max allowable (2); message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status.size() != 0) {
                                    // Field:  type(DrivingLaneStatus) name(driving_lane_status) extGroup(0)
                                    // BitString
                                    // BIT_STRING  min(1) max(13) span(13)
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009846\033[0m| denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values.size());
                                    
                                    if(ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values.size() < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].value' " << (ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values.size()) << " is less than allowable (1); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values.size() > 13) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].value' " << (ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values.size()) << " exceeds max allowable (13); message dropped.";
                                        return -1;
                                    }
                                    
                                    uint8_t* _tmp_10892 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values.size();
                                    if(__aux64__ > 13) __aux64__ = 13;
                                    *_tmp_10892 = __aux64__ - 1;
                                    buffer += 1;
                                    
                                    int __ifh = __aux64__;
                                    for(int h = 0; h < __ifh; h++) {
                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                        *__b__ = (ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values[h]? 1: 0);
                                    }
                                }
                                
                                if(*_ext_flag_5108) {
                                }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].restriction.size() != 0) {
                            // Field:  type(RestrictedTypes) name(restriction) extGroup(0)
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(3) span(3) ext(true)
                            uint8_t* _ext_flag_5111 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_works[0].restriction[0].
                            *_ext_flag_5111 = 0; 
                            
                            __aux64__ = ros->denm.alacarte[0].road_works[0].restriction[0].elements.size();
                            if(__aux64__ > 3) __aux64__ = 3;
                            uint16_t* _tmp_10894 = (uint16_t*)buffer;
                            buffer += 2;
                            *_tmp_10894 = __aux64__ - 1;
                            
                            int __ifi = __aux64__;
                            for(int i = 0; i < __ifi; i++) { 
                                
                                // Integer
                                
                                // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m009848\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].restriction[0].elements[i].value) << 
                                                 " denm.alacarte[0].road_works[0].restriction[0].elements[i].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].restriction[0].elements[i].value);
                                }
                                
                                uint8_t* _tmp_10895 = (uint8_t*) buffer++;
                                *_tmp_10895 = ros->denm.alacarte[0].road_works[0].restriction[0].elements[i].value; 
                                __aux64__ = ros->denm.alacarte[0].road_works[0].restriction[0].elements[i].value;
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].restriction[0].elements[i].value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].restriction[0].elements[i].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                    return -1;
                                }
                                
                            }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].speed_limit.size() != 0) {
                            // Field:  type(SpeedLimit) name(speed_limit) extGroup(0)
                            // Integer
                            
                            // UINT8  min(1) max(255) span(255) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m009849\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].speed_limit[0].value) << 
                                             " denm.alacarte[0].road_works[0].speed_limit[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].speed_limit[0].value);
                            }
                            
                            uint8_t* _tmp_10896 = (uint8_t*) buffer++;
                            __aux64__ = ros->denm.alacarte[0].road_works[0].speed_limit[0].value - 1;
                            *_tmp_10896 = __aux64__;
                            __aux64__ = ros->denm.alacarte[0].road_works[0].speed_limit[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].speed_limit[0].value' (" << __aux64__ << ") less than (1); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].speed_limit[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].incident_indication.size() != 0) {
                            // Field:  type(CauseCodeV2) name(incident_indication) extGroup(0)
                                // CauseCodeV2  SEQUENCE
                                    //  ccAndScc   CauseCodeChoice     
                                    //  ...
                                uint8_t* _ext_flag_5114 = (uint8_t*) buffer++;  // Write extension flag for CauseCodeV2
                                *_ext_flag_5114 = 0;  
                                
                                // Optional fields bytemap
                                
                                // Field:  type(CauseCodeChoice) name(cc_and_scc) extGroup(0)
                                // Choice
                                   // #0  reserved0   SubCauseCodeType
                                   // #1  trafficCondition1   TrafficConditionSubCauseCode
                                   // #2  accident2   AccidentSubCauseCode
                                   // #3  roadworks3   RoadworksSubCauseCode
                                   // #4  reserved4   SubCauseCodeType
                                   // #5  impassability5   ImpassabilitySubCauseCode
                                   // #6  adverseWeatherCondition_Adhesion6   AdverseWeatherCondition_AdhesionSubCauseCode
                                   // #7  aquaplaning7   SubCauseCodeType
                                   // #8  reserved8   SubCauseCodeType
                                   // #9  hazardousLocation_SurfaceCondition9   HazardousLocation_SurfaceConditionSubCauseCode
                                   // #10  hazardousLocation_ObstacleOnTheRoad10   HazardousLocation_ObstacleOnTheRoadSubCauseCode
                                   // #11  hazardousLocation_AnimalOnTheRoad11   HazardousLocation_AnimalOnTheRoadSubCauseCode
                                   // #12  humanPresenceOnTheRoad12   HumanPresenceOnTheRoadSubCauseCode
                                   // #13  reserved13   SubCauseCodeType
                                   // #14  wrongWayDriving14   WrongWayDrivingSubCauseCode
                                   // #15  rescueAndRecoveryWorkInProgress15   RescueAndRecoveryWorkInProgressSubCauseCode
                                   // #16  reserved16   SubCauseCodeType
                                   // #17  adverseWeatherCondition_ExtremeWeatherCondition17   AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode
                                   // #18  adverseWeatherCondition_Visibility18   AdverseWeatherCondition_VisibilitySubCauseCode
                                   // #19  adverseWeatherCondition_Precipitation19   AdverseWeatherCondition_PrecipitationSubCauseCode
                                   // #20  violence20   SubCauseCodeType
                                   // #21  reserved21   SubCauseCodeType
                                   // #22  reserved22   SubCauseCodeType
                                   // #23  reserved23   SubCauseCodeType
                                   // #24  reserved24   SubCauseCodeType
                                   // #25  reserved25   SubCauseCodeType
                                   // #26  slowVehicle26   SlowVehicleSubCauseCode
                                   // #27  dangerousEndOfQueue27   DangerousEndOfQueueSubCauseCode
                                   // #28  publicTransportVehicleApproaching28   SubCauseCodeType
                                   // #29  reserved29   SubCauseCodeType
                                   // #30  reserved30   SubCauseCodeType
                                   // #31  reserved31   SubCauseCodeType
                                   // #32  reserved32   SubCauseCodeType
                                   // #33  reserved33   SubCauseCodeType
                                   // #34  reserved34   SubCauseCodeType
                                   // #35  reserved35   SubCauseCodeType
                                   // #36  reserved36   SubCauseCodeType
                                   // #37  reserved37   SubCauseCodeType
                                   // #38  reserved38   SubCauseCodeType
                                   // #39  reserved39   SubCauseCodeType
                                   // #40  reserved40   SubCauseCodeType
                                   // #41  reserved41   SubCauseCodeType
                                   // #42  reserved42   SubCauseCodeType
                                   // #43  reserved43   SubCauseCodeType
                                   // #44  reserved44   SubCauseCodeType
                                   // #45  reserved45   SubCauseCodeType
                                   // #46  reserved46   SubCauseCodeType
                                   // #47  reserved47   SubCauseCodeType
                                   // #48  reserved48   SubCauseCodeType
                                   // #49  reserved49   SubCauseCodeType
                                   // #50  reserved50   SubCauseCodeType
                                   // #51  reserved51   SubCauseCodeType
                                   // #52  reserved52   SubCauseCodeType
                                   // #53  reserved53   SubCauseCodeType
                                   // #54  reserved54   SubCauseCodeType
                                   // #55  reserved55   SubCauseCodeType
                                   // #56  reserved56   SubCauseCodeType
                                   // #57  reserved57   SubCauseCodeType
                                   // #58  reserved58   SubCauseCodeType
                                   // #59  reserved59   SubCauseCodeType
                                   // #60  reserved60   SubCauseCodeType
                                   // #61  reserved61   SubCauseCodeType
                                   // #62  reserved62   SubCauseCodeType
                                   // #63  reserved63   SubCauseCodeType
                                   // #64  reserved64   SubCauseCodeType
                                   // #65  reserved65   SubCauseCodeType
                                   // #66  reserved66   SubCauseCodeType
                                   // #67  reserved67   SubCauseCodeType
                                   // #68  reserved68   SubCauseCodeType
                                   // #69  reserved69   SubCauseCodeType
                                   // #70  reserved70   SubCauseCodeType
                                   // #71  reserved71   SubCauseCodeType
                                   // #72  reserved72   SubCauseCodeType
                                   // #73  reserved73   SubCauseCodeType
                                   // #74  reserved74   SubCauseCodeType
                                   // #75  reserved75   SubCauseCodeType
                                   // #76  reserved76   SubCauseCodeType
                                   // #77  reserved77   SubCauseCodeType
                                   // #78  reserved78   SubCauseCodeType
                                   // #79  reserved79   SubCauseCodeType
                                   // #80  reserved80   SubCauseCodeType
                                   // #81  reserved81   SubCauseCodeType
                                   // #82  reserved82   SubCauseCodeType
                                   // #83  reserved83   SubCauseCodeType
                                   // #84  reserved84   SubCauseCodeType
                                   // #85  reserved85   SubCauseCodeType
                                   // #86  reserved86   SubCauseCodeType
                                   // #87  reserved87   SubCauseCodeType
                                   // #88  reserved88   SubCauseCodeType
                                   // #89  reserved89   SubCauseCodeType
                                   // #90  reserved90   SubCauseCodeType
                                   // #91  vehicleBreakdown91   VehicleBreakdownSubCauseCode
                                   // #92  postCrash92   PostCrashSubCauseCode
                                   // #93  humanProblem93   HumanProblemSubCauseCode
                                   // #94  stationaryVehicle94   StationaryVehicleSubCauseCode
                                   // #95  emergencyVehicleApproaching95   EmergencyVehicleApproachingSubCauseCode
                                   // #96  hazardousLocation_DangerousCurve96   HazardousLocation_DangerousCurveSubCauseCode
                                   // #97  collisionRisk97   CollisionRiskSubCauseCode
                                   // #98  signalViolation98   SignalViolationSubCauseCode
                                   // #99  dangerousSituation99   DangerousSituationSubCauseCode
                                   // #100  railwayLevelCrossing100   RailwayLevelCrossingSubCauseCode
                                   // #101  reserved101   SubCauseCodeType
                                   // #102  reserved102   SubCauseCodeType
                                   // #103  reserved103   SubCauseCodeType
                                   // #104  reserved104   SubCauseCodeType
                                   // #105  reserved105   SubCauseCodeType
                                   // #106  reserved106   SubCauseCodeType
                                   // #107  reserved107   SubCauseCodeType
                                   // #108  reserved108   SubCauseCodeType
                                   // #109  reserved109   SubCauseCodeType
                                   // #110  reserved110   SubCauseCodeType
                                   // #111  reserved111   SubCauseCodeType
                                   // #112  reserved112   SubCauseCodeType
                                   // #113  reserved113   SubCauseCodeType
                                   // #114  reserved114   SubCauseCodeType
                                   // #115  reserved115   SubCauseCodeType
                                   // #116  reserved116   SubCauseCodeType
                                   // #117  reserved117   SubCauseCodeType
                                   // #118  reserved118   SubCauseCodeType
                                   // #119  reserved119   SubCauseCodeType
                                   // #120  reserved120   SubCauseCodeType
                                   // #121  reserved121   SubCauseCodeType
                                   // #122  reserved122   SubCauseCodeType
                                   // #123  reserved123   SubCauseCodeType
                                   // #124  reserved124   SubCauseCodeType
                                   // #125  reserved125   SubCauseCodeType
                                   // #126  reserved126   SubCauseCodeType
                                   // #127  reserved127   SubCauseCodeType
                                   // #128  reserved128   SubCauseCodeType
                                uint8_t* _choice_325 = (uint8_t*) buffer;
                                buffer++;
                                
                                if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0.size() != 0) {  // CHOICE 0  fieldType(CauseCodeChoice) 
                                    *_choice_325 = 0;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009850\033[0m| Choice selection: 0";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009851\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10897 = (uint8_t*) buffer++;
                                    *_tmp_10897 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1.size() != 0)  // CHOICE 1  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 1;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009852\033[0m| Choice selection: 1";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009853\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10898 = (uint8_t*) buffer++;
                                    *_tmp_10898 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2.size() != 0)  // CHOICE 2  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 2;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009854\033[0m| Choice selection: 2";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009855\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10899 = (uint8_t*) buffer++;
                                    *_tmp_10899 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3.size() != 0)  // CHOICE 3  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 3;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009856\033[0m| Choice selection: 3";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009857\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10900 = (uint8_t*) buffer++;
                                    *_tmp_10900 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4.size() != 0)  // CHOICE 4  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 4;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009858\033[0m| Choice selection: 4";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009859\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10901 = (uint8_t*) buffer++;
                                    *_tmp_10901 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5.size() != 0)  // CHOICE 5  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 5;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009860\033[0m| Choice selection: 5";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009861\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10902 = (uint8_t*) buffer++;
                                    *_tmp_10902 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6.size() != 0)  // CHOICE 6  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 6;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009862\033[0m| Choice selection: 6";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009863\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10903 = (uint8_t*) buffer++;
                                    *_tmp_10903 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7.size() != 0)  // CHOICE 7  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 7;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009864\033[0m| Choice selection: 7";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009865\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10904 = (uint8_t*) buffer++;
                                    *_tmp_10904 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8.size() != 0)  // CHOICE 8  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 8;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009866\033[0m| Choice selection: 8";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009867\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10905 = (uint8_t*) buffer++;
                                    *_tmp_10905 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9.size() != 0)  // CHOICE 9  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 9;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009868\033[0m| Choice selection: 9";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009869\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10906 = (uint8_t*) buffer++;
                                    *_tmp_10906 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10.size() != 0)  // CHOICE 10  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 10;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009870\033[0m| Choice selection: 10";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009871\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10907 = (uint8_t*) buffer++;
                                    *_tmp_10907 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11.size() != 0)  // CHOICE 11  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 11;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009872\033[0m| Choice selection: 11";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009873\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10908 = (uint8_t*) buffer++;
                                    *_tmp_10908 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12.size() != 0)  // CHOICE 12  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 12;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009874\033[0m| Choice selection: 12";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009875\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10909 = (uint8_t*) buffer++;
                                    *_tmp_10909 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13.size() != 0)  // CHOICE 13  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 13;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009876\033[0m| Choice selection: 13";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009877\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10910 = (uint8_t*) buffer++;
                                    *_tmp_10910 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14.size() != 0)  // CHOICE 14  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 14;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009878\033[0m| Choice selection: 14";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009879\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10911 = (uint8_t*) buffer++;
                                    *_tmp_10911 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15.size() != 0)  // CHOICE 15  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 15;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009880\033[0m| Choice selection: 15";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009881\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10912 = (uint8_t*) buffer++;
                                    *_tmp_10912 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16.size() != 0)  // CHOICE 16  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 16;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009882\033[0m| Choice selection: 16";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009883\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10913 = (uint8_t*) buffer++;
                                    *_tmp_10913 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17.size() != 0)  // CHOICE 17  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 17;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009884\033[0m| Choice selection: 17";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009885\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10914 = (uint8_t*) buffer++;
                                    *_tmp_10914 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18.size() != 0)  // CHOICE 18  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 18;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009886\033[0m| Choice selection: 18";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009887\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10915 = (uint8_t*) buffer++;
                                    *_tmp_10915 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19.size() != 0)  // CHOICE 19  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 19;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009888\033[0m| Choice selection: 19";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009889\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10916 = (uint8_t*) buffer++;
                                    *_tmp_10916 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20.size() != 0)  // CHOICE 20  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 20;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009890\033[0m| Choice selection: 20";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009891\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10917 = (uint8_t*) buffer++;
                                    *_tmp_10917 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21.size() != 0)  // CHOICE 21  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 21;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009892\033[0m| Choice selection: 21";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009893\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10918 = (uint8_t*) buffer++;
                                    *_tmp_10918 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22.size() != 0)  // CHOICE 22  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 22;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009894\033[0m| Choice selection: 22";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009895\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10919 = (uint8_t*) buffer++;
                                    *_tmp_10919 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23.size() != 0)  // CHOICE 23  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 23;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009896\033[0m| Choice selection: 23";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009897\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10920 = (uint8_t*) buffer++;
                                    *_tmp_10920 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24.size() != 0)  // CHOICE 24  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 24;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009898\033[0m| Choice selection: 24";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009899\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10921 = (uint8_t*) buffer++;
                                    *_tmp_10921 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25.size() != 0)  // CHOICE 25  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 25;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009900\033[0m| Choice selection: 25";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009901\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10922 = (uint8_t*) buffer++;
                                    *_tmp_10922 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26.size() != 0)  // CHOICE 26  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 26;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009902\033[0m| Choice selection: 26";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009903\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10923 = (uint8_t*) buffer++;
                                    *_tmp_10923 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27.size() != 0)  // CHOICE 27  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 27;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009904\033[0m| Choice selection: 27";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009905\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10924 = (uint8_t*) buffer++;
                                    *_tmp_10924 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28.size() != 0)  // CHOICE 28  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 28;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009906\033[0m| Choice selection: 28";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009907\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10925 = (uint8_t*) buffer++;
                                    *_tmp_10925 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29.size() != 0)  // CHOICE 29  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 29;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009908\033[0m| Choice selection: 29";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009909\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10926 = (uint8_t*) buffer++;
                                    *_tmp_10926 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30.size() != 0)  // CHOICE 30  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 30;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009910\033[0m| Choice selection: 30";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009911\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10927 = (uint8_t*) buffer++;
                                    *_tmp_10927 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31.size() != 0)  // CHOICE 31  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 31;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009912\033[0m| Choice selection: 31";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009913\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10928 = (uint8_t*) buffer++;
                                    *_tmp_10928 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32.size() != 0)  // CHOICE 32  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 32;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009914\033[0m| Choice selection: 32";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009915\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10929 = (uint8_t*) buffer++;
                                    *_tmp_10929 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33.size() != 0)  // CHOICE 33  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 33;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009916\033[0m| Choice selection: 33";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009917\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10930 = (uint8_t*) buffer++;
                                    *_tmp_10930 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34.size() != 0)  // CHOICE 34  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 34;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009918\033[0m| Choice selection: 34";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009919\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10931 = (uint8_t*) buffer++;
                                    *_tmp_10931 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35.size() != 0)  // CHOICE 35  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 35;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009920\033[0m| Choice selection: 35";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009921\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10932 = (uint8_t*) buffer++;
                                    *_tmp_10932 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36.size() != 0)  // CHOICE 36  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 36;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009922\033[0m| Choice selection: 36";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009923\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10933 = (uint8_t*) buffer++;
                                    *_tmp_10933 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37.size() != 0)  // CHOICE 37  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 37;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009924\033[0m| Choice selection: 37";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009925\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10934 = (uint8_t*) buffer++;
                                    *_tmp_10934 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38.size() != 0)  // CHOICE 38  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 38;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009926\033[0m| Choice selection: 38";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009927\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10935 = (uint8_t*) buffer++;
                                    *_tmp_10935 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39.size() != 0)  // CHOICE 39  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 39;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009928\033[0m| Choice selection: 39";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009929\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10936 = (uint8_t*) buffer++;
                                    *_tmp_10936 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40.size() != 0)  // CHOICE 40  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 40;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009930\033[0m| Choice selection: 40";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009931\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10937 = (uint8_t*) buffer++;
                                    *_tmp_10937 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41.size() != 0)  // CHOICE 41  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 41;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009932\033[0m| Choice selection: 41";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009933\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10938 = (uint8_t*) buffer++;
                                    *_tmp_10938 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42.size() != 0)  // CHOICE 42  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 42;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009934\033[0m| Choice selection: 42";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009935\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10939 = (uint8_t*) buffer++;
                                    *_tmp_10939 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43.size() != 0)  // CHOICE 43  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 43;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009936\033[0m| Choice selection: 43";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009937\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10940 = (uint8_t*) buffer++;
                                    *_tmp_10940 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44.size() != 0)  // CHOICE 44  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 44;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009938\033[0m| Choice selection: 44";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009939\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10941 = (uint8_t*) buffer++;
                                    *_tmp_10941 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45.size() != 0)  // CHOICE 45  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 45;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009940\033[0m| Choice selection: 45";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009941\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10942 = (uint8_t*) buffer++;
                                    *_tmp_10942 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46.size() != 0)  // CHOICE 46  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 46;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009942\033[0m| Choice selection: 46";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009943\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10943 = (uint8_t*) buffer++;
                                    *_tmp_10943 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47.size() != 0)  // CHOICE 47  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 47;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009944\033[0m| Choice selection: 47";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009945\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10944 = (uint8_t*) buffer++;
                                    *_tmp_10944 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48.size() != 0)  // CHOICE 48  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 48;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009946\033[0m| Choice selection: 48";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009947\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10945 = (uint8_t*) buffer++;
                                    *_tmp_10945 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49.size() != 0)  // CHOICE 49  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 49;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009948\033[0m| Choice selection: 49";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009949\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10946 = (uint8_t*) buffer++;
                                    *_tmp_10946 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50.size() != 0)  // CHOICE 50  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 50;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009950\033[0m| Choice selection: 50";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009951\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10947 = (uint8_t*) buffer++;
                                    *_tmp_10947 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51.size() != 0)  // CHOICE 51  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 51;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009952\033[0m| Choice selection: 51";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009953\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10948 = (uint8_t*) buffer++;
                                    *_tmp_10948 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52.size() != 0)  // CHOICE 52  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 52;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009954\033[0m| Choice selection: 52";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009955\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10949 = (uint8_t*) buffer++;
                                    *_tmp_10949 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53.size() != 0)  // CHOICE 53  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 53;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009956\033[0m| Choice selection: 53";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009957\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10950 = (uint8_t*) buffer++;
                                    *_tmp_10950 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54.size() != 0)  // CHOICE 54  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 54;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009958\033[0m| Choice selection: 54";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009959\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10951 = (uint8_t*) buffer++;
                                    *_tmp_10951 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55.size() != 0)  // CHOICE 55  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 55;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009960\033[0m| Choice selection: 55";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009961\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10952 = (uint8_t*) buffer++;
                                    *_tmp_10952 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56.size() != 0)  // CHOICE 56  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 56;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009962\033[0m| Choice selection: 56";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009963\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10953 = (uint8_t*) buffer++;
                                    *_tmp_10953 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57.size() != 0)  // CHOICE 57  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 57;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009964\033[0m| Choice selection: 57";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009965\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10954 = (uint8_t*) buffer++;
                                    *_tmp_10954 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58.size() != 0)  // CHOICE 58  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 58;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009966\033[0m| Choice selection: 58";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009967\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10955 = (uint8_t*) buffer++;
                                    *_tmp_10955 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59.size() != 0)  // CHOICE 59  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 59;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009968\033[0m| Choice selection: 59";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009969\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10956 = (uint8_t*) buffer++;
                                    *_tmp_10956 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60.size() != 0)  // CHOICE 60  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 60;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009970\033[0m| Choice selection: 60";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009971\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10957 = (uint8_t*) buffer++;
                                    *_tmp_10957 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61.size() != 0)  // CHOICE 61  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 61;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009972\033[0m| Choice selection: 61";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009973\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10958 = (uint8_t*) buffer++;
                                    *_tmp_10958 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62.size() != 0)  // CHOICE 62  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 62;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009974\033[0m| Choice selection: 62";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009975\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10959 = (uint8_t*) buffer++;
                                    *_tmp_10959 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63.size() != 0)  // CHOICE 63  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 63;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009976\033[0m| Choice selection: 63";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009977\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10960 = (uint8_t*) buffer++;
                                    *_tmp_10960 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64.size() != 0)  // CHOICE 64  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 64;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009978\033[0m| Choice selection: 64";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009979\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10961 = (uint8_t*) buffer++;
                                    *_tmp_10961 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65.size() != 0)  // CHOICE 65  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 65;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009980\033[0m| Choice selection: 65";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009981\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10962 = (uint8_t*) buffer++;
                                    *_tmp_10962 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66.size() != 0)  // CHOICE 66  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 66;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009982\033[0m| Choice selection: 66";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009983\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10963 = (uint8_t*) buffer++;
                                    *_tmp_10963 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67.size() != 0)  // CHOICE 67  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 67;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009984\033[0m| Choice selection: 67";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009985\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10964 = (uint8_t*) buffer++;
                                    *_tmp_10964 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68.size() != 0)  // CHOICE 68  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 68;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009986\033[0m| Choice selection: 68";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009987\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10965 = (uint8_t*) buffer++;
                                    *_tmp_10965 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69.size() != 0)  // CHOICE 69  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 69;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009988\033[0m| Choice selection: 69";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009989\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10966 = (uint8_t*) buffer++;
                                    *_tmp_10966 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70.size() != 0)  // CHOICE 70  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 70;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009990\033[0m| Choice selection: 70";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009991\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10967 = (uint8_t*) buffer++;
                                    *_tmp_10967 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71.size() != 0)  // CHOICE 71  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 71;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009992\033[0m| Choice selection: 71";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009993\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10968 = (uint8_t*) buffer++;
                                    *_tmp_10968 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72.size() != 0)  // CHOICE 72  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 72;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009994\033[0m| Choice selection: 72";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009995\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10969 = (uint8_t*) buffer++;
                                    *_tmp_10969 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73.size() != 0)  // CHOICE 73  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 73;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009996\033[0m| Choice selection: 73";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009997\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10970 = (uint8_t*) buffer++;
                                    *_tmp_10970 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74.size() != 0)  // CHOICE 74  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 74;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m009998\033[0m| Choice selection: 74";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009999\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10971 = (uint8_t*) buffer++;
                                    *_tmp_10971 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75.size() != 0)  // CHOICE 75  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 75;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010000\033[0m| Choice selection: 75";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010001\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10972 = (uint8_t*) buffer++;
                                    *_tmp_10972 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76.size() != 0)  // CHOICE 76  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 76;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010002\033[0m| Choice selection: 76";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010003\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10973 = (uint8_t*) buffer++;
                                    *_tmp_10973 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77.size() != 0)  // CHOICE 77  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 77;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010004\033[0m| Choice selection: 77";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010005\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10974 = (uint8_t*) buffer++;
                                    *_tmp_10974 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78.size() != 0)  // CHOICE 78  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 78;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010006\033[0m| Choice selection: 78";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010007\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10975 = (uint8_t*) buffer++;
                                    *_tmp_10975 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79.size() != 0)  // CHOICE 79  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 79;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010008\033[0m| Choice selection: 79";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010009\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10976 = (uint8_t*) buffer++;
                                    *_tmp_10976 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80.size() != 0)  // CHOICE 80  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 80;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010010\033[0m| Choice selection: 80";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010011\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10977 = (uint8_t*) buffer++;
                                    *_tmp_10977 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81.size() != 0)  // CHOICE 81  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 81;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010012\033[0m| Choice selection: 81";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010013\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10978 = (uint8_t*) buffer++;
                                    *_tmp_10978 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82.size() != 0)  // CHOICE 82  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 82;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010014\033[0m| Choice selection: 82";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010015\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10979 = (uint8_t*) buffer++;
                                    *_tmp_10979 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83.size() != 0)  // CHOICE 83  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 83;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010016\033[0m| Choice selection: 83";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010017\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10980 = (uint8_t*) buffer++;
                                    *_tmp_10980 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84.size() != 0)  // CHOICE 84  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 84;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010018\033[0m| Choice selection: 84";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010019\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10981 = (uint8_t*) buffer++;
                                    *_tmp_10981 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85.size() != 0)  // CHOICE 85  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 85;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010020\033[0m| Choice selection: 85";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010021\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10982 = (uint8_t*) buffer++;
                                    *_tmp_10982 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86.size() != 0)  // CHOICE 86  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 86;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010022\033[0m| Choice selection: 86";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010023\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10983 = (uint8_t*) buffer++;
                                    *_tmp_10983 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87.size() != 0)  // CHOICE 87  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 87;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010024\033[0m| Choice selection: 87";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010025\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10984 = (uint8_t*) buffer++;
                                    *_tmp_10984 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88.size() != 0)  // CHOICE 88  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 88;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010026\033[0m| Choice selection: 88";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010027\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10985 = (uint8_t*) buffer++;
                                    *_tmp_10985 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89.size() != 0)  // CHOICE 89  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 89;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010028\033[0m| Choice selection: 89";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010029\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10986 = (uint8_t*) buffer++;
                                    *_tmp_10986 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90.size() != 0)  // CHOICE 90  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 90;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010030\033[0m| Choice selection: 90";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010031\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10987 = (uint8_t*) buffer++;
                                    *_tmp_10987 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91.size() != 0)  // CHOICE 91  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 91;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010032\033[0m| Choice selection: 91";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010033\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10988 = (uint8_t*) buffer++;
                                    *_tmp_10988 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92.size() != 0)  // CHOICE 92  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 92;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010034\033[0m| Choice selection: 92";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010035\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10989 = (uint8_t*) buffer++;
                                    *_tmp_10989 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93.size() != 0)  // CHOICE 93  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 93;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010036\033[0m| Choice selection: 93";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010037\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10990 = (uint8_t*) buffer++;
                                    *_tmp_10990 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94.size() != 0)  // CHOICE 94  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 94;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010038\033[0m| Choice selection: 94";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010039\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10991 = (uint8_t*) buffer++;
                                    *_tmp_10991 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95.size() != 0)  // CHOICE 95  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 95;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010040\033[0m| Choice selection: 95";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010041\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10992 = (uint8_t*) buffer++;
                                    *_tmp_10992 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96.size() != 0)  // CHOICE 96  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 96;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010042\033[0m| Choice selection: 96";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010043\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10993 = (uint8_t*) buffer++;
                                    *_tmp_10993 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97.size() != 0)  // CHOICE 97  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 97;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010044\033[0m| Choice selection: 97";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010045\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10994 = (uint8_t*) buffer++;
                                    *_tmp_10994 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98.size() != 0)  // CHOICE 98  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 98;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010046\033[0m| Choice selection: 98";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010047\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10995 = (uint8_t*) buffer++;
                                    *_tmp_10995 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99.size() != 0)  // CHOICE 99  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 99;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010048\033[0m| Choice selection: 99";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010049\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10996 = (uint8_t*) buffer++;
                                    *_tmp_10996 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100.size() != 0)  // CHOICE 100  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 100;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010050\033[0m| Choice selection: 100";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010051\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10997 = (uint8_t*) buffer++;
                                    *_tmp_10997 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101.size() != 0)  // CHOICE 101  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 101;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010052\033[0m| Choice selection: 101";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010053\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10998 = (uint8_t*) buffer++;
                                    *_tmp_10998 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102.size() != 0)  // CHOICE 102  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 102;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010054\033[0m| Choice selection: 102";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010055\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value);
                                    }
                                    
                                    uint8_t* _tmp_10999 = (uint8_t*) buffer++;
                                    *_tmp_10999 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103.size() != 0)  // CHOICE 103  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 103;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010056\033[0m| Choice selection: 103";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010057\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11000 = (uint8_t*) buffer++;
                                    *_tmp_11000 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104.size() != 0)  // CHOICE 104  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 104;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010058\033[0m| Choice selection: 104";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010059\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11001 = (uint8_t*) buffer++;
                                    *_tmp_11001 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105.size() != 0)  // CHOICE 105  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 105;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010060\033[0m| Choice selection: 105";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010061\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11002 = (uint8_t*) buffer++;
                                    *_tmp_11002 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106.size() != 0)  // CHOICE 106  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 106;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010062\033[0m| Choice selection: 106";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010063\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11003 = (uint8_t*) buffer++;
                                    *_tmp_11003 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107.size() != 0)  // CHOICE 107  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 107;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010064\033[0m| Choice selection: 107";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010065\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11004 = (uint8_t*) buffer++;
                                    *_tmp_11004 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108.size() != 0)  // CHOICE 108  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 108;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010066\033[0m| Choice selection: 108";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010067\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11005 = (uint8_t*) buffer++;
                                    *_tmp_11005 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109.size() != 0)  // CHOICE 109  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 109;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010068\033[0m| Choice selection: 109";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010069\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11006 = (uint8_t*) buffer++;
                                    *_tmp_11006 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110.size() != 0)  // CHOICE 110  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 110;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010070\033[0m| Choice selection: 110";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010071\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11007 = (uint8_t*) buffer++;
                                    *_tmp_11007 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111.size() != 0)  // CHOICE 111  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 111;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010072\033[0m| Choice selection: 111";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010073\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11008 = (uint8_t*) buffer++;
                                    *_tmp_11008 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112.size() != 0)  // CHOICE 112  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 112;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010074\033[0m| Choice selection: 112";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010075\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11009 = (uint8_t*) buffer++;
                                    *_tmp_11009 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113.size() != 0)  // CHOICE 113  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 113;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010076\033[0m| Choice selection: 113";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010077\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11010 = (uint8_t*) buffer++;
                                    *_tmp_11010 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114.size() != 0)  // CHOICE 114  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 114;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010078\033[0m| Choice selection: 114";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010079\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11011 = (uint8_t*) buffer++;
                                    *_tmp_11011 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115.size() != 0)  // CHOICE 115  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 115;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010080\033[0m| Choice selection: 115";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010081\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11012 = (uint8_t*) buffer++;
                                    *_tmp_11012 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116.size() != 0)  // CHOICE 116  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 116;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010082\033[0m| Choice selection: 116";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010083\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11013 = (uint8_t*) buffer++;
                                    *_tmp_11013 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117.size() != 0)  // CHOICE 117  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 117;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010084\033[0m| Choice selection: 117";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010085\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11014 = (uint8_t*) buffer++;
                                    *_tmp_11014 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118.size() != 0)  // CHOICE 118  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 118;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010086\033[0m| Choice selection: 118";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010087\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11015 = (uint8_t*) buffer++;
                                    *_tmp_11015 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119.size() != 0)  // CHOICE 119  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 119;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010088\033[0m| Choice selection: 119";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010089\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11016 = (uint8_t*) buffer++;
                                    *_tmp_11016 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120.size() != 0)  // CHOICE 120  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 120;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010090\033[0m| Choice selection: 120";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010091\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11017 = (uint8_t*) buffer++;
                                    *_tmp_11017 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121.size() != 0)  // CHOICE 121  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 121;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010092\033[0m| Choice selection: 121";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010093\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11018 = (uint8_t*) buffer++;
                                    *_tmp_11018 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122.size() != 0)  // CHOICE 122  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 122;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010094\033[0m| Choice selection: 122";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010095\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11019 = (uint8_t*) buffer++;
                                    *_tmp_11019 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123.size() != 0)  // CHOICE 123  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 123;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010096\033[0m| Choice selection: 123";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010097\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11020 = (uint8_t*) buffer++;
                                    *_tmp_11020 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124.size() != 0)  // CHOICE 124  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 124;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010098\033[0m| Choice selection: 124";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010099\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11021 = (uint8_t*) buffer++;
                                    *_tmp_11021 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125.size() != 0)  // CHOICE 125  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 125;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010100\033[0m| Choice selection: 125";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010101\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11022 = (uint8_t*) buffer++;
                                    *_tmp_11022 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126.size() != 0)  // CHOICE 126  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 126;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010102\033[0m| Choice selection: 126";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010103\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11023 = (uint8_t*) buffer++;
                                    *_tmp_11023 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127.size() != 0)  // CHOICE 127  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 127;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010104\033[0m| Choice selection: 127";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010105\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11024 = (uint8_t*) buffer++;
                                    *_tmp_11024 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128.size() != 0)  // CHOICE 128  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_325 = 128;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010106\033[0m| Choice selection: 128";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010107\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11025 = (uint8_t*) buffer++;
                                    *_tmp_11025 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(*_choice_325) << ") selected in CHOICE CauseCodeChoice in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc'; message dropped.";
                                    return -1;
                                }
                                
                                if(*_ext_flag_5114) {
                                }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].recommended_path.size() != 0) {
                            // Field:  type(ItineraryPath) name(recommended_path) extGroup(0)
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(40) span(40) ext(false)
                            __aux64__ = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements.size();
                            if(__aux64__ > 40) __aux64__ = 40;
                            uint16_t* _tmp_11027 = (uint16_t*)buffer;
                            buffer += 2;
                            *_tmp_11027 = __aux64__ - 1;
                            
                            int __ifj = __aux64__;
                            for(int j = 0; j < __ifj; j++) { 
                                
                                    // ReferencePosition  SEQUENCE
                                        //  latitude                  Latitude                 
                                        //  longitude                 Longitude                
                                        //  positionConfidenceEllipse PosConfidenceEllipse     
                                        //  altitude                  Altitude                 
                                    // Optional fields bytemap
                                    
                                    // Field:  type(Latitude) name(latitude) extGroup(0)
                                    // Real
                                    
                                    // DOUBLE  min(-900000000) max(900000001) span(1800000002) scaleDivisor(1.0E7) dataType(Double)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010109\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].latitude.value) << 
                                                     " denm.alacarte[0].road_works[0].recommended_path[0].elements[j].latitude.value: " << ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].latitude.value;
                                    }
                                    
                                    double _tmp_11029 = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].latitude.value;
                                    _tmp_11029 *= 1.0E7;
                                    __aux64__ = static_cast<uint64_t>(_tmp_11029);
                                    _tmp_11029 -= -900000000;
                                    uint32_t* _tmp_11028 = (uint32_t*) buffer; buffer += 4;
                                    *_tmp_11028 = static_cast<uint32_t>(_tmp_11029);
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < -900000000) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[j].latitude.value' (" << __aux64__ << ") less than (-900000000); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 900000001) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[j].latitude.value' (" << __aux64__ << ") exceeds max allowable (900000001); message dropped.";
                                        return -1;
                                    }
                                    
                                    // Field:  type(Longitude) name(longitude) extGroup(0)
                                    // Real
                                    
                                    // DOUBLE  min(-1800000000) max(1800000001) span(3600000002) scaleDivisor(1.0E7) dataType(Double)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010110\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].longitude.value) << 
                                                     " denm.alacarte[0].road_works[0].recommended_path[0].elements[j].longitude.value: " << ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].longitude.value;
                                    }
                                    
                                    double _tmp_11031 = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].longitude.value;
                                    _tmp_11031 *= 1.0E7;
                                    __aux64__ = static_cast<uint64_t>(_tmp_11031);
                                    _tmp_11031 -= -1800000000;
                                    uint32_t* _tmp_11030 = (uint32_t*) buffer; buffer += 4;
                                    *_tmp_11030 = static_cast<uint32_t>(_tmp_11031);
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < -1800000000) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[j].longitude.value' (" << __aux64__ << ") less than (-1800000000); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 1800000001) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[j].longitude.value' (" << __aux64__ << ") exceeds max allowable (1800000001); message dropped.";
                                        return -1;
                                    }
                                    
                                    // Field:  type(PosConfidenceEllipse) name(position_confidence_ellipse) extGroup(0)
                                        // PosConfidenceEllipse  SEQUENCE
                                            //  semiMajorConfidence  SemiAxisLength     
                                            //  semiMinorConfidence  SemiAxisLength     
                                            //  semiMajorOrientation HeadingValue       
                                        // Optional fields bytemap
                                        
                                        // Field:  type(SemiAxisLength) name(semi_major_confidence) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m010111\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].position_confidence_ellipse.semi_major_confidence.value) << 
                                                         " denm.alacarte[0].road_works[0].recommended_path[0].elements[j].position_confidence_ellipse.semi_major_confidence.value: " << ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].position_confidence_ellipse.semi_major_confidence.value;
                                        }
                                        
                                        float _tmp_11033 = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].position_confidence_ellipse.semi_major_confidence.value;
                                        _tmp_11033 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_11033);
                                        uint16_t* _tmp_11032 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_11032 = static_cast<uint16_t>(_tmp_11033);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[j].position_confidence_ellipse.semi_major_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[j].position_confidence_ellipse.semi_major_confidence.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(SemiAxisLength) name(semi_minor_confidence) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m010112\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].position_confidence_ellipse.semi_minor_confidence.value) << 
                                                         " denm.alacarte[0].road_works[0].recommended_path[0].elements[j].position_confidence_ellipse.semi_minor_confidence.value: " << ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].position_confidence_ellipse.semi_minor_confidence.value;
                                        }
                                        
                                        float _tmp_11035 = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].position_confidence_ellipse.semi_minor_confidence.value;
                                        _tmp_11035 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_11035);
                                        uint16_t* _tmp_11034 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_11034 = static_cast<uint16_t>(_tmp_11035);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[j].position_confidence_ellipse.semi_minor_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[j].position_confidence_ellipse.semi_minor_confidence.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(HeadingValue) name(semi_major_orientation) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m010113\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].position_confidence_ellipse.semi_major_orientation.value) << 
                                                         " denm.alacarte[0].road_works[0].recommended_path[0].elements[j].position_confidence_ellipse.semi_major_orientation.value: " << ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].position_confidence_ellipse.semi_major_orientation.value;
                                        }
                                        
                                        float _tmp_11037 = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].position_confidence_ellipse.semi_major_orientation.value;
                                        _tmp_11037 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_11037);
                                        uint16_t* _tmp_11036 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_11036 = static_cast<uint16_t>(_tmp_11037);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[j].position_confidence_ellipse.semi_major_orientation.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[j].position_confidence_ellipse.semi_major_orientation.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                            return -1;
                                        }
                                    
                                    // Field:  type(Altitude) name(altitude) extGroup(0)
                                        // Altitude  SEQUENCE
                                            //  altitudeValue      AltitudeValue          
                                            //  altitudeConfidence AltitudeConfidence     
                                        // Optional fields bytemap
                                        
                                        // Field:  type(AltitudeValue) name(altitude_value) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(-100000) max(800001) span(900002) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m010114\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].altitude.altitude_value.value) << 
                                                         " denm.alacarte[0].road_works[0].recommended_path[0].elements[j].altitude.altitude_value.value: " << ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].altitude.altitude_value.value;
                                        }
                                        
                                        float _tmp_11039 = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].altitude.altitude_value.value;
                                        _tmp_11039 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_11039);
                                        _tmp_11039 -= -100000;
                                        uint32_t* _tmp_11038 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_11038 = static_cast<uint32_t>(_tmp_11039);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -100000) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[j].altitude.altitude_value.value' (" << __aux64__ << ") less than (-100000); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 800001) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[j].altitude.altitude_value.value' (" << __aux64__ << ") exceeds max allowable (800001); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(AltitudeConfidence) name(altitude_confidence) extGroup(0)
                                        // Enumerated
                                        // INT32  min(0) max(15) span(16) dataType(Int32)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m010115\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].altitude.altitude_confidence.value) << 
                                                         " denm.alacarte[0].road_works[0].recommended_path[0].elements[j].altitude.altitude_confidence.value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].altitude.altitude_confidence.value);
                                        }
                                        
                                        uint8_t* _tmp_11040 = (uint8_t*)buffer;
                                        buffer += 1;
                                        *_tmp_11040 = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].altitude.altitude_confidence.value; 
                                        __aux64__ = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[j].altitude.altitude_confidence.value; 
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[j].altitude.altitude_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 15) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[j].altitude.altitude_confidence.value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                                            return -1;
                                        }
                                    
                            }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].starting_point_speed_limit.size() != 0) {
                            // Field:  type(DeltaReferencePosition) name(starting_point_speed_limit) extGroup(0)
                                // DeltaReferencePosition  SEQUENCE
                                    //  deltaLatitude  DeltaLatitude      
                                    //  deltaLongitude DeltaLongitude     
                                    //  deltaAltitude  DeltaAltitude      
                                // Optional fields bytemap
                                
                                // Field:  type(DeltaLatitude) name(delta_latitude) extGroup(0)
                                // Real
                                
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m010116\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value) << 
                                                 " denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value: " << ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value;
                                }
                                
                                double _tmp_11042 = ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value;
                                _tmp_11042 *= 1.0E7;
                                __aux64__ = static_cast<uint64_t>(_tmp_11042);
                                _tmp_11042 -= -131071;
                                uint32_t* _tmp_11041 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_11041 = static_cast<uint32_t>(_tmp_11042);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DeltaLongitude) name(delta_longitude) extGroup(0)
                                // Real
                                
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m010117\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value) << 
                                                 " denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value: " << ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value;
                                }
                                
                                double _tmp_11044 = ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value;
                                _tmp_11044 *= 1.0E7;
                                __aux64__ = static_cast<uint64_t>(_tmp_11044);
                                _tmp_11044 -= -131071;
                                uint32_t* _tmp_11043 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_11043 = static_cast<uint32_t>(_tmp_11044);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DeltaAltitude) name(delta_altitude) extGroup(0)
                                // Real
                                
                                // FLOAT  min(-12700) max(12800) span(25501) scaleDivisor(100.0) dataType(Float)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m010118\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value) << 
                                                 " denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value: " << ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value;
                                }
                                
                                float _tmp_11046 = ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value;
                                _tmp_11046 *= 100.0;
                                __aux64__ = static_cast<uint64_t>(_tmp_11046);
                                _tmp_11046 -= -12700;
                                uint16_t* _tmp_11045 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_11045 = static_cast<uint16_t>(_tmp_11046);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -12700) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value' (" << __aux64__ << ") less than (-12700); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 12800) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value' (" << __aux64__ << ") exceeds max allowable (12800); message dropped.";
                                    return -1;
                                }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].traffic_flow_rule.size() != 0) {
                            // Field:  type(TrafficRule) name(traffic_flow_rule) extGroup(0)
                            // Enumerated
                            // INT32  min(0) max(4) span(5) dataType(Int32)
                            uint8_t* _ext_flag_5255 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_works[0].traffic_flow_rule[0].
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m010119\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].traffic_flow_rule[0].value) << 
                                             " denm.alacarte[0].road_works[0].traffic_flow_rule[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].traffic_flow_rule[0].value);
                            }
                            
                            uint8_t* _tmp_11047 = (uint8_t*)buffer;
                            buffer += 1;
                            *_tmp_11047 = ros->denm.alacarte[0].road_works[0].traffic_flow_rule[0].value; 
                            __aux64__ = ros->denm.alacarte[0].road_works[0].traffic_flow_rule[0].value; 
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].traffic_flow_rule[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 4) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].traffic_flow_rule[0].value' (" << __aux64__ << ") exceeds max allowable (4); message dropped.";
                                return -1;
                            }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].reference_denms.size() != 0) {
                            // Field:  type(ActionIdList) name(reference_denms) extGroup(0)
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(8) span(8) ext(true)
                            uint8_t* _ext_flag_5256 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_works[0].reference_denms[0].
                            *_ext_flag_5256 = 0; 
                            
                            __aux64__ = ros->denm.alacarte[0].road_works[0].reference_denms[0].elements.size();
                            if(__aux64__ > 8) __aux64__ = 8;
                            uint16_t* _tmp_11048 = (uint16_t*)buffer;
                            buffer += 2;
                            *_tmp_11048 = __aux64__ - 1;
                            
                            int __ifk = __aux64__;
                            for(int k = 0; k < __ifk; k++) { 
                                
                                    // ActionId  SEQUENCE
                                        //  originatingStationId StationId          
                                        //  sequenceNumber       SequenceNumber     
                                    // Optional fields bytemap
                                    
                                    // Field:  type(StationId) name(originating_station_id) extGroup(0)
                                    // Integer
                                    
                                    // UINT32  min(0) max(4294967295) span(4294967296) dataType(UInt32)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010121\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[k].originating_station_id.value) << 
                                                     " denm.alacarte[0].road_works[0].reference_denms[0].elements[k].originating_station_id.value: " << ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[k].originating_station_id.value;
                                    }
                                    
                                    uint32_t* _tmp_11049 = (uint32_t*) buffer; buffer += 4;
                                    *_tmp_11049 = ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[k].originating_station_id.value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[k].originating_station_id.value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].reference_denms[0].elements[k].originating_station_id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 4294967295) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].reference_denms[0].elements[k].originating_station_id.value' (" << __aux64__ << ") exceeds max allowable (4294967295); message dropped.";
                                        return -1;
                                    }
                                    
                                    // Field:  type(SequenceNumber) name(sequence_number) extGroup(0)
                                    // Integer
                                    
                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010122\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[k].sequence_number.value) << 
                                                     " denm.alacarte[0].road_works[0].reference_denms[0].elements[k].sequence_number.value: " << ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[k].sequence_number.value;
                                    }
                                    
                                    uint16_t* _tmp_11050 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_11050 = ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[k].sequence_number.value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[k].sequence_number.value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].reference_denms[0].elements[k].sequence_number.value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].reference_denms[0].elements[k].sequence_number.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                        return -1;
                                    }
                                    
                            }
                        }
                }
                
                if(ros->denm.alacarte[0].positioning_solution.size() != 0) {
                    // Field:  type(PositioningSolutionType) name(positioning_solution) extGroup(0)
                    // Enumerated
                    // INT32  min(0) max(6) span(7) dataType(Int32)
                    uint8_t* _ext_flag_5259 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].positioning_solution[0].
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m010123\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].positioning_solution[0].value) << 
                                     " denm.alacarte[0].positioning_solution[0].value: " << static_cast<int>(ros->denm.alacarte[0].positioning_solution[0].value);
                    }
                    
                    uint8_t* _tmp_11051 = (uint8_t*)buffer;
                    buffer += 1;
                    *_tmp_11051 = ros->denm.alacarte[0].positioning_solution[0].value; 
                    __aux64__ = ros->denm.alacarte[0].positioning_solution[0].value; 
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'denm.alacarte[0].positioning_solution[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 6) {
                        logger->warning() << "Error: Value in 'denm.alacarte[0].positioning_solution[0].value' (" << __aux64__ << ") exceeds max allowable (6); message dropped.";
                        return -1;
                    }
                }
                
                if(ros->denm.alacarte[0].stationary_vehicle.size() != 0) {
                    // Field:  type(StationaryVehicleContainer) name(stationary_vehicle) extGroup(0)
                        // StationaryVehicleContainer  SEQUENCE
                            //  stationarySince        StationarySince          OPTIONAL  
                            //  stationaryCause        CauseCodeV2              OPTIONAL  
                            //  carryingDangerousGoods DangerousGoodsExtended   OPTIONAL  
                            //  numberOfOccupants      NumberOfOccupants        OPTIONAL  
                            //  vehicleIdentification  VehicleIdentification    OPTIONAL  
                            //  energyStorageType      EnergyStorageType        OPTIONAL  
                        // Optional fields bytemap
                        char* _tmp_11052 = (char*) buffer++;
                        *_tmp_11052 = (ros->denm.alacarte[0].stationary_vehicle[0].stationary_since.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m010124\033[0m| Optional field stationary_since = " << *_tmp_11052;
                        char* _tmp_11053 = (char*) buffer++;
                        *_tmp_11053 = (ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m010125\033[0m| Optional field stationary_cause = " << *_tmp_11053;
                        char* _tmp_11054 = (char*) buffer++;
                        *_tmp_11054 = (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m010126\033[0m| Optional field carrying_dangerous_goods = " << *_tmp_11054;
                        char* _tmp_11055 = (char*) buffer++;
                        *_tmp_11055 = (ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m010127\033[0m| Optional field number_of_occupants = " << *_tmp_11055;
                        char* _tmp_11056 = (char*) buffer++;
                        *_tmp_11056 = (ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m010128\033[0m| Optional field vehicle_identification = " << *_tmp_11056;
                        char* _tmp_11057 = (char*) buffer++;
                        *_tmp_11057 = (ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m010129\033[0m| Optional field energy_storage_type = " << *_tmp_11057;
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_since.size() != 0) {
                            // Field:  type(StationarySince) name(stationary_since) extGroup(0)
                            // Enumerated
                            // INT32  min(0) max(3) span(4) dataType(Int32)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m010130\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value) << 
                                             " denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value);
                            }
                            
                            uint8_t* _tmp_11058 = (uint8_t*)buffer;
                            buffer += 1;
                            *_tmp_11058 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value; 
                            __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value; 
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                return -1;
                            }
                        }
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause.size() != 0) {
                            // Field:  type(CauseCodeV2) name(stationary_cause) extGroup(0)
                                // CauseCodeV2  SEQUENCE
                                    //  ccAndScc   CauseCodeChoice     
                                    //  ...
                                uint8_t* _ext_flag_5261 = (uint8_t*) buffer++;  // Write extension flag for CauseCodeV2
                                *_ext_flag_5261 = 0;  
                                
                                // Optional fields bytemap
                                
                                // Field:  type(CauseCodeChoice) name(cc_and_scc) extGroup(0)
                                // Choice
                                   // #0  reserved0   SubCauseCodeType
                                   // #1  trafficCondition1   TrafficConditionSubCauseCode
                                   // #2  accident2   AccidentSubCauseCode
                                   // #3  roadworks3   RoadworksSubCauseCode
                                   // #4  reserved4   SubCauseCodeType
                                   // #5  impassability5   ImpassabilitySubCauseCode
                                   // #6  adverseWeatherCondition_Adhesion6   AdverseWeatherCondition_AdhesionSubCauseCode
                                   // #7  aquaplaning7   SubCauseCodeType
                                   // #8  reserved8   SubCauseCodeType
                                   // #9  hazardousLocation_SurfaceCondition9   HazardousLocation_SurfaceConditionSubCauseCode
                                   // #10  hazardousLocation_ObstacleOnTheRoad10   HazardousLocation_ObstacleOnTheRoadSubCauseCode
                                   // #11  hazardousLocation_AnimalOnTheRoad11   HazardousLocation_AnimalOnTheRoadSubCauseCode
                                   // #12  humanPresenceOnTheRoad12   HumanPresenceOnTheRoadSubCauseCode
                                   // #13  reserved13   SubCauseCodeType
                                   // #14  wrongWayDriving14   WrongWayDrivingSubCauseCode
                                   // #15  rescueAndRecoveryWorkInProgress15   RescueAndRecoveryWorkInProgressSubCauseCode
                                   // #16  reserved16   SubCauseCodeType
                                   // #17  adverseWeatherCondition_ExtremeWeatherCondition17   AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode
                                   // #18  adverseWeatherCondition_Visibility18   AdverseWeatherCondition_VisibilitySubCauseCode
                                   // #19  adverseWeatherCondition_Precipitation19   AdverseWeatherCondition_PrecipitationSubCauseCode
                                   // #20  violence20   SubCauseCodeType
                                   // #21  reserved21   SubCauseCodeType
                                   // #22  reserved22   SubCauseCodeType
                                   // #23  reserved23   SubCauseCodeType
                                   // #24  reserved24   SubCauseCodeType
                                   // #25  reserved25   SubCauseCodeType
                                   // #26  slowVehicle26   SlowVehicleSubCauseCode
                                   // #27  dangerousEndOfQueue27   DangerousEndOfQueueSubCauseCode
                                   // #28  publicTransportVehicleApproaching28   SubCauseCodeType
                                   // #29  reserved29   SubCauseCodeType
                                   // #30  reserved30   SubCauseCodeType
                                   // #31  reserved31   SubCauseCodeType
                                   // #32  reserved32   SubCauseCodeType
                                   // #33  reserved33   SubCauseCodeType
                                   // #34  reserved34   SubCauseCodeType
                                   // #35  reserved35   SubCauseCodeType
                                   // #36  reserved36   SubCauseCodeType
                                   // #37  reserved37   SubCauseCodeType
                                   // #38  reserved38   SubCauseCodeType
                                   // #39  reserved39   SubCauseCodeType
                                   // #40  reserved40   SubCauseCodeType
                                   // #41  reserved41   SubCauseCodeType
                                   // #42  reserved42   SubCauseCodeType
                                   // #43  reserved43   SubCauseCodeType
                                   // #44  reserved44   SubCauseCodeType
                                   // #45  reserved45   SubCauseCodeType
                                   // #46  reserved46   SubCauseCodeType
                                   // #47  reserved47   SubCauseCodeType
                                   // #48  reserved48   SubCauseCodeType
                                   // #49  reserved49   SubCauseCodeType
                                   // #50  reserved50   SubCauseCodeType
                                   // #51  reserved51   SubCauseCodeType
                                   // #52  reserved52   SubCauseCodeType
                                   // #53  reserved53   SubCauseCodeType
                                   // #54  reserved54   SubCauseCodeType
                                   // #55  reserved55   SubCauseCodeType
                                   // #56  reserved56   SubCauseCodeType
                                   // #57  reserved57   SubCauseCodeType
                                   // #58  reserved58   SubCauseCodeType
                                   // #59  reserved59   SubCauseCodeType
                                   // #60  reserved60   SubCauseCodeType
                                   // #61  reserved61   SubCauseCodeType
                                   // #62  reserved62   SubCauseCodeType
                                   // #63  reserved63   SubCauseCodeType
                                   // #64  reserved64   SubCauseCodeType
                                   // #65  reserved65   SubCauseCodeType
                                   // #66  reserved66   SubCauseCodeType
                                   // #67  reserved67   SubCauseCodeType
                                   // #68  reserved68   SubCauseCodeType
                                   // #69  reserved69   SubCauseCodeType
                                   // #70  reserved70   SubCauseCodeType
                                   // #71  reserved71   SubCauseCodeType
                                   // #72  reserved72   SubCauseCodeType
                                   // #73  reserved73   SubCauseCodeType
                                   // #74  reserved74   SubCauseCodeType
                                   // #75  reserved75   SubCauseCodeType
                                   // #76  reserved76   SubCauseCodeType
                                   // #77  reserved77   SubCauseCodeType
                                   // #78  reserved78   SubCauseCodeType
                                   // #79  reserved79   SubCauseCodeType
                                   // #80  reserved80   SubCauseCodeType
                                   // #81  reserved81   SubCauseCodeType
                                   // #82  reserved82   SubCauseCodeType
                                   // #83  reserved83   SubCauseCodeType
                                   // #84  reserved84   SubCauseCodeType
                                   // #85  reserved85   SubCauseCodeType
                                   // #86  reserved86   SubCauseCodeType
                                   // #87  reserved87   SubCauseCodeType
                                   // #88  reserved88   SubCauseCodeType
                                   // #89  reserved89   SubCauseCodeType
                                   // #90  reserved90   SubCauseCodeType
                                   // #91  vehicleBreakdown91   VehicleBreakdownSubCauseCode
                                   // #92  postCrash92   PostCrashSubCauseCode
                                   // #93  humanProblem93   HumanProblemSubCauseCode
                                   // #94  stationaryVehicle94   StationaryVehicleSubCauseCode
                                   // #95  emergencyVehicleApproaching95   EmergencyVehicleApproachingSubCauseCode
                                   // #96  hazardousLocation_DangerousCurve96   HazardousLocation_DangerousCurveSubCauseCode
                                   // #97  collisionRisk97   CollisionRiskSubCauseCode
                                   // #98  signalViolation98   SignalViolationSubCauseCode
                                   // #99  dangerousSituation99   DangerousSituationSubCauseCode
                                   // #100  railwayLevelCrossing100   RailwayLevelCrossingSubCauseCode
                                   // #101  reserved101   SubCauseCodeType
                                   // #102  reserved102   SubCauseCodeType
                                   // #103  reserved103   SubCauseCodeType
                                   // #104  reserved104   SubCauseCodeType
                                   // #105  reserved105   SubCauseCodeType
                                   // #106  reserved106   SubCauseCodeType
                                   // #107  reserved107   SubCauseCodeType
                                   // #108  reserved108   SubCauseCodeType
                                   // #109  reserved109   SubCauseCodeType
                                   // #110  reserved110   SubCauseCodeType
                                   // #111  reserved111   SubCauseCodeType
                                   // #112  reserved112   SubCauseCodeType
                                   // #113  reserved113   SubCauseCodeType
                                   // #114  reserved114   SubCauseCodeType
                                   // #115  reserved115   SubCauseCodeType
                                   // #116  reserved116   SubCauseCodeType
                                   // #117  reserved117   SubCauseCodeType
                                   // #118  reserved118   SubCauseCodeType
                                   // #119  reserved119   SubCauseCodeType
                                   // #120  reserved120   SubCauseCodeType
                                   // #121  reserved121   SubCauseCodeType
                                   // #122  reserved122   SubCauseCodeType
                                   // #123  reserved123   SubCauseCodeType
                                   // #124  reserved124   SubCauseCodeType
                                   // #125  reserved125   SubCauseCodeType
                                   // #126  reserved126   SubCauseCodeType
                                   // #127  reserved127   SubCauseCodeType
                                   // #128  reserved128   SubCauseCodeType
                                uint8_t* _choice_326 = (uint8_t*) buffer;
                                buffer++;
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0.size() != 0) {  // CHOICE 0  fieldType(CauseCodeChoice) 
                                    *_choice_326 = 0;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010131\033[0m| Choice selection: 0";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010132\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11059 = (uint8_t*) buffer++;
                                    *_tmp_11059 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1.size() != 0)  // CHOICE 1  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 1;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010133\033[0m| Choice selection: 1";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010134\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11060 = (uint8_t*) buffer++;
                                    *_tmp_11060 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2.size() != 0)  // CHOICE 2  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 2;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010135\033[0m| Choice selection: 2";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010136\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11061 = (uint8_t*) buffer++;
                                    *_tmp_11061 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3.size() != 0)  // CHOICE 3  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 3;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010137\033[0m| Choice selection: 3";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010138\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11062 = (uint8_t*) buffer++;
                                    *_tmp_11062 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4.size() != 0)  // CHOICE 4  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 4;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010139\033[0m| Choice selection: 4";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010140\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11063 = (uint8_t*) buffer++;
                                    *_tmp_11063 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5.size() != 0)  // CHOICE 5  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 5;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010141\033[0m| Choice selection: 5";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010142\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11064 = (uint8_t*) buffer++;
                                    *_tmp_11064 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6.size() != 0)  // CHOICE 6  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 6;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010143\033[0m| Choice selection: 6";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010144\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11065 = (uint8_t*) buffer++;
                                    *_tmp_11065 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7.size() != 0)  // CHOICE 7  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 7;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010145\033[0m| Choice selection: 7";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010146\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11066 = (uint8_t*) buffer++;
                                    *_tmp_11066 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8.size() != 0)  // CHOICE 8  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 8;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010147\033[0m| Choice selection: 8";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010148\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11067 = (uint8_t*) buffer++;
                                    *_tmp_11067 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9.size() != 0)  // CHOICE 9  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 9;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010149\033[0m| Choice selection: 9";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010150\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11068 = (uint8_t*) buffer++;
                                    *_tmp_11068 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10.size() != 0)  // CHOICE 10  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 10;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010151\033[0m| Choice selection: 10";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010152\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11069 = (uint8_t*) buffer++;
                                    *_tmp_11069 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11.size() != 0)  // CHOICE 11  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 11;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010153\033[0m| Choice selection: 11";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010154\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11070 = (uint8_t*) buffer++;
                                    *_tmp_11070 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12.size() != 0)  // CHOICE 12  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 12;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010155\033[0m| Choice selection: 12";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010156\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11071 = (uint8_t*) buffer++;
                                    *_tmp_11071 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13.size() != 0)  // CHOICE 13  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 13;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010157\033[0m| Choice selection: 13";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010158\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11072 = (uint8_t*) buffer++;
                                    *_tmp_11072 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14.size() != 0)  // CHOICE 14  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 14;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010159\033[0m| Choice selection: 14";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010160\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11073 = (uint8_t*) buffer++;
                                    *_tmp_11073 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15.size() != 0)  // CHOICE 15  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 15;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010161\033[0m| Choice selection: 15";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010162\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11074 = (uint8_t*) buffer++;
                                    *_tmp_11074 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16.size() != 0)  // CHOICE 16  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 16;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010163\033[0m| Choice selection: 16";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010164\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11075 = (uint8_t*) buffer++;
                                    *_tmp_11075 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17.size() != 0)  // CHOICE 17  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 17;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010165\033[0m| Choice selection: 17";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010166\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11076 = (uint8_t*) buffer++;
                                    *_tmp_11076 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18.size() != 0)  // CHOICE 18  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 18;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010167\033[0m| Choice selection: 18";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010168\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11077 = (uint8_t*) buffer++;
                                    *_tmp_11077 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19.size() != 0)  // CHOICE 19  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 19;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010169\033[0m| Choice selection: 19";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010170\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11078 = (uint8_t*) buffer++;
                                    *_tmp_11078 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20.size() != 0)  // CHOICE 20  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 20;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010171\033[0m| Choice selection: 20";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010172\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11079 = (uint8_t*) buffer++;
                                    *_tmp_11079 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21.size() != 0)  // CHOICE 21  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 21;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010173\033[0m| Choice selection: 21";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010174\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11080 = (uint8_t*) buffer++;
                                    *_tmp_11080 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22.size() != 0)  // CHOICE 22  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 22;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010175\033[0m| Choice selection: 22";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010176\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11081 = (uint8_t*) buffer++;
                                    *_tmp_11081 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23.size() != 0)  // CHOICE 23  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 23;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010177\033[0m| Choice selection: 23";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010178\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11082 = (uint8_t*) buffer++;
                                    *_tmp_11082 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24.size() != 0)  // CHOICE 24  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 24;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010179\033[0m| Choice selection: 24";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010180\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11083 = (uint8_t*) buffer++;
                                    *_tmp_11083 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25.size() != 0)  // CHOICE 25  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 25;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010181\033[0m| Choice selection: 25";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010182\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11084 = (uint8_t*) buffer++;
                                    *_tmp_11084 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26.size() != 0)  // CHOICE 26  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 26;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010183\033[0m| Choice selection: 26";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010184\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11085 = (uint8_t*) buffer++;
                                    *_tmp_11085 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27.size() != 0)  // CHOICE 27  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 27;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010185\033[0m| Choice selection: 27";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010186\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11086 = (uint8_t*) buffer++;
                                    *_tmp_11086 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28.size() != 0)  // CHOICE 28  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 28;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010187\033[0m| Choice selection: 28";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010188\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11087 = (uint8_t*) buffer++;
                                    *_tmp_11087 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29.size() != 0)  // CHOICE 29  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 29;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010189\033[0m| Choice selection: 29";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010190\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11088 = (uint8_t*) buffer++;
                                    *_tmp_11088 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30.size() != 0)  // CHOICE 30  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 30;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010191\033[0m| Choice selection: 30";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010192\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11089 = (uint8_t*) buffer++;
                                    *_tmp_11089 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31.size() != 0)  // CHOICE 31  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 31;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010193\033[0m| Choice selection: 31";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010194\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11090 = (uint8_t*) buffer++;
                                    *_tmp_11090 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32.size() != 0)  // CHOICE 32  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 32;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010195\033[0m| Choice selection: 32";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010196\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11091 = (uint8_t*) buffer++;
                                    *_tmp_11091 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33.size() != 0)  // CHOICE 33  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 33;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010197\033[0m| Choice selection: 33";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010198\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11092 = (uint8_t*) buffer++;
                                    *_tmp_11092 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34.size() != 0)  // CHOICE 34  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 34;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010199\033[0m| Choice selection: 34";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010200\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11093 = (uint8_t*) buffer++;
                                    *_tmp_11093 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35.size() != 0)  // CHOICE 35  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 35;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010201\033[0m| Choice selection: 35";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010202\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11094 = (uint8_t*) buffer++;
                                    *_tmp_11094 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36.size() != 0)  // CHOICE 36  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 36;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010203\033[0m| Choice selection: 36";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010204\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11095 = (uint8_t*) buffer++;
                                    *_tmp_11095 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37.size() != 0)  // CHOICE 37  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 37;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010205\033[0m| Choice selection: 37";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010206\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11096 = (uint8_t*) buffer++;
                                    *_tmp_11096 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38.size() != 0)  // CHOICE 38  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 38;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010207\033[0m| Choice selection: 38";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010208\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11097 = (uint8_t*) buffer++;
                                    *_tmp_11097 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39.size() != 0)  // CHOICE 39  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 39;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010209\033[0m| Choice selection: 39";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010210\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11098 = (uint8_t*) buffer++;
                                    *_tmp_11098 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40.size() != 0)  // CHOICE 40  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 40;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010211\033[0m| Choice selection: 40";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010212\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11099 = (uint8_t*) buffer++;
                                    *_tmp_11099 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41.size() != 0)  // CHOICE 41  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 41;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010213\033[0m| Choice selection: 41";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010214\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11100 = (uint8_t*) buffer++;
                                    *_tmp_11100 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42.size() != 0)  // CHOICE 42  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 42;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010215\033[0m| Choice selection: 42";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010216\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11101 = (uint8_t*) buffer++;
                                    *_tmp_11101 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43.size() != 0)  // CHOICE 43  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 43;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010217\033[0m| Choice selection: 43";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010218\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11102 = (uint8_t*) buffer++;
                                    *_tmp_11102 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44.size() != 0)  // CHOICE 44  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 44;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010219\033[0m| Choice selection: 44";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010220\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11103 = (uint8_t*) buffer++;
                                    *_tmp_11103 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45.size() != 0)  // CHOICE 45  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 45;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010221\033[0m| Choice selection: 45";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010222\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11104 = (uint8_t*) buffer++;
                                    *_tmp_11104 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46.size() != 0)  // CHOICE 46  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 46;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010223\033[0m| Choice selection: 46";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010224\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11105 = (uint8_t*) buffer++;
                                    *_tmp_11105 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47.size() != 0)  // CHOICE 47  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 47;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010225\033[0m| Choice selection: 47";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010226\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11106 = (uint8_t*) buffer++;
                                    *_tmp_11106 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48.size() != 0)  // CHOICE 48  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 48;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010227\033[0m| Choice selection: 48";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010228\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11107 = (uint8_t*) buffer++;
                                    *_tmp_11107 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49.size() != 0)  // CHOICE 49  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 49;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010229\033[0m| Choice selection: 49";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010230\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11108 = (uint8_t*) buffer++;
                                    *_tmp_11108 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50.size() != 0)  // CHOICE 50  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 50;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010231\033[0m| Choice selection: 50";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010232\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11109 = (uint8_t*) buffer++;
                                    *_tmp_11109 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51.size() != 0)  // CHOICE 51  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 51;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010233\033[0m| Choice selection: 51";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010234\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11110 = (uint8_t*) buffer++;
                                    *_tmp_11110 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52.size() != 0)  // CHOICE 52  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 52;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010235\033[0m| Choice selection: 52";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010236\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11111 = (uint8_t*) buffer++;
                                    *_tmp_11111 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53.size() != 0)  // CHOICE 53  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 53;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010237\033[0m| Choice selection: 53";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010238\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11112 = (uint8_t*) buffer++;
                                    *_tmp_11112 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54.size() != 0)  // CHOICE 54  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 54;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010239\033[0m| Choice selection: 54";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010240\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11113 = (uint8_t*) buffer++;
                                    *_tmp_11113 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55.size() != 0)  // CHOICE 55  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 55;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010241\033[0m| Choice selection: 55";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010242\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11114 = (uint8_t*) buffer++;
                                    *_tmp_11114 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56.size() != 0)  // CHOICE 56  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 56;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010243\033[0m| Choice selection: 56";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010244\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11115 = (uint8_t*) buffer++;
                                    *_tmp_11115 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57.size() != 0)  // CHOICE 57  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 57;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010245\033[0m| Choice selection: 57";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010246\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11116 = (uint8_t*) buffer++;
                                    *_tmp_11116 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58.size() != 0)  // CHOICE 58  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 58;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010247\033[0m| Choice selection: 58";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010248\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11117 = (uint8_t*) buffer++;
                                    *_tmp_11117 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59.size() != 0)  // CHOICE 59  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 59;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010249\033[0m| Choice selection: 59";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010250\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11118 = (uint8_t*) buffer++;
                                    *_tmp_11118 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60.size() != 0)  // CHOICE 60  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 60;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010251\033[0m| Choice selection: 60";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010252\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11119 = (uint8_t*) buffer++;
                                    *_tmp_11119 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61.size() != 0)  // CHOICE 61  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 61;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010253\033[0m| Choice selection: 61";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010254\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11120 = (uint8_t*) buffer++;
                                    *_tmp_11120 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62.size() != 0)  // CHOICE 62  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 62;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010255\033[0m| Choice selection: 62";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010256\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11121 = (uint8_t*) buffer++;
                                    *_tmp_11121 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63.size() != 0)  // CHOICE 63  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 63;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010257\033[0m| Choice selection: 63";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010258\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11122 = (uint8_t*) buffer++;
                                    *_tmp_11122 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64.size() != 0)  // CHOICE 64  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 64;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010259\033[0m| Choice selection: 64";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010260\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11123 = (uint8_t*) buffer++;
                                    *_tmp_11123 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65.size() != 0)  // CHOICE 65  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 65;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010261\033[0m| Choice selection: 65";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010262\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11124 = (uint8_t*) buffer++;
                                    *_tmp_11124 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66.size() != 0)  // CHOICE 66  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 66;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010263\033[0m| Choice selection: 66";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010264\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11125 = (uint8_t*) buffer++;
                                    *_tmp_11125 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67.size() != 0)  // CHOICE 67  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 67;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010265\033[0m| Choice selection: 67";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010266\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11126 = (uint8_t*) buffer++;
                                    *_tmp_11126 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68.size() != 0)  // CHOICE 68  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 68;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010267\033[0m| Choice selection: 68";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010268\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11127 = (uint8_t*) buffer++;
                                    *_tmp_11127 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69.size() != 0)  // CHOICE 69  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 69;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010269\033[0m| Choice selection: 69";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010270\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11128 = (uint8_t*) buffer++;
                                    *_tmp_11128 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70.size() != 0)  // CHOICE 70  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 70;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010271\033[0m| Choice selection: 70";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010272\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11129 = (uint8_t*) buffer++;
                                    *_tmp_11129 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71.size() != 0)  // CHOICE 71  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 71;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010273\033[0m| Choice selection: 71";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010274\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11130 = (uint8_t*) buffer++;
                                    *_tmp_11130 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72.size() != 0)  // CHOICE 72  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 72;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010275\033[0m| Choice selection: 72";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010276\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11131 = (uint8_t*) buffer++;
                                    *_tmp_11131 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73.size() != 0)  // CHOICE 73  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 73;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010277\033[0m| Choice selection: 73";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010278\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11132 = (uint8_t*) buffer++;
                                    *_tmp_11132 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74.size() != 0)  // CHOICE 74  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 74;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010279\033[0m| Choice selection: 74";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010280\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11133 = (uint8_t*) buffer++;
                                    *_tmp_11133 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75.size() != 0)  // CHOICE 75  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 75;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010281\033[0m| Choice selection: 75";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010282\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11134 = (uint8_t*) buffer++;
                                    *_tmp_11134 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76.size() != 0)  // CHOICE 76  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 76;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010283\033[0m| Choice selection: 76";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010284\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11135 = (uint8_t*) buffer++;
                                    *_tmp_11135 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77.size() != 0)  // CHOICE 77  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 77;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010285\033[0m| Choice selection: 77";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010286\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11136 = (uint8_t*) buffer++;
                                    *_tmp_11136 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78.size() != 0)  // CHOICE 78  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 78;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010287\033[0m| Choice selection: 78";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010288\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11137 = (uint8_t*) buffer++;
                                    *_tmp_11137 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79.size() != 0)  // CHOICE 79  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 79;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010289\033[0m| Choice selection: 79";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010290\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11138 = (uint8_t*) buffer++;
                                    *_tmp_11138 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80.size() != 0)  // CHOICE 80  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 80;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010291\033[0m| Choice selection: 80";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010292\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11139 = (uint8_t*) buffer++;
                                    *_tmp_11139 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81.size() != 0)  // CHOICE 81  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 81;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010293\033[0m| Choice selection: 81";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010294\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11140 = (uint8_t*) buffer++;
                                    *_tmp_11140 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82.size() != 0)  // CHOICE 82  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 82;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010295\033[0m| Choice selection: 82";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010296\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11141 = (uint8_t*) buffer++;
                                    *_tmp_11141 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83.size() != 0)  // CHOICE 83  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 83;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010297\033[0m| Choice selection: 83";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010298\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11142 = (uint8_t*) buffer++;
                                    *_tmp_11142 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84.size() != 0)  // CHOICE 84  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 84;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010299\033[0m| Choice selection: 84";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010300\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11143 = (uint8_t*) buffer++;
                                    *_tmp_11143 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85.size() != 0)  // CHOICE 85  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 85;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010301\033[0m| Choice selection: 85";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010302\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11144 = (uint8_t*) buffer++;
                                    *_tmp_11144 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86.size() != 0)  // CHOICE 86  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 86;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010303\033[0m| Choice selection: 86";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010304\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11145 = (uint8_t*) buffer++;
                                    *_tmp_11145 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87.size() != 0)  // CHOICE 87  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 87;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010305\033[0m| Choice selection: 87";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010306\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11146 = (uint8_t*) buffer++;
                                    *_tmp_11146 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88.size() != 0)  // CHOICE 88  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 88;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010307\033[0m| Choice selection: 88";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010308\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11147 = (uint8_t*) buffer++;
                                    *_tmp_11147 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89.size() != 0)  // CHOICE 89  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 89;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010309\033[0m| Choice selection: 89";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010310\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11148 = (uint8_t*) buffer++;
                                    *_tmp_11148 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90.size() != 0)  // CHOICE 90  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 90;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010311\033[0m| Choice selection: 90";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010312\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11149 = (uint8_t*) buffer++;
                                    *_tmp_11149 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91.size() != 0)  // CHOICE 91  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 91;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010313\033[0m| Choice selection: 91";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010314\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11150 = (uint8_t*) buffer++;
                                    *_tmp_11150 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92.size() != 0)  // CHOICE 92  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 92;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010315\033[0m| Choice selection: 92";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010316\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11151 = (uint8_t*) buffer++;
                                    *_tmp_11151 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93.size() != 0)  // CHOICE 93  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 93;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010317\033[0m| Choice selection: 93";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010318\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11152 = (uint8_t*) buffer++;
                                    *_tmp_11152 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94.size() != 0)  // CHOICE 94  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 94;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010319\033[0m| Choice selection: 94";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010320\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11153 = (uint8_t*) buffer++;
                                    *_tmp_11153 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95.size() != 0)  // CHOICE 95  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 95;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010321\033[0m| Choice selection: 95";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010322\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11154 = (uint8_t*) buffer++;
                                    *_tmp_11154 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96.size() != 0)  // CHOICE 96  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 96;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010323\033[0m| Choice selection: 96";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010324\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11155 = (uint8_t*) buffer++;
                                    *_tmp_11155 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97.size() != 0)  // CHOICE 97  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 97;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010325\033[0m| Choice selection: 97";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010326\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11156 = (uint8_t*) buffer++;
                                    *_tmp_11156 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98.size() != 0)  // CHOICE 98  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 98;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010327\033[0m| Choice selection: 98";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010328\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11157 = (uint8_t*) buffer++;
                                    *_tmp_11157 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99.size() != 0)  // CHOICE 99  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 99;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010329\033[0m| Choice selection: 99";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010330\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11158 = (uint8_t*) buffer++;
                                    *_tmp_11158 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100.size() != 0)  // CHOICE 100  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 100;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010331\033[0m| Choice selection: 100";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010332\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11159 = (uint8_t*) buffer++;
                                    *_tmp_11159 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101.size() != 0)  // CHOICE 101  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 101;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010333\033[0m| Choice selection: 101";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010334\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11160 = (uint8_t*) buffer++;
                                    *_tmp_11160 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102.size() != 0)  // CHOICE 102  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 102;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010335\033[0m| Choice selection: 102";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010336\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11161 = (uint8_t*) buffer++;
                                    *_tmp_11161 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103.size() != 0)  // CHOICE 103  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 103;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010337\033[0m| Choice selection: 103";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010338\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11162 = (uint8_t*) buffer++;
                                    *_tmp_11162 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104.size() != 0)  // CHOICE 104  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 104;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010339\033[0m| Choice selection: 104";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010340\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11163 = (uint8_t*) buffer++;
                                    *_tmp_11163 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105.size() != 0)  // CHOICE 105  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 105;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010341\033[0m| Choice selection: 105";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010342\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11164 = (uint8_t*) buffer++;
                                    *_tmp_11164 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106.size() != 0)  // CHOICE 106  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 106;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010343\033[0m| Choice selection: 106";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010344\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11165 = (uint8_t*) buffer++;
                                    *_tmp_11165 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107.size() != 0)  // CHOICE 107  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 107;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010345\033[0m| Choice selection: 107";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010346\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11166 = (uint8_t*) buffer++;
                                    *_tmp_11166 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108.size() != 0)  // CHOICE 108  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 108;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010347\033[0m| Choice selection: 108";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010348\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11167 = (uint8_t*) buffer++;
                                    *_tmp_11167 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109.size() != 0)  // CHOICE 109  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 109;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010349\033[0m| Choice selection: 109";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010350\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11168 = (uint8_t*) buffer++;
                                    *_tmp_11168 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110.size() != 0)  // CHOICE 110  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 110;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010351\033[0m| Choice selection: 110";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010352\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11169 = (uint8_t*) buffer++;
                                    *_tmp_11169 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111.size() != 0)  // CHOICE 111  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 111;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010353\033[0m| Choice selection: 111";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010354\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11170 = (uint8_t*) buffer++;
                                    *_tmp_11170 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112.size() != 0)  // CHOICE 112  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 112;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010355\033[0m| Choice selection: 112";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010356\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11171 = (uint8_t*) buffer++;
                                    *_tmp_11171 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113.size() != 0)  // CHOICE 113  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 113;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010357\033[0m| Choice selection: 113";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010358\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11172 = (uint8_t*) buffer++;
                                    *_tmp_11172 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114.size() != 0)  // CHOICE 114  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 114;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010359\033[0m| Choice selection: 114";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010360\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11173 = (uint8_t*) buffer++;
                                    *_tmp_11173 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115.size() != 0)  // CHOICE 115  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 115;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010361\033[0m| Choice selection: 115";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010362\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11174 = (uint8_t*) buffer++;
                                    *_tmp_11174 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116.size() != 0)  // CHOICE 116  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 116;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010363\033[0m| Choice selection: 116";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010364\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11175 = (uint8_t*) buffer++;
                                    *_tmp_11175 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117.size() != 0)  // CHOICE 117  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 117;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010365\033[0m| Choice selection: 117";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010366\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11176 = (uint8_t*) buffer++;
                                    *_tmp_11176 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118.size() != 0)  // CHOICE 118  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 118;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010367\033[0m| Choice selection: 118";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010368\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11177 = (uint8_t*) buffer++;
                                    *_tmp_11177 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119.size() != 0)  // CHOICE 119  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 119;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010369\033[0m| Choice selection: 119";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010370\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11178 = (uint8_t*) buffer++;
                                    *_tmp_11178 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120.size() != 0)  // CHOICE 120  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 120;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010371\033[0m| Choice selection: 120";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010372\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11179 = (uint8_t*) buffer++;
                                    *_tmp_11179 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121.size() != 0)  // CHOICE 121  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 121;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010373\033[0m| Choice selection: 121";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010374\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11180 = (uint8_t*) buffer++;
                                    *_tmp_11180 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122.size() != 0)  // CHOICE 122  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 122;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010375\033[0m| Choice selection: 122";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010376\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11181 = (uint8_t*) buffer++;
                                    *_tmp_11181 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123.size() != 0)  // CHOICE 123  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 123;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010377\033[0m| Choice selection: 123";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010378\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11182 = (uint8_t*) buffer++;
                                    *_tmp_11182 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124.size() != 0)  // CHOICE 124  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 124;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010379\033[0m| Choice selection: 124";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010380\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11183 = (uint8_t*) buffer++;
                                    *_tmp_11183 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125.size() != 0)  // CHOICE 125  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 125;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010381\033[0m| Choice selection: 125";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010382\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11184 = (uint8_t*) buffer++;
                                    *_tmp_11184 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126.size() != 0)  // CHOICE 126  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 126;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010383\033[0m| Choice selection: 126";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010384\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11185 = (uint8_t*) buffer++;
                                    *_tmp_11185 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127.size() != 0)  // CHOICE 127  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 127;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010385\033[0m| Choice selection: 127";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010386\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11186 = (uint8_t*) buffer++;
                                    *_tmp_11186 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128.size() != 0)  // CHOICE 128  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_326 = 128;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010387\033[0m| Choice selection: 128";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010388\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11187 = (uint8_t*) buffer++;
                                    *_tmp_11187 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(*_choice_326) << ") selected in CHOICE CauseCodeChoice in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc'; message dropped.";
                                    return -1;
                                }
                                
                                if(*_ext_flag_5261) {
                                }
                        }
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods.size() != 0) {
                            // Field:  type(DangerousGoodsExtended) name(carrying_dangerous_goods) extGroup(0)
                                // DangerousGoodsExtended  SEQUENCE
                                    //  dangerousGoodsType  DangerousGoodsBasic                            
                                    //  unNumber            DangerousGoodsExtended_unNumber                
                                    //  elevatedTemperature DangerousGoodsExtended_elevatedTemperature     
                                    //  tunnelsRestricted   DangerousGoodsExtended_tunnelsRestricted       
                                    //  limitedQuantity     DangerousGoodsExtended_limitedQuantity         
                                    //  emergencyActionCode DangerousGoodsExtended_emergencyActionCode   OPTIONAL  
                                    //  phoneNumber         PhoneNumber                                  OPTIONAL  
                                    //  companyName         DangerousGoodsExtended_companyName           OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_5392 = (uint8_t*) buffer++;  // Write extension flag for DangerousGoodsExtended
                                *_ext_flag_5392 = 0;  
                                
                                // Optional fields bytemap
                                char* _tmp_11189 = (char*) buffer++;
                                *_tmp_11189 = (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010389\033[0m| Optional field emergency_action_code = " << *_tmp_11189;
                                char* _tmp_11190 = (char*) buffer++;
                                *_tmp_11190 = (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010390\033[0m| Optional field phone_number = " << *_tmp_11190;
                                char* _tmp_11191 = (char*) buffer++;
                                *_tmp_11191 = (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010391\033[0m| Optional field company_name = " << *_tmp_11191;
                                
                                // Field:  type(DangerousGoodsBasic) name(dangerous_goods_type) extGroup(0)
                                // Enumerated
                                // INT32  min(0) max(19) span(20) dataType(Int32)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m010392\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value) << 
                                                 " denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value);
                                }
                                
                                uint8_t* _tmp_11192 = (uint8_t*)buffer;
                                buffer += 1;
                                *_tmp_11192 = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value; 
                                __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value; 
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 19) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value' (" << __aux64__ << ") exceeds max allowable (19); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DangerousGoodsExtended_unNumber) name(un_number) extGroup(0)
                                // Integer
                                
                                // UINT16  min(0) max(9999) span(10000) dataType(UInt16)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m010393\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value) << 
                                                 " denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value: " << ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value;
                                }
                                
                                uint16_t* _tmp_11193 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_11193 = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value; 
                                __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value;
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 9999) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value' (" << __aux64__ << ") exceeds max allowable (9999); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DangerousGoodsExtended_elevatedTemperature) name(elevated_temperature) extGroup(0)
                                // Value
                                // Boolean
                                uint8_t* _tmp_11194 = (uint8_t*)buffer++;
                                *_tmp_11194 = (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].elevated_temperature.value ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010394\033[0m| denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].elevated_temperature: " << (*_tmp_11194);
                                
                                // Field:  type(DangerousGoodsExtended_tunnelsRestricted) name(tunnels_restricted) extGroup(0)
                                // Value
                                // Boolean
                                uint8_t* _tmp_11195 = (uint8_t*)buffer++;
                                *_tmp_11195 = (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].tunnels_restricted.value ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010395\033[0m| denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].tunnels_restricted: " << (*_tmp_11195);
                                
                                // Field:  type(DangerousGoodsExtended_limitedQuantity) name(limited_quantity) extGroup(0)
                                // Value
                                // Boolean
                                uint8_t* _tmp_11196 = (uint8_t*)buffer++;
                                *_tmp_11196 = (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].limited_quantity.value ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010396\033[0m| denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].limited_quantity: " << (*_tmp_11196);
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code.size() != 0) {
                                    // Field:  type(DangerousGoodsExtended_emergencyActionCode) name(emergency_action_code) extGroup(0)
                                    // Text
                                    
                                    // TEXT  min(1) max(24) span(24)
                                    uint8_t* _tmp_11197 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value.size();
                                    
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value.size() < 1) {
                                        logger->warning() << "Error: Length of 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value) << " is less than allowable (1); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value.size() > 24) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value) << " exceeds max allowable (24); message dropped.";
                                        return -1;
                                    }
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010397\033[0m| denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value.size(): " << 
                                                    static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value.size());
                                    
                                    if(__aux64__ > 24) __aux64__ = 24;
                                    *_tmp_11197 = __aux64__ - 1;
                                    buffer += 1;
                                    
                                    int __ifl = __aux64__;
                                    for(int l = 0; l < __ifl; l++) {  // 24
                                        char* __tmp__ = (char*)buffer++;
                                        *__tmp__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value.c_str()[l];
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number.size() != 0) {
                                    // Field:  type(PhoneNumber) name(phone_number) extGroup(0)
                                    // Text
                                    
                                    // TEXT  min(1) max(16) span(16)
                                    uint8_t* _tmp_11198 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value.size();
                                    
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value.size() < 1) {
                                        logger->warning() << "Error: Length of 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value) << " is less than allowable (1); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value.size() > 16) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value) << " exceeds max allowable (16); message dropped.";
                                        return -1;
                                    }
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010398\033[0m| denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value.size(): " << 
                                                    static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value.size());
                                    
                                    if(__aux64__ > 16) __aux64__ = 16;
                                    *_tmp_11198 = __aux64__ - 1;
                                    buffer += 1;
                                    
                                    int __ifm = __aux64__;
                                    for(int m = 0; m < __ifm; m++) {  // 16
                                        char* __tmp__ = (char*)buffer++;
                                        *__tmp__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value.c_str()[m];
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name.size() != 0) {
                                    // Field:  type(DangerousGoodsExtended_companyName) name(company_name) extGroup(0)
                                    // Text
                                    
                                    // TEXT  min(1) max(24) span(24)
                                    uint8_t* _tmp_11199 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value.size();
                                    
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value.size() < 1) {
                                        logger->warning() << "Error: Length of 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value) << " is less than allowable (1); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value.size() > 24) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value) << " exceeds max allowable (24); message dropped.";
                                        return -1;
                                    }
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010399\033[0m| denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value.size(): " << 
                                                    static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value.size());
                                    
                                    if(__aux64__ > 24) __aux64__ = 24;
                                    *_tmp_11199 = __aux64__ - 1;
                                    buffer += 1;
                                    
                                    int __ifn = __aux64__;
                                    for(int n = 0; n < __ifn; n++) {  // 24
                                        char* __tmp__ = (char*)buffer++;
                                        *__tmp__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value.c_str()[n];
                                    }
                                }
                                
                                if(*_ext_flag_5392) {
                                }
                        }
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants.size() != 0) {
                            // Field:  type(NumberOfOccupants) name(number_of_occupants) extGroup(0)
                            // Integer
                            
                            // UINT8  min(0) max(127) span(128) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m010400\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value) << 
                                             " denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value);
                            }
                            
                            uint8_t* _tmp_11201 = (uint8_t*) buffer++;
                            *_tmp_11201 = ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value; 
                            __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                return -1;
                            }
                        }
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification.size() != 0) {
                            // Field:  type(VehicleIdentification) name(vehicle_identification) extGroup(0)
                                // VehicleIdentification  SEQUENCE
                                    //  wMInumber  WMInumber    OPTIONAL  
                                    //  vDS        VDS          OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_5396 = (uint8_t*) buffer++;  // Write extension flag for VehicleIdentification
                                *_ext_flag_5396 = 0;  
                                
                                // Optional fields bytemap
                                char* _tmp_11202 = (char*) buffer++;
                                *_tmp_11202 = (ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010401\033[0m| Optional field w_m_inumber = " << *_tmp_11202;
                                char* _tmp_11203 = (char*) buffer++;
                                *_tmp_11203 = (ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010402\033[0m| Optional field v_ds = " << *_tmp_11203;
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber.size() != 0) {
                                    // Field:  type(WMInumber) name(w_m_inumber) extGroup(0)
                                    // Text
                                    
                                    // TEXT  min(1) max(3) span(3)
                                    uint8_t* _tmp_11204 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value.size();
                                    
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value.size() < 1) {
                                        logger->warning() << "Error: Length of 'denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value) << " is less than allowable (1); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value.size() > 3) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value) << " exceeds max allowable (3); message dropped.";
                                        return -1;
                                    }
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010403\033[0m| denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value.size(): " << 
                                                    static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value.size());
                                    
                                    if(__aux64__ > 3) __aux64__ = 3;
                                    *_tmp_11204 = __aux64__ - 1;
                                    buffer += 1;
                                    
                                    int __ifo = __aux64__;
                                    for(int o = 0; o < __ifo; o++) {  // 3
                                        char* __tmp__ = (char*)buffer++;
                                        *__tmp__ = ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value.c_str()[o];
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds.size() != 0) {
                                    // Field:  type(VDS) name(v_ds) extGroup(0)
                                    // Text
                                    
                                    // TEXT  min(6) max(6) span(1)
                                    uint8_t* _tmp_11205 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value.size();
                                    
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value.size() < 6) {
                                        logger->warning() << "Error: Length of 'denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value) << " is less than allowable (6); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value.size() > 6) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value) << " exceeds max allowable (6); message dropped.";
                                        return -1;
                                    }
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010404\033[0m| denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value.size(): " << 
                                                    static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value.size());
                                    
                                    if(__aux64__ > 6) __aux64__ = 6;
                                    *_tmp_11205 = __aux64__ - 6;
                                    buffer += 1;
                                    
                                    int __ifp = __aux64__;
                                    for(int p = 0; p < __ifp; p++) {  // 6
                                        char* __tmp__ = (char*)buffer++;
                                        *__tmp__ = ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value.c_str()[p];
                                    }
                                }
                                
                                if(*_ext_flag_5396) {
                                }
                        }
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type.size() != 0) {
                            // Field:  type(EnergyStorageType) name(energy_storage_type) extGroup(0)
                            // BitString
                            // BIT_STRING  min(7) max(7) span(1)
                            if(debug)
                                logger->debug() << "|\033[38;5;94m010405\033[0m| denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values.size());
                            
                            if(ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values.size() < 7) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values.size()) << " is less than allowable (7); message dropped.";
                                return -1;
                            }
                            if(ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values.size() > 7) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values.size()) << " exceeds max allowable (7); message dropped.";
                                return -1;
                            }
                            
                            uint8_t* _tmp_11207 = (uint8_t*)buffer;
                            __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values.size();
                            if(__aux64__ > 7) __aux64__ = 7;
                            *_tmp_11207 = __aux64__ - 7;
                            buffer += 1;
                            
                            int __ifq = __aux64__;
                            for(int q = 0; q < __ifq; q++) {
                                uint8_t* __b__ = (uint8_t*)buffer++;
                                *__b__ = (ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values[q]? 1: 0);
                            }
                        }
                }
                
                if(*_ext_flag_5093) {
                    // Write number of extensions 
                    uint8_t* _tmp_11208 = (uint8_t*) buffer++;
                    *_tmp_11208 = 1;
                    
                    // Write Bytemap
                    // extension group #1)
                    uint8_t* _tmp_11209 = (uint8_t*) buffer++;
                    *_tmp_11209 = (ros->denm.alacarte[0].road_configuration.size() != 0 || ros->denm.alacarte[0].precrash.size() != 0) ? 1 : 0;
                    
                    // OpenType length variable 
                    uint16_t* _tmp_11210_openType = (uint16_t*) buffer;
                    buffer += 2;
                    const uint8_t *_tmp_11211_start = buffer; // Starting point
                    
                    // Optional fields bytemap
                    uint8_t* _tmp_11212 = (uint8_t*)buffer++;
                    *_tmp_11212 = (ros->denm.alacarte[0].road_configuration.size() != 0 ? 1: 0);
                    
                    uint8_t* _tmp_11213 = (uint8_t*)buffer++;
                    *_tmp_11213 = (ros->denm.alacarte[0].precrash.size() != 0 ? 1: 0);
                    
                    if(ros->denm.alacarte[0].road_configuration.size() != 0) {
                        // Field:  type(RoadConfigurationContainer) name(road_configuration) extGroup(1)
                            // RoadConfigurationContainer  SEQUENCE
                                //  roadConfigurationConfidence  MetaInformation                  
                                //  roadConfigurationSectionList RoadConfigurationSectionList     
                                //  ...
                            uint8_t* _ext_flag_5397 = (uint8_t*) buffer++;  // Write extension flag for RoadConfigurationContainer
                            *_ext_flag_5397 = 0;  
                            
                            // Optional fields bytemap
                            
                            // Field:  type(MetaInformation) name(road_configuration_confidence) extGroup(0)
                                // MetaInformation  SEQUENCE
                                    //  usedDetectionInformation SensorTypes               
                                    //  usedStoredInformation    StoredInformationType     
                                    //  confidenceValue          ConfidenceLevel         OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_5398 = (uint8_t*) buffer++;  // Write extension flag for MetaInformation
                                *_ext_flag_5398 = 0;  
                                
                                // Optional fields bytemap
                                char* _tmp_11214 = (char*) buffer++;
                                *_tmp_11214 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010406\033[0m| Optional field confidence_value = " << *_tmp_11214;
                                
                                // Field:  type(SensorTypes) name(used_detection_information) extGroup(0)
                                // BitString
                                // BIT_STRING  min(16) max(16) span(1)
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010407\033[0m| denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values.size());
                                
                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values.size() < 16) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.value' " << (ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values.size()) << " is less than allowable (16); message dropped.";
                                    return -1;
                                }
                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values.size() > 16) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.value' " << (ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values.size()) << " exceeds max allowable (16); message dropped.";
                                    return -1;
                                }
                                
                                uint8_t* _ext_flag_5399 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.
                                *_ext_flag_5399 = 0; 
                                
                                uint8_t* _tmp_11215 = (uint8_t*)buffer;
                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values.size();
                                if(__aux64__ > 16) __aux64__ = 16;
                                *_tmp_11215 = __aux64__ - 16;
                                buffer += 1;
                                
                                int __ifr = __aux64__;
                                for(int r = 0; r < __ifr; r++) {
                                    uint8_t* __b__ = (uint8_t*)buffer++;
                                    *__b__ = (ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values[r]? 1: 0);
                                }
                                
                                // Field:  type(StoredInformationType) name(used_stored_information) extGroup(0)
                                // BitString
                                // BIT_STRING  min(1) max(168) span(168)
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010408\033[0m| denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values.size());
                                
                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values.size() < 1) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.value' " << (ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values.size()) << " is less than allowable (1); message dropped.";
                                    return -1;
                                }
                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values.size() > 168) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.value' " << (ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values.size()) << " exceeds max allowable (168); message dropped.";
                                    return -1;
                                }
                                
                                uint8_t* _ext_flag_5400 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.
                                *_ext_flag_5400 = 0; 
                                
                                uint8_t* _tmp_11216 = (uint8_t*)buffer;
                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values.size();
                                if(__aux64__ > 168) __aux64__ = 168;
                                *_tmp_11216 = __aux64__ - 1;
                                buffer += 1;
                                
                                int __ifs = __aux64__;
                                for(int s = 0; s < __ifs; s++) {
                                    uint8_t* __b__ = (uint8_t*)buffer++;
                                    *__b__ = (ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values[s]? 1: 0);
                                }
                                
                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value.size() != 0) {
                                    // Field:  type(ConfidenceLevel) name(confidence_value) extGroup(0)
                                    // Integer
                                    
                                    // UINT8  min(1) max(101) span(101) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010409\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value) << 
                                                     " denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11217 = (uint8_t*) buffer++;
                                    __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value - 1;
                                    *_tmp_11217 = __aux64__;
                                    __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value' (" << __aux64__ << ") less than (1); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 101) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value' (" << __aux64__ << ") exceeds max allowable (101); message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(*_ext_flag_5398) {
                                }
                            
                            // Field:  type(RoadConfigurationSectionList) name(road_configuration_section_list) extGroup(0)
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(8) span(8) ext(true)
                            uint8_t* _ext_flag_5402 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.
                            *_ext_flag_5402 = 0; 
                            
                            __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements.size();
                            if(__aux64__ > 8) __aux64__ = 8;
                            uint16_t* _tmp_11219 = (uint16_t*)buffer;
                            buffer += 2;
                            *_tmp_11219 = __aux64__ - 1;
                            
                            int __ift = __aux64__;
                            for(int t = 0; t < __ift; t++) { 
                                
                                    // RoadConfigurationSection  SEQUENCE
                                        //  roadSectionDefinition RoadSectionDefinition      
                                        //  roadType              RoadType                 OPTIONAL  
                                        //  laneConfiguration     BasicLaneConfiguration   OPTIONAL  
                                        //  mapemConfiguration    MapemConfiguration       OPTIONAL  
                                        //  ...
                                    uint8_t* _ext_flag_5403 = (uint8_t*) buffer++;  // Write extension flag for RoadConfigurationSection
                                    *_ext_flag_5403 = 0;  
                                    
                                    // Optional fields bytemap
                                    char* _tmp_11220 = (char*) buffer++;
                                    *_tmp_11220 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_type.size() != 0 ? 1 : 0);
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010411\033[0m| Optional field road_type = " << *_tmp_11220;
                                    char* _tmp_11221 = (char*) buffer++;
                                    *_tmp_11221 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration.size() != 0 ? 1 : 0);
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010412\033[0m| Optional field lane_configuration = " << *_tmp_11221;
                                    char* _tmp_11222 = (char*) buffer++;
                                    *_tmp_11222 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration.size() != 0 ? 1 : 0);
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010413\033[0m| Optional field mapem_configuration = " << *_tmp_11222;
                                    
                                    // Field:  type(RoadSectionDefinition) name(road_section_definition) extGroup(0)
                                        // RoadSectionDefinition  SEQUENCE
                                            //  startingPointSection GeoPosition                                    
                                            //  lengthOfSection      StandardLength2B                             OPTIONAL  
                                            //  endingPointSection   GeoPosition                                  OPTIONAL  
                                            //  connectedPaths       PathReferences                                 
                                            //  includedPaths        PathReferences                                 
                                            //  isEventZoneIncluded  RoadSectionDefinition_isEventZoneIncluded      
                                            //  isEventZoneConnected RoadSectionDefinition_isEventZoneConnected     
                                            //  ...
                                        uint8_t* _ext_flag_5404 = (uint8_t*) buffer++;  // Write extension flag for RoadSectionDefinition
                                        *_ext_flag_5404 = 0;  
                                        
                                        // Optional fields bytemap
                                        char* _tmp_11223 = (char*) buffer++;
                                        *_tmp_11223 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.length_of_section.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m010414\033[0m| Optional field length_of_section = " << *_tmp_11223;
                                        char* _tmp_11224 = (char*) buffer++;
                                        *_tmp_11224 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.ending_point_section.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m010415\033[0m| Optional field ending_point_section = " << *_tmp_11224;
                                        
                                        // Field:  type(GeoPosition) name(starting_point_section) extGroup(0)
                                            // GeoPosition  SEQUENCE
                                                //  latitude   Latitude          
                                                //  longitude  Longitude         
                                                //  altitude   AltitudeValue     
                                            // Optional fields bytemap
                                            
                                            // Field:  type(Latitude) name(latitude) extGroup(0)
                                            // Real
                                            
                                            // DOUBLE  min(-900000000) max(900000001) span(1800000002) scaleDivisor(1.0E7) dataType(Double)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m010416\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.starting_point_section.latitude.value) << 
                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.starting_point_section.latitude.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.starting_point_section.latitude.value;
                                            }
                                            
                                            double _tmp_11226 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.starting_point_section.latitude.value;
                                            _tmp_11226 *= 1.0E7;
                                            __aux64__ = static_cast<uint64_t>(_tmp_11226);
                                            _tmp_11226 -= -900000000;
                                            uint32_t* _tmp_11225 = (uint32_t*) buffer; buffer += 4;
                                            *_tmp_11225 = static_cast<uint32_t>(_tmp_11226);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -900000000) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.starting_point_section.latitude.value' (" << __aux64__ << ") less than (-900000000); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 900000001) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.starting_point_section.latitude.value' (" << __aux64__ << ") exceeds max allowable (900000001); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(Longitude) name(longitude) extGroup(0)
                                            // Real
                                            
                                            // DOUBLE  min(-1800000000) max(1800000001) span(3600000002) scaleDivisor(1.0E7) dataType(Double)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m010417\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.starting_point_section.longitude.value) << 
                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.starting_point_section.longitude.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.starting_point_section.longitude.value;
                                            }
                                            
                                            double _tmp_11228 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.starting_point_section.longitude.value;
                                            _tmp_11228 *= 1.0E7;
                                            __aux64__ = static_cast<uint64_t>(_tmp_11228);
                                            _tmp_11228 -= -1800000000;
                                            uint32_t* _tmp_11227 = (uint32_t*) buffer; buffer += 4;
                                            *_tmp_11227 = static_cast<uint32_t>(_tmp_11228);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -1800000000) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.starting_point_section.longitude.value' (" << __aux64__ << ") less than (-1800000000); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 1800000001) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.starting_point_section.longitude.value' (" << __aux64__ << ") exceeds max allowable (1800000001); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(AltitudeValue) name(altitude) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(-100000) max(800001) span(900002) scaleDivisor(100.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m010418\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.starting_point_section.altitude.value) << 
                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.starting_point_section.altitude.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.starting_point_section.altitude.value;
                                            }
                                            
                                            float _tmp_11230 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.starting_point_section.altitude.value;
                                            _tmp_11230 *= 100.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_11230);
                                            _tmp_11230 -= -100000;
                                            uint32_t* _tmp_11229 = (uint32_t*) buffer; buffer += 4;
                                            *_tmp_11229 = static_cast<uint32_t>(_tmp_11230);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -100000) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.starting_point_section.altitude.value' (" << __aux64__ << ") less than (-100000); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 800001) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.starting_point_section.altitude.value' (" << __aux64__ << ") exceeds max allowable (800001); message dropped.";
                                                return -1;
                                            }
                                        
                                        if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.length_of_section.size() != 0) {
                                            // Field:  type(StandardLength2B) name(length_of_section) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(0) max(65535) span(65536) scaleDivisor(10.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m010419\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.length_of_section[0].value) << 
                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.length_of_section[0].value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.length_of_section[0].value;
                                            }
                                            
                                            float _tmp_11232 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.length_of_section[0].value;
                                            _tmp_11232 *= 10.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_11232);
                                            uint16_t* _tmp_11231 = (uint16_t*) buffer; buffer += 2;
                                            *_tmp_11231 = static_cast<uint16_t>(_tmp_11232);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.length_of_section[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.length_of_section[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.ending_point_section.size() != 0) {
                                            // Field:  type(GeoPosition) name(ending_point_section) extGroup(0)
                                                // GeoPosition  SEQUENCE
                                                    //  latitude   Latitude          
                                                    //  longitude  Longitude         
                                                    //  altitude   AltitudeValue     
                                                // Optional fields bytemap
                                                
                                                // Field:  type(Latitude) name(latitude) extGroup(0)
                                                // Real
                                                
                                                // DOUBLE  min(-900000000) max(900000001) span(1800000002) scaleDivisor(1.0E7) dataType(Double)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010420\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.ending_point_section[0].latitude.value) << 
                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.ending_point_section[0].latitude.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.ending_point_section[0].latitude.value;
                                                }
                                                
                                                double _tmp_11234 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.ending_point_section[0].latitude.value;
                                                _tmp_11234 *= 1.0E7;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11234);
                                                _tmp_11234 -= -900000000;
                                                uint32_t* _tmp_11233 = (uint32_t*) buffer; buffer += 4;
                                                *_tmp_11233 = static_cast<uint32_t>(_tmp_11234);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -900000000) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.ending_point_section[0].latitude.value' (" << __aux64__ << ") less than (-900000000); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 900000001) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.ending_point_section[0].latitude.value' (" << __aux64__ << ") exceeds max allowable (900000001); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(Longitude) name(longitude) extGroup(0)
                                                // Real
                                                
                                                // DOUBLE  min(-1800000000) max(1800000001) span(3600000002) scaleDivisor(1.0E7) dataType(Double)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010421\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.ending_point_section[0].longitude.value) << 
                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.ending_point_section[0].longitude.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.ending_point_section[0].longitude.value;
                                                }
                                                
                                                double _tmp_11236 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.ending_point_section[0].longitude.value;
                                                _tmp_11236 *= 1.0E7;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11236);
                                                _tmp_11236 -= -1800000000;
                                                uint32_t* _tmp_11235 = (uint32_t*) buffer; buffer += 4;
                                                *_tmp_11235 = static_cast<uint32_t>(_tmp_11236);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -1800000000) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.ending_point_section[0].longitude.value' (" << __aux64__ << ") less than (-1800000000); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 1800000001) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.ending_point_section[0].longitude.value' (" << __aux64__ << ") exceeds max allowable (1800000001); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AltitudeValue) name(altitude) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(-100000) max(800001) span(900002) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010422\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.ending_point_section[0].altitude.value) << 
                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.ending_point_section[0].altitude.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.ending_point_section[0].altitude.value;
                                                }
                                                
                                                float _tmp_11238 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.ending_point_section[0].altitude.value;
                                                _tmp_11238 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11238);
                                                _tmp_11238 -= -100000;
                                                uint32_t* _tmp_11237 = (uint32_t*) buffer; buffer += 4;
                                                *_tmp_11237 = static_cast<uint32_t>(_tmp_11238);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -100000) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.ending_point_section[0].altitude.value' (" << __aux64__ << ") less than (-100000); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 800001) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.ending_point_section[0].altitude.value' (" << __aux64__ << ") exceeds max allowable (800001); message dropped.";
                                                    return -1;
                                                }
                                        }
                                        
                                        // Field:  type(PathReferences) name(connected_paths) extGroup(0)
                                        // SequenceOf
                                        // Data Type UInt8
                                        // SEQUENCE_OF  min(1) max(14) span(14) ext(false)
                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.connected_paths.elements.size();
                                        if(__aux64__ > 14) __aux64__ = 14;
                                        uint16_t* _tmp_11239 = (uint16_t*)buffer;
                                        buffer += 2;
                                        *_tmp_11239 = __aux64__ - 1;
                                        
                                        int __ifu = __aux64__;
                                        for(int u = 0; u < __ifu; u++) { 
                                            
                                            // Integer
                                            
                                            // UINT8  min(0) max(14) span(15) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m010424\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.connected_paths.elements[u].value) << 
                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.connected_paths.elements[u].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.connected_paths.elements[u].value);
                                            }
                                            
                                            uint8_t* _tmp_11240 = (uint8_t*) buffer++;
                                            *_tmp_11240 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.connected_paths.elements[u].value; 
                                            __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.connected_paths.elements[u].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.connected_paths.elements[u].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.connected_paths.elements[u].value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                return -1;
                                            }
                                            
                                        }
                                        
                                        // Field:  type(PathReferences) name(included_paths) extGroup(0)
                                        // SequenceOf
                                        // Data Type UInt8
                                        // SEQUENCE_OF  min(1) max(14) span(14) ext(false)
                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.included_paths.elements.size();
                                        if(__aux64__ > 14) __aux64__ = 14;
                                        uint16_t* _tmp_11241 = (uint16_t*)buffer;
                                        buffer += 2;
                                        *_tmp_11241 = __aux64__ - 1;
                                        
                                        int __ifv = __aux64__;
                                        for(int v = 0; v < __ifv; v++) { 
                                            
                                            // Integer
                                            
                                            // UINT8  min(0) max(14) span(15) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m010426\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.included_paths.elements[v].value) << 
                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.included_paths.elements[v].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.included_paths.elements[v].value);
                                            }
                                            
                                            uint8_t* _tmp_11242 = (uint8_t*) buffer++;
                                            *_tmp_11242 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.included_paths.elements[v].value; 
                                            __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.included_paths.elements[v].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.included_paths.elements[v].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.included_paths.elements[v].value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                return -1;
                                            }
                                            
                                        }
                                        
                                        // Field:  type(RoadSectionDefinition_isEventZoneIncluded) name(is_event_zone_included) extGroup(0)
                                        // Value
                                        // Boolean
                                        uint8_t* _tmp_11243 = (uint8_t*)buffer++;
                                        *_tmp_11243 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.is_event_zone_included.value ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m010427\033[0m| denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.is_event_zone_included: " << (*_tmp_11243);
                                        
                                        // Field:  type(RoadSectionDefinition_isEventZoneConnected) name(is_event_zone_connected) extGroup(0)
                                        // Value
                                        // Boolean
                                        uint8_t* _tmp_11244 = (uint8_t*)buffer++;
                                        *_tmp_11244 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.is_event_zone_connected.value ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m010428\033[0m| denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_section_definition.is_event_zone_connected: " << (*_tmp_11244);
                                        
                                        if(*_ext_flag_5404) {
                                        }
                                    
                                    if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_type.size() != 0) {
                                        // Field:  type(RoadType) name(road_type) extGroup(0)
                                        // Enumerated
                                        // INT32  min(0) max(3) span(4) dataType(Int32)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m010429\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_type[0].value) << 
                                                         " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_type[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_type[0].value);
                                        }
                                        
                                        uint8_t* _tmp_11246 = (uint8_t*)buffer;
                                        buffer += 1;
                                        *_tmp_11246 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_type[0].value; 
                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_type[0].value; 
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_type[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].road_type[0].value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                            return -1;
                                        }
                                    }
                                    
                                    if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration.size() != 0) {
                                        // Field:  type(BasicLaneConfiguration) name(lane_configuration) extGroup(0)
                                        // SequenceOf
                                        // Data Type UInt8
                                        // SEQUENCE_OF  min(1) max(16) span(16) ext(true)
                                        uint8_t* _ext_flag_5415 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].
                                        *_ext_flag_5415 = 0; 
                                        
                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements.size();
                                        if(__aux64__ > 16) __aux64__ = 16;
                                        uint16_t* _tmp_11247 = (uint16_t*)buffer;
                                        buffer += 2;
                                        *_tmp_11247 = __aux64__ - 1;
                                        
                                        int __ifw = __aux64__;
                                        for(int w = 0; w < __ifw; w++) { 
                                            
                                                // BasicLaneInformation  SEQUENCE
                                                    //  laneNumber            LanePosition      
                                                    //  direction             Direction         
                                                    //  laneWidth             LaneWidth       OPTIONAL  
                                                    //  connectingLane        LanePosition    OPTIONAL  
                                                    //  connectingRoadSection RoadSectionId   OPTIONAL  
                                                    //  ...
                                                uint8_t* _ext_flag_5416 = (uint8_t*) buffer++;  // Write extension flag for BasicLaneInformation
                                                *_ext_flag_5416 = 0;  
                                                
                                                // Optional fields bytemap
                                                char* _tmp_11248 = (char*) buffer++;
                                                *_tmp_11248 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].lane_width.size() != 0 ? 1 : 0);
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m010431\033[0m| Optional field lane_width = " << *_tmp_11248;
                                                char* _tmp_11249 = (char*) buffer++;
                                                *_tmp_11249 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_lane.size() != 0 ? 1 : 0);
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m010432\033[0m| Optional field connecting_lane = " << *_tmp_11249;
                                                char* _tmp_11250 = (char*) buffer++;
                                                *_tmp_11250 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_road_section.size() != 0 ? 1 : 0);
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m010433\033[0m| Optional field connecting_road_section = " << *_tmp_11250;
                                                
                                                // Field:  type(LanePosition) name(lane_number) extGroup(0)
                                                // Integer
                                                
                                                // INT8  min(-1) max(14) span(16) dataType(Int8)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010434\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].lane_number.value) << 
                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].lane_number.value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].lane_number.value);
                                                }
                                                
                                                uint8_t* _tmp_11251 = (uint8_t*) buffer++;
                                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].lane_number.value - -1;
                                                *_tmp_11251 = __aux64__;
                                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].lane_number.value;
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].lane_number.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].lane_number.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(Direction) name(direction) extGroup(0)
                                                // Integer
                                                
                                                // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010435\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].direction.value) << 
                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].direction.value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].direction.value);
                                                }
                                                
                                                uint8_t* _tmp_11252 = (uint8_t*) buffer++;
                                                *_tmp_11252 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].direction.value; 
                                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].direction.value;
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                                    return -1;
                                                }
                                                
                                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].lane_width.size() != 0) {
                                                    // Field:  type(LaneWidth) name(lane_width) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(0) max(1023) span(1024) scaleDivisor(100.0) dataType(Float)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m010436\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].lane_width[0].value) << 
                                                                     " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].lane_width[0].value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].lane_width[0].value;
                                                    }
                                                    
                                                    float _tmp_11254 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].lane_width[0].value;
                                                    _tmp_11254 *= 100.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_11254);
                                                    uint16_t* _tmp_11253 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_11253 = static_cast<uint16_t>(_tmp_11254);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].lane_width[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 1023) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].lane_width[0].value' (" << __aux64__ << ") exceeds max allowable (1023); message dropped.";
                                                        return -1;
                                                    }
                                                }
                                                
                                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_lane.size() != 0) {
                                                    // Field:  type(LanePosition) name(connecting_lane) extGroup(0)
                                                    // Integer
                                                    
                                                    // INT8  min(-1) max(14) span(16) dataType(Int8)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m010437\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_lane[0].value) << 
                                                                     " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_lane[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_lane[0].value);
                                                    }
                                                    
                                                    uint8_t* _tmp_11255 = (uint8_t*) buffer++;
                                                    __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_lane[0].value - -1;
                                                    *_tmp_11255 = __aux64__;
                                                    __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_lane[0].value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_lane[0].value' (" << __aux64__ << ") less than (-1); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_lane[0].value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                        return -1;
                                                    }
                                                }
                                                
                                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_road_section.size() != 0) {
                                                    // Field:  type(RoadSectionId) name(connecting_road_section) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT8  min(0) max(8) span(9) dataType(UInt8)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m010438\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_road_section[0].value) << 
                                                                     " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_road_section[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_road_section[0].value);
                                                    }
                                                    
                                                    uint8_t* _ext_flag_5421 = (uint8_t*) buffer++; // Extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_road_section[0].
                                                    *_ext_flag_5421 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_road_section[0].value >= 0 && ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_road_section[0].value <= 8) ? 0 : 1;
                                                    
                                                    if(*_ext_flag_5421) {
                                                        uint8_t* _tmp_11257 = (uint8_t*) buffer++; 
                                                        if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_road_section[0].value >= 0 && ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_road_section[0].value <= INT32_MAX) {
                                                            *_tmp_11257 = 0;
                                                        
                                                            uint32_t* _tmp_11256 = (uint32_t*)buffer; buffer += 4;
                                                            __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_road_section[0].value;
                                                            __aux64__ -= INT32_MIN;
                                                            *_tmp_11256 = __aux64__;
                                                        } 
                                                        else
                                                        {
                                                            *_tmp_11257 = 1;
                                                        
                                                            uint64_t* _tmp_11256 = (uint64_t*)buffer; buffer += 8;
                                                            __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_road_section[0].value;
                                                            __aux64__ -= INT64_MIN;
                                                            *_tmp_11256 = __aux64__;
                                                        }
                                                    } else {
                                                        uint8_t* _tmp_11256 = (uint8_t*) buffer++;
                                                        *_tmp_11256 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_road_section[0].value; 
                                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].lane_configuration[0].elements[w].connecting_road_section[0].value;
                                                    }
                                                }
                                                
                                                if(*_ext_flag_5416) {
                                                }
                                        }
                                    }
                                    
                                    if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration.size() != 0) {
                                        // Field:  type(MapemConfiguration) name(mapem_configuration) extGroup(0)
                                        // SequenceOf
                                        // Data Type UInt8
                                        // SEQUENCE_OF  min(1) max(16) span(16) ext(true)
                                        uint8_t* _ext_flag_5422 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].
                                        *_ext_flag_5422 = 0; 
                                        
                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements.size();
                                        if(__aux64__ > 16) __aux64__ = 16;
                                        uint16_t* _tmp_11259 = (uint16_t*)buffer;
                                        buffer += 2;
                                        *_tmp_11259 = __aux64__ - 1;
                                        
                                        int __ifx = __aux64__;
                                        for(int x = 0; x < __ifx; x++) { 
                                            
                                                // MapemElementReference  SEQUENCE
                                                    //  mapReference  MapReference          OPTIONAL  
                                                    //  laneIds       MapemLaneList         OPTIONAL  
                                                    //  connectionIds MapemConnectionList   OPTIONAL  
                                                    //  ...
                                                uint8_t* _ext_flag_5423 = (uint8_t*) buffer++;  // Write extension flag for MapemElementReference
                                                *_ext_flag_5423 = 0;  
                                                
                                                // Optional fields bytemap
                                                char* _tmp_11260 = (char*) buffer++;
                                                *_tmp_11260 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference.size() != 0 ? 1 : 0);
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m010440\033[0m| Optional field map_reference = " << *_tmp_11260;
                                                char* _tmp_11261 = (char*) buffer++;
                                                *_tmp_11261 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].lane_ids.size() != 0 ? 1 : 0);
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m010441\033[0m| Optional field lane_ids = " << *_tmp_11261;
                                                char* _tmp_11262 = (char*) buffer++;
                                                *_tmp_11262 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].connection_ids.size() != 0 ? 1 : 0);
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m010442\033[0m| Optional field connection_ids = " << *_tmp_11262;
                                                
                                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference.size() != 0) {
                                                    // Field:  type(MapReference) name(map_reference) extGroup(0)
                                                    // Choice
                                                       // #0  roadsegment   RoadSegmentReferenceId
                                                       // #1  intersection   IntersectionReferenceId
                                                    uint8_t* _choice_327 = (uint8_t*) buffer;
                                                    buffer++;
                                                    
                                                    if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].roadsegment.size() != 0) {  // CHOICE 0  fieldType(MapReference) 
                                                        *_choice_327 = 0;  // Setting choice selection
                                                    
                                                        if(debug)
                                                            logger->debug() << "|\033[38;5;94m010443\033[0m| Choice selection: 0";
                                                    
                                                            // RoadSegmentReferenceId  SEQUENCE
                                                                //  region     Identifier2B   OPTIONAL  
                                                                //  id         Identifier2B     
                                                            // Optional fields bytemap
                                                            char* _tmp_11263 = (char*) buffer++;
                                                            *_tmp_11263 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].roadsegment[0].region.size() != 0 ? 1 : 0);
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m010444\033[0m| Optional field region = " << *_tmp_11263;
                                                            
                                                            if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].roadsegment[0].region.size() != 0) {
                                                                // Field:  type(Identifier2B) name(region) extGroup(0)
                                                                // Integer
                                                                
                                                                // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m010445\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].roadsegment[0].region[0].value) << 
                                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].roadsegment[0].region[0].value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].roadsegment[0].region[0].value;
                                                                }
                                                                
                                                                uint16_t* _tmp_11264 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_11264 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].roadsegment[0].region[0].value; 
                                                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].roadsegment[0].region[0].value;
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                                    return -1;
                                                                }
                                                            }
                                                            
                                                            // Field:  type(Identifier2B) name(id) extGroup(0)
                                                            // Integer
                                                            
                                                            // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m010446\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].roadsegment[0].id.value) << 
                                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].roadsegment[0].id.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].roadsegment[0].id.value;
                                                            }
                                                            
                                                            uint16_t* _tmp_11265 = (uint16_t*) buffer; buffer += 2;
                                                            *_tmp_11265 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].roadsegment[0].id.value; 
                                                            __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].roadsegment[0].id.value;
                                                            
                                                            // MIN validator
                                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                return -1;
                                                            }
                                                            // MAX validator
                                                            if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                                return -1;
                                                            }
                                                    
                                                    }
                                                    else if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].intersection.size() != 0)  // CHOICE 1  fieldType(MapReference) 
                                                    {
                                                        *_choice_327 = 1;  // Setting choice selection
                                                    
                                                        if(debug)
                                                            logger->debug() << "|\033[38;5;94m010447\033[0m| Choice selection: 1";
                                                    
                                                            // IntersectionReferenceId  SEQUENCE
                                                                //  region     Identifier2B   OPTIONAL  
                                                                //  id         Identifier2B     
                                                            // Optional fields bytemap
                                                            char* _tmp_11266 = (char*) buffer++;
                                                            *_tmp_11266 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].intersection[0].region.size() != 0 ? 1 : 0);
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m010448\033[0m| Optional field region = " << *_tmp_11266;
                                                            
                                                            if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].intersection[0].region.size() != 0) {
                                                                // Field:  type(Identifier2B) name(region) extGroup(0)
                                                                // Integer
                                                                
                                                                // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m010449\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].intersection[0].region[0].value) << 
                                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].intersection[0].region[0].value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].intersection[0].region[0].value;
                                                                }
                                                                
                                                                uint16_t* _tmp_11267 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_11267 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].intersection[0].region[0].value; 
                                                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].intersection[0].region[0].value;
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                                    return -1;
                                                                }
                                                            }
                                                            
                                                            // Field:  type(Identifier2B) name(id) extGroup(0)
                                                            // Integer
                                                            
                                                            // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m010450\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].intersection[0].id.value) << 
                                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].intersection[0].id.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].intersection[0].id.value;
                                                            }
                                                            
                                                            uint16_t* _tmp_11268 = (uint16_t*) buffer; buffer += 2;
                                                            *_tmp_11268 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].intersection[0].id.value; 
                                                            __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].intersection[0].id.value;
                                                            
                                                            // MIN validator
                                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                return -1;
                                                            }
                                                            // MAX validator
                                                            if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                                return -1;
                                                            }
                                                    
                                                    }
                                                    else
                                                    {
                                                        logger->warning() << "Wrong option (" << static_cast<int>(*_choice_327) << ") selected in CHOICE MapReference in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].map_reference[0]'; message dropped.";
                                                        return -1;
                                                    }
                                                }
                                                
                                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].lane_ids.size() != 0) {
                                                    // Field:  type(MapemLaneList) name(lane_ids) extGroup(0)
                                                    // SequenceOf
                                                    // Data Type UInt8
                                                    // SEQUENCE_OF  min(1) max(8) span(8) ext(true)
                                                    uint8_t* _ext_flag_5429 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].lane_ids[0].
                                                    *_ext_flag_5429 = 0; 
                                                    
                                                    __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].lane_ids[0].elements.size();
                                                    if(__aux64__ > 8) __aux64__ = 8;
                                                    uint16_t* _tmp_11269 = (uint16_t*)buffer;
                                                    buffer += 2;
                                                    *_tmp_11269 = __aux64__ - 1;
                                                    
                                                    int __ify = __aux64__;
                                                    for(int y = 0; y < __ify; y++) { 
                                                        
                                                        // Integer
                                                        
                                                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                                        if(debug) {
                                                            logger->debug() << "|\033[38;5;94m010452\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].lane_ids[0].elements[y].value) << 
                                                                         " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].lane_ids[0].elements[y].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].lane_ids[0].elements[y].value);
                                                        }
                                                        
                                                        uint8_t* _tmp_11270 = (uint8_t*) buffer++;
                                                        *_tmp_11270 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].lane_ids[0].elements[y].value; 
                                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].lane_ids[0].elements[y].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].lane_ids[0].elements[y].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].lane_ids[0].elements[y].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                            return -1;
                                                        }
                                                        
                                                    }
                                                }
                                                
                                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].connection_ids.size() != 0) {
                                                    // Field:  type(MapemConnectionList) name(connection_ids) extGroup(0)
                                                    // SequenceOf
                                                    // Data Type UInt8
                                                    // SEQUENCE_OF  min(1) max(8) span(8) ext(true)
                                                    uint8_t* _ext_flag_5431 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].connection_ids[0].
                                                    *_ext_flag_5431 = 0; 
                                                    
                                                    __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].connection_ids[0].elements.size();
                                                    if(__aux64__ > 8) __aux64__ = 8;
                                                    uint16_t* _tmp_11271 = (uint16_t*)buffer;
                                                    buffer += 2;
                                                    *_tmp_11271 = __aux64__ - 1;
                                                    
                                                    int __ifz = __aux64__;
                                                    for(int z = 0; z < __ifz; z++) { 
                                                        
                                                        // Integer
                                                        
                                                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                                        if(debug) {
                                                            logger->debug() << "|\033[38;5;94m010454\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].connection_ids[0].elements[z].value) << 
                                                                         " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].connection_ids[0].elements[z].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].connection_ids[0].elements[z].value);
                                                        }
                                                        
                                                        uint8_t* _tmp_11272 = (uint8_t*) buffer++;
                                                        *_tmp_11272 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].connection_ids[0].elements[z].value; 
                                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].connection_ids[0].elements[z].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].connection_ids[0].elements[z].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[t].mapem_configuration[0].elements[x].connection_ids[0].elements[z].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                            return -1;
                                                        }
                                                        
                                                    }
                                                }
                                                
                                                if(*_ext_flag_5423) {
                                                }
                                        }
                                    }
                                    
                                    if(*_ext_flag_5403) {
                                    }
                            }
                            
                            if(*_ext_flag_5397) {
                            }
                    }
                    
                    if(ros->denm.alacarte[0].precrash.size() != 0) {
                        // Field:  type(PreCrashContainer) name(precrash) extGroup(1)
                            // PreCrashContainer  SEQUENCE
                                //  perceivedPreCrashObject  PerceivedObject                  
                                //  objectStationId          StationId                      OPTIONAL  
                                //  timeToCollision          DeltaTimeMilliSecondPositive   OPTIONAL  
                                //  impactSection            ObjectFace                     OPTIONAL  
                                //  estimatedBrakingDistance StandardLength12b              OPTIONAL  
                                //  ...
                            uint8_t* _ext_flag_5433 = (uint8_t*) buffer++;  // Write extension flag for PreCrashContainer
                            *_ext_flag_5433 = 0;  
                            
                            // Optional fields bytemap
                            char* _tmp_11276 = (char*) buffer++;
                            *_tmp_11276 = (ros->denm.alacarte[0].precrash[0].object_station_id.size() != 0 ? 1 : 0);
                            if(debug)
                                logger->debug() << "|\033[38;5;94m010455\033[0m| Optional field object_station_id = " << *_tmp_11276;
                            char* _tmp_11277 = (char*) buffer++;
                            *_tmp_11277 = (ros->denm.alacarte[0].precrash[0].time_to_collision.size() != 0 ? 1 : 0);
                            if(debug)
                                logger->debug() << "|\033[38;5;94m010456\033[0m| Optional field time_to_collision = " << *_tmp_11277;
                            char* _tmp_11278 = (char*) buffer++;
                            *_tmp_11278 = (ros->denm.alacarte[0].precrash[0].impact_section.size() != 0 ? 1 : 0);
                            if(debug)
                                logger->debug() << "|\033[38;5;94m010457\033[0m| Optional field impact_section = " << *_tmp_11278;
                            char* _tmp_11279 = (char*) buffer++;
                            *_tmp_11279 = (ros->denm.alacarte[0].precrash[0].estimated_braking_distance.size() != 0 ? 1 : 0);
                            if(debug)
                                logger->debug() << "|\033[38;5;94m010458\033[0m| Optional field estimated_braking_distance = " << *_tmp_11279;
                            
                            // Field:  type(PerceivedObject) name(perceived_pre_crash_object) extGroup(0)
                                // PerceivedObject  SEQUENCE
                                    //  objectId                           Identifier2B                                           OPTIONAL  
                                    //  measurementDeltaTime               DeltaTimeMilliSecondSigned                               
                                    //  position                           CartesianPosition3dWithConfidence                        
                                    //  velocity                           Velocity3dWithConfidence                               OPTIONAL  
                                    //  acceleration                       Acceleration3dWithConfidence                           OPTIONAL  
                                    //  angles                             EulerAnglesWithConfidence                              OPTIONAL  
                                    //  zAngularVelocity                   CartesianAngularVelocityComponent                      OPTIONAL  
                                    //  lowerTriangularCorrelationMatrices LowerTriangularPositiveSemidefiniteMatrices            OPTIONAL  
                                    //  objectDimensionZ                   ObjectDimension                                        OPTIONAL  
                                    //  objectDimensionY                   ObjectDimension                                        OPTIONAL  
                                    //  objectDimensionX                   ObjectDimension                                        OPTIONAL  
                                    //  objectAge                          PerceivedObject_DeltaTimeMilliSecondSigned_objectAge   OPTIONAL  
                                    //  objectPerceptionQuality            ObjectPerceptionQuality                                OPTIONAL  
                                    //  sensorIdList                       SequenceOfIdentifier1B                                 OPTIONAL  
                                    //  classification                     ObjectClassDescription                                 OPTIONAL  
                                    //  mapPosition                        MapPosition                                            OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_5434 = (uint8_t*) buffer++;  // Write extension flag for PerceivedObject
                                *_ext_flag_5434 = 0;  
                                
                                // Optional fields bytemap
                                char* _tmp_11280 = (char*) buffer++;
                                *_tmp_11280 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010459\033[0m| Optional field object_id = " << *_tmp_11280;
                                char* _tmp_11281 = (char*) buffer++;
                                *_tmp_11281 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010460\033[0m| Optional field velocity = " << *_tmp_11281;
                                char* _tmp_11282 = (char*) buffer++;
                                *_tmp_11282 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010461\033[0m| Optional field acceleration = " << *_tmp_11282;
                                char* _tmp_11283 = (char*) buffer++;
                                *_tmp_11283 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010462\033[0m| Optional field angles = " << *_tmp_11283;
                                char* _tmp_11284 = (char*) buffer++;
                                *_tmp_11284 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010463\033[0m| Optional field z_angular_velocity = " << *_tmp_11284;
                                char* _tmp_11285 = (char*) buffer++;
                                *_tmp_11285 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010464\033[0m| Optional field lower_triangular_correlation_matrices = " << *_tmp_11285;
                                char* _tmp_11286 = (char*) buffer++;
                                *_tmp_11286 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010465\033[0m| Optional field object_dimension_z = " << *_tmp_11286;
                                char* _tmp_11287 = (char*) buffer++;
                                *_tmp_11287 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010466\033[0m| Optional field object_dimension_y = " << *_tmp_11287;
                                char* _tmp_11288 = (char*) buffer++;
                                *_tmp_11288 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010467\033[0m| Optional field object_dimension_x = " << *_tmp_11288;
                                char* _tmp_11289 = (char*) buffer++;
                                *_tmp_11289 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010468\033[0m| Optional field object_age = " << *_tmp_11289;
                                char* _tmp_11290 = (char*) buffer++;
                                *_tmp_11290 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010469\033[0m| Optional field object_perception_quality = " << *_tmp_11290;
                                char* _tmp_11291 = (char*) buffer++;
                                *_tmp_11291 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010470\033[0m| Optional field sensor_id_list = " << *_tmp_11291;
                                char* _tmp_11292 = (char*) buffer++;
                                *_tmp_11292 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010471\033[0m| Optional field classification = " << *_tmp_11292;
                                char* _tmp_11293 = (char*) buffer++;
                                *_tmp_11293 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m010472\033[0m| Optional field map_position = " << *_tmp_11293;
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id.size() != 0) {
                                    // Field:  type(Identifier2B) name(object_id) extGroup(0)
                                    // Integer
                                    
                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010473\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value) << 
                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value;
                                    }
                                    
                                    uint16_t* _tmp_11294 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_11294 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                        return -1;
                                    }
                                }
                                
                                // Field:  type(DeltaTimeMilliSecondSigned) name(measurement_delta_time) extGroup(0)
                                // Real
                                
                                // FLOAT  min(-2048) max(2047) span(4096) scaleDivisor(1000.0) dataType(Float)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m010474\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value) << 
                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value;
                                }
                                
                                float _tmp_11296 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value;
                                _tmp_11296 *= 1000.0;
                                __aux64__ = static_cast<uint64_t>(_tmp_11296);
                                _tmp_11296 -= -2048;
                                uint16_t* _tmp_11295 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_11295 = static_cast<uint16_t>(_tmp_11296);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -2048) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value' (" << __aux64__ << ") less than (-2048); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 2047) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value' (" << __aux64__ << ") exceeds max allowable (2047); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(CartesianPosition3dWithConfidence) name(position) extGroup(0)
                                    // CartesianPosition3dWithConfidence  SEQUENCE
                                        //  xCoordinate CartesianCoordinateWithConfidence     
                                        //  yCoordinate CartesianCoordinateWithConfidence     
                                        //  zCoordinate CartesianCoordinateWithConfidence   OPTIONAL  
                                    // Optional fields bytemap
                                    char* _tmp_11297 = (char*) buffer++;
                                    *_tmp_11297 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate.size() != 0 ? 1 : 0);
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m010475\033[0m| Optional field z_coordinate = " << *_tmp_11297;
                                    
                                    // Field:  type(CartesianCoordinateWithConfidence) name(x_coordinate) extGroup(0)
                                        // CartesianCoordinateWithConfidence  SEQUENCE
                                            //  value      CartesianCoordinateLarge     
                                            //  confidence CoordinateConfidence         
                                        // Optional fields bytemap
                                        
                                        // Field:  type(CartesianCoordinateLarge) name(value) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m010476\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value;
                                        }
                                        
                                        float _tmp_11299 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value;
                                        _tmp_11299 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_11299);
                                        _tmp_11299 -= -131072;
                                        uint32_t* _tmp_11298 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_11298 = static_cast<uint32_t>(_tmp_11299);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -131072) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value' (" << __aux64__ << ") less than (-131072); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 131071) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value' (" << __aux64__ << ") exceeds max allowable (131071); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(CoordinateConfidence) name(confidence) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m010477\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value;
                                        }
                                        
                                        float _tmp_11301 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value;
                                        _tmp_11301 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_11301);
                                        _tmp_11301 -= 1;
                                        uint16_t* _tmp_11300 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_11300 = static_cast<uint16_t>(_tmp_11301);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 4096) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value' (" << __aux64__ << ") exceeds max allowable (4096); message dropped.";
                                            return -1;
                                        }
                                    
                                    // Field:  type(CartesianCoordinateWithConfidence) name(y_coordinate) extGroup(0)
                                        // CartesianCoordinateWithConfidence  SEQUENCE
                                            //  value      CartesianCoordinateLarge     
                                            //  confidence CoordinateConfidence         
                                        // Optional fields bytemap
                                        
                                        // Field:  type(CartesianCoordinateLarge) name(value) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m010478\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value;
                                        }
                                        
                                        float _tmp_11303 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value;
                                        _tmp_11303 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_11303);
                                        _tmp_11303 -= -131072;
                                        uint32_t* _tmp_11302 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_11302 = static_cast<uint32_t>(_tmp_11303);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -131072) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value' (" << __aux64__ << ") less than (-131072); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 131071) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value' (" << __aux64__ << ") exceeds max allowable (131071); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(CoordinateConfidence) name(confidence) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m010479\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value;
                                        }
                                        
                                        float _tmp_11305 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value;
                                        _tmp_11305 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_11305);
                                        _tmp_11305 -= 1;
                                        uint16_t* _tmp_11304 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_11304 = static_cast<uint16_t>(_tmp_11305);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 4096) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value' (" << __aux64__ << ") exceeds max allowable (4096); message dropped.";
                                            return -1;
                                        }
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate.size() != 0) {
                                        // Field:  type(CartesianCoordinateWithConfidence) name(z_coordinate) extGroup(0)
                                            // CartesianCoordinateWithConfidence  SEQUENCE
                                                //  value      CartesianCoordinateLarge     
                                                //  confidence CoordinateConfidence         
                                            // Optional fields bytemap
                                            
                                            // Field:  type(CartesianCoordinateLarge) name(value) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m010480\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value;
                                            }
                                            
                                            float _tmp_11307 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value;
                                            _tmp_11307 *= 100.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_11307);
                                            _tmp_11307 -= -131072;
                                            uint32_t* _tmp_11306 = (uint32_t*) buffer; buffer += 4;
                                            *_tmp_11306 = static_cast<uint32_t>(_tmp_11307);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -131072) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value' (" << __aux64__ << ") less than (-131072); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 131071) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value' (" << __aux64__ << ") exceeds max allowable (131071); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(CoordinateConfidence) name(confidence) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m010481\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value;
                                            }
                                            
                                            float _tmp_11309 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value;
                                            _tmp_11309 *= 100.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_11309);
                                            _tmp_11309 -= 1;
                                            uint16_t* _tmp_11308 = (uint16_t*) buffer; buffer += 2;
                                            *_tmp_11308 = static_cast<uint16_t>(_tmp_11309);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 4096) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (4096); message dropped.";
                                                return -1;
                                            }
                                    }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity.size() != 0) {
                                    // Field:  type(Velocity3dWithConfidence) name(velocity) extGroup(0)
                                    // Choice
                                       // #0  polarVelocity   VelocityPolarWithZ
                                       // #1  cartesianVelocity   VelocityCartesian
                                    uint8_t* _choice_328 = (uint8_t*) buffer;
                                    buffer++;
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity.size() != 0) {  // CHOICE 0  fieldType(Velocity3dWithConfidence) 
                                        *_choice_328 = 0;  // Setting choice selection
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m010482\033[0m| Choice selection: 0";
                                    
                                            // VelocityPolarWithZ  SEQUENCE
                                                //  velocityMagnitude Speed                 
                                                //  velocityDirection CartesianAngle        
                                                //  zVelocity         VelocityComponent   OPTIONAL  
                                            // Optional fields bytemap
                                            char* _tmp_11310 = (char*) buffer++;
                                            *_tmp_11310 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity.size() != 0 ? 1 : 0);
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m010483\033[0m| Optional field z_velocity = " << *_tmp_11310;
                                            
                                            // Field:  type(Speed) name(velocity_magnitude) extGroup(0)
                                                // Speed  SEQUENCE
                                                    //  speedValue      SpeedValue          
                                                    //  speedConfidence SpeedConfidence     
                                                // Optional fields bytemap
                                                
                                                // Field:  type(SpeedValue) name(speed_value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(16383) span(16384) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010484\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value;
                                                }
                                                
                                                float _tmp_11312 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value;
                                                _tmp_11312 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11312);
                                                uint16_t* _tmp_11311 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_11311 = static_cast<uint16_t>(_tmp_11312);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value' (" << __aux64__ << ") exceeds max allowable (16383); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(SpeedConfidence) name(speed_confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010485\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value);
                                                }
                                                
                                                float _tmp_11314 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value;
                                                _tmp_11314 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11314);
                                                _tmp_11314 -= 1;
                                                uint8_t* _tmp_11313 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_11313 = static_cast<uint8_t>(_tmp_11314);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                    return -1;
                                                }
                                            
                                            // Field:  type(CartesianAngle) name(velocity_direction) extGroup(0)
                                                // CartesianAngle  SEQUENCE
                                                    //  value      CartesianAngleValue     
                                                    //  confidence AngleConfidence         
                                                // Optional fields bytemap
                                                
                                                // Field:  type(CartesianAngleValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010486\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value;
                                                }
                                                
                                                float _tmp_11316 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value;
                                                _tmp_11316 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11316);
                                                uint16_t* _tmp_11315 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_11315 = static_cast<uint16_t>(_tmp_11316);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AngleConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010487\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value);
                                                }
                                                
                                                float _tmp_11318 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value;
                                                _tmp_11318 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11318);
                                                _tmp_11318 -= 1;
                                                uint8_t* _tmp_11317 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_11317 = static_cast<uint8_t>(_tmp_11318);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                    return -1;
                                                }
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity.size() != 0) {
                                                // Field:  type(VelocityComponent) name(z_velocity) extGroup(0)
                                                    // VelocityComponent  SEQUENCE
                                                        //  value      VelocityComponentValue     
                                                        //  confidence SpeedConfidence            
                                                    // Optional fields bytemap
                                                    
                                                    // Field:  type(VelocityComponentValue) name(value) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m010488\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value;
                                                    }
                                                    
                                                    float _tmp_11320 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value;
                                                    _tmp_11320 *= 100.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_11320);
                                                    _tmp_11320 -= -16383;
                                                    uint16_t* _tmp_11319 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_11319 = static_cast<uint16_t>(_tmp_11320);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value' (" << __aux64__ << ") less than (-16383); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value' (" << __aux64__ << ") exceeds max allowable (16383); message dropped.";
                                                        return -1;
                                                    }
                                                    
                                                    // Field:  type(SpeedConfidence) name(confidence) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m010489\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value);
                                                    }
                                                    
                                                    float _tmp_11322 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value;
                                                    _tmp_11322 *= 100.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_11322);
                                                    _tmp_11322 -= 1;
                                                    uint8_t* _tmp_11321 = (uint8_t*) buffer; buffer += 1;
                                                    *_tmp_11321 = static_cast<uint8_t>(_tmp_11322);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                        return -1;
                                                    }
                                            }
                                    
                                    }
                                    else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity.size() != 0)  // CHOICE 1  fieldType(Velocity3dWithConfidence) 
                                    {
                                        *_choice_328 = 1;  // Setting choice selection
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m010490\033[0m| Choice selection: 1";
                                    
                                            // VelocityCartesian  SEQUENCE
                                                //  xVelocity  VelocityComponent     
                                                //  yVelocity  VelocityComponent     
                                                //  zVelocity  VelocityComponent   OPTIONAL  
                                            // Optional fields bytemap
                                            char* _tmp_11323 = (char*) buffer++;
                                            *_tmp_11323 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity.size() != 0 ? 1 : 0);
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m010491\033[0m| Optional field z_velocity = " << *_tmp_11323;
                                            
                                            // Field:  type(VelocityComponent) name(x_velocity) extGroup(0)
                                                // VelocityComponent  SEQUENCE
                                                    //  value      VelocityComponentValue     
                                                    //  confidence SpeedConfidence            
                                                // Optional fields bytemap
                                                
                                                // Field:  type(VelocityComponentValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010492\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value;
                                                }
                                                
                                                float _tmp_11325 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value;
                                                _tmp_11325 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11325);
                                                _tmp_11325 -= -16383;
                                                uint16_t* _tmp_11324 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_11324 = static_cast<uint16_t>(_tmp_11325);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value' (" << __aux64__ << ") less than (-16383); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value' (" << __aux64__ << ") exceeds max allowable (16383); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(SpeedConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010493\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value);
                                                }
                                                
                                                float _tmp_11327 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value;
                                                _tmp_11327 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11327);
                                                _tmp_11327 -= 1;
                                                uint8_t* _tmp_11326 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_11326 = static_cast<uint8_t>(_tmp_11327);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                    return -1;
                                                }
                                            
                                            // Field:  type(VelocityComponent) name(y_velocity) extGroup(0)
                                                // VelocityComponent  SEQUENCE
                                                    //  value      VelocityComponentValue     
                                                    //  confidence SpeedConfidence            
                                                // Optional fields bytemap
                                                
                                                // Field:  type(VelocityComponentValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010494\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value;
                                                }
                                                
                                                float _tmp_11329 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value;
                                                _tmp_11329 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11329);
                                                _tmp_11329 -= -16383;
                                                uint16_t* _tmp_11328 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_11328 = static_cast<uint16_t>(_tmp_11329);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value' (" << __aux64__ << ") less than (-16383); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value' (" << __aux64__ << ") exceeds max allowable (16383); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(SpeedConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010495\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value);
                                                }
                                                
                                                float _tmp_11331 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value;
                                                _tmp_11331 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11331);
                                                _tmp_11331 -= 1;
                                                uint8_t* _tmp_11330 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_11330 = static_cast<uint8_t>(_tmp_11331);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                    return -1;
                                                }
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity.size() != 0) {
                                                // Field:  type(VelocityComponent) name(z_velocity) extGroup(0)
                                                    // VelocityComponent  SEQUENCE
                                                        //  value      VelocityComponentValue     
                                                        //  confidence SpeedConfidence            
                                                    // Optional fields bytemap
                                                    
                                                    // Field:  type(VelocityComponentValue) name(value) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m010496\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value;
                                                    }
                                                    
                                                    float _tmp_11333 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value;
                                                    _tmp_11333 *= 100.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_11333);
                                                    _tmp_11333 -= -16383;
                                                    uint16_t* _tmp_11332 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_11332 = static_cast<uint16_t>(_tmp_11333);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value' (" << __aux64__ << ") less than (-16383); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value' (" << __aux64__ << ") exceeds max allowable (16383); message dropped.";
                                                        return -1;
                                                    }
                                                    
                                                    // Field:  type(SpeedConfidence) name(confidence) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m010497\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value);
                                                    }
                                                    
                                                    float _tmp_11335 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value;
                                                    _tmp_11335 *= 100.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_11335);
                                                    _tmp_11335 -= 1;
                                                    uint8_t* _tmp_11334 = (uint8_t*) buffer; buffer += 1;
                                                    *_tmp_11334 = static_cast<uint8_t>(_tmp_11335);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                        return -1;
                                                    }
                                            }
                                    
                                    }
                                    else
                                    {
                                        logger->warning() << "Wrong option (" << static_cast<int>(*_choice_328) << ") selected in CHOICE Velocity3dWithConfidence in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0]'; message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration.size() != 0) {
                                    // Field:  type(Acceleration3dWithConfidence) name(acceleration) extGroup(0)
                                    // Choice
                                       // #0  polarAcceleration   AccelerationPolarWithZ
                                       // #1  cartesianAcceleration   AccelerationCartesian
                                    uint8_t* _choice_329 = (uint8_t*) buffer;
                                    buffer++;
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration.size() != 0) {  // CHOICE 0  fieldType(Acceleration3dWithConfidence) 
                                        *_choice_329 = 0;  // Setting choice selection
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m010498\033[0m| Choice selection: 0";
                                    
                                            // AccelerationPolarWithZ  SEQUENCE
                                                //  accelerationMagnitude AccelerationMagnitude     
                                                //  accelerationDirection CartesianAngle            
                                                //  zAcceleration         AccelerationComponent   OPTIONAL  
                                            // Optional fields bytemap
                                            char* _tmp_11336 = (char*) buffer++;
                                            *_tmp_11336 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration.size() != 0 ? 1 : 0);
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m010499\033[0m| Optional field z_acceleration = " << *_tmp_11336;
                                            
                                            // Field:  type(AccelerationMagnitude) name(acceleration_magnitude) extGroup(0)
                                                // AccelerationMagnitude  SEQUENCE
                                                    //  accelerationMagnitudeValue AccelerationMagnitudeValue     
                                                    //  accelerationConfidence     AccelerationConfidence         
                                                // Optional fields bytemap
                                                
                                                // Field:  type(AccelerationMagnitudeValue) name(acceleration_magnitude_value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(161) span(162) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010500\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value);
                                                }
                                                
                                                float _tmp_11338 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value;
                                                _tmp_11338 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11338);
                                                uint8_t* _tmp_11337 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_11337 = static_cast<uint8_t>(_tmp_11338);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 161) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value' (" << __aux64__ << ") exceeds max allowable (161); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AccelerationConfidence) name(acceleration_confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010501\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value);
                                                }
                                                
                                                float _tmp_11340 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value;
                                                _tmp_11340 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11340);
                                                uint8_t* _tmp_11339 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_11339 = static_cast<uint8_t>(_tmp_11340);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 102) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value' (" << __aux64__ << ") exceeds max allowable (102); message dropped.";
                                                    return -1;
                                                }
                                            
                                            // Field:  type(CartesianAngle) name(acceleration_direction) extGroup(0)
                                                // CartesianAngle  SEQUENCE
                                                    //  value      CartesianAngleValue     
                                                    //  confidence AngleConfidence         
                                                // Optional fields bytemap
                                                
                                                // Field:  type(CartesianAngleValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010502\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value;
                                                }
                                                
                                                float _tmp_11342 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value;
                                                _tmp_11342 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11342);
                                                uint16_t* _tmp_11341 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_11341 = static_cast<uint16_t>(_tmp_11342);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AngleConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010503\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value);
                                                }
                                                
                                                float _tmp_11344 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value;
                                                _tmp_11344 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11344);
                                                _tmp_11344 -= 1;
                                                uint8_t* _tmp_11343 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_11343 = static_cast<uint8_t>(_tmp_11344);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                    return -1;
                                                }
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration.size() != 0) {
                                                // Field:  type(AccelerationComponent) name(z_acceleration) extGroup(0)
                                                    // AccelerationComponent  SEQUENCE
                                                        //  value      AccelerationValue          
                                                        //  confidence AccelerationConfidence     
                                                    // Optional fields bytemap
                                                    
                                                    // Field:  type(AccelerationValue) name(value) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m010504\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value;
                                                    }
                                                    
                                                    float _tmp_11346 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value;
                                                    _tmp_11346 *= 10.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_11346);
                                                    _tmp_11346 -= -160;
                                                    uint16_t* _tmp_11345 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_11345 = static_cast<uint16_t>(_tmp_11346);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < -160) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value' (" << __aux64__ << ") less than (-160); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 161) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value' (" << __aux64__ << ") exceeds max allowable (161); message dropped.";
                                                        return -1;
                                                    }
                                                    
                                                    // Field:  type(AccelerationConfidence) name(confidence) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m010505\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value);
                                                    }
                                                    
                                                    float _tmp_11348 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value;
                                                    _tmp_11348 *= 10.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_11348);
                                                    uint8_t* _tmp_11347 = (uint8_t*) buffer; buffer += 1;
                                                    *_tmp_11347 = static_cast<uint8_t>(_tmp_11348);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 102) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (102); message dropped.";
                                                        return -1;
                                                    }
                                            }
                                    
                                    }
                                    else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration.size() != 0)  // CHOICE 1  fieldType(Acceleration3dWithConfidence) 
                                    {
                                        *_choice_329 = 1;  // Setting choice selection
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m010506\033[0m| Choice selection: 1";
                                    
                                            // AccelerationCartesian  SEQUENCE
                                                //  xAcceleration AccelerationComponent     
                                                //  yAcceleration AccelerationComponent     
                                                //  zAcceleration AccelerationComponent   OPTIONAL  
                                            // Optional fields bytemap
                                            char* _tmp_11349 = (char*) buffer++;
                                            *_tmp_11349 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration.size() != 0 ? 1 : 0);
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m010507\033[0m| Optional field z_acceleration = " << *_tmp_11349;
                                            
                                            // Field:  type(AccelerationComponent) name(x_acceleration) extGroup(0)
                                                // AccelerationComponent  SEQUENCE
                                                    //  value      AccelerationValue          
                                                    //  confidence AccelerationConfidence     
                                                // Optional fields bytemap
                                                
                                                // Field:  type(AccelerationValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010508\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value;
                                                }
                                                
                                                float _tmp_11351 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value;
                                                _tmp_11351 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11351);
                                                _tmp_11351 -= -160;
                                                uint16_t* _tmp_11350 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_11350 = static_cast<uint16_t>(_tmp_11351);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -160) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value' (" << __aux64__ << ") less than (-160); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 161) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value' (" << __aux64__ << ") exceeds max allowable (161); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AccelerationConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010509\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value);
                                                }
                                                
                                                float _tmp_11353 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value;
                                                _tmp_11353 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11353);
                                                uint8_t* _tmp_11352 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_11352 = static_cast<uint8_t>(_tmp_11353);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 102) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value' (" << __aux64__ << ") exceeds max allowable (102); message dropped.";
                                                    return -1;
                                                }
                                            
                                            // Field:  type(AccelerationComponent) name(y_acceleration) extGroup(0)
                                                // AccelerationComponent  SEQUENCE
                                                    //  value      AccelerationValue          
                                                    //  confidence AccelerationConfidence     
                                                // Optional fields bytemap
                                                
                                                // Field:  type(AccelerationValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010510\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value;
                                                }
                                                
                                                float _tmp_11355 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value;
                                                _tmp_11355 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11355);
                                                _tmp_11355 -= -160;
                                                uint16_t* _tmp_11354 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_11354 = static_cast<uint16_t>(_tmp_11355);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -160) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value' (" << __aux64__ << ") less than (-160); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 161) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value' (" << __aux64__ << ") exceeds max allowable (161); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AccelerationConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010511\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value);
                                                }
                                                
                                                float _tmp_11357 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value;
                                                _tmp_11357 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11357);
                                                uint8_t* _tmp_11356 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_11356 = static_cast<uint8_t>(_tmp_11357);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 102) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value' (" << __aux64__ << ") exceeds max allowable (102); message dropped.";
                                                    return -1;
                                                }
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration.size() != 0) {
                                                // Field:  type(AccelerationComponent) name(z_acceleration) extGroup(0)
                                                    // AccelerationComponent  SEQUENCE
                                                        //  value      AccelerationValue          
                                                        //  confidence AccelerationConfidence     
                                                    // Optional fields bytemap
                                                    
                                                    // Field:  type(AccelerationValue) name(value) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m010512\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value;
                                                    }
                                                    
                                                    float _tmp_11359 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value;
                                                    _tmp_11359 *= 10.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_11359);
                                                    _tmp_11359 -= -160;
                                                    uint16_t* _tmp_11358 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_11358 = static_cast<uint16_t>(_tmp_11359);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < -160) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value' (" << __aux64__ << ") less than (-160); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 161) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value' (" << __aux64__ << ") exceeds max allowable (161); message dropped.";
                                                        return -1;
                                                    }
                                                    
                                                    // Field:  type(AccelerationConfidence) name(confidence) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m010513\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value);
                                                    }
                                                    
                                                    float _tmp_11361 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value;
                                                    _tmp_11361 *= 10.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_11361);
                                                    uint8_t* _tmp_11360 = (uint8_t*) buffer; buffer += 1;
                                                    *_tmp_11360 = static_cast<uint8_t>(_tmp_11361);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 102) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (102); message dropped.";
                                                        return -1;
                                                    }
                                            }
                                    
                                    }
                                    else
                                    {
                                        logger->warning() << "Wrong option (" << static_cast<int>(*_choice_329) << ") selected in CHOICE Acceleration3dWithConfidence in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0]'; message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles.size() != 0) {
                                    // Field:  type(EulerAnglesWithConfidence) name(angles) extGroup(0)
                                        // EulerAnglesWithConfidence  SEQUENCE
                                            //  zAngle     CartesianAngle     
                                            //  yAngle     CartesianAngle   OPTIONAL  
                                            //  xAngle     CartesianAngle   OPTIONAL  
                                        // Optional fields bytemap
                                        char* _tmp_11362 = (char*) buffer++;
                                        *_tmp_11362 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m010514\033[0m| Optional field y_angle = " << *_tmp_11362;
                                        char* _tmp_11363 = (char*) buffer++;
                                        *_tmp_11363 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m010515\033[0m| Optional field x_angle = " << *_tmp_11363;
                                        
                                        // Field:  type(CartesianAngle) name(z_angle) extGroup(0)
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            // Optional fields bytemap
                                            
                                            // Field:  type(CartesianAngleValue) name(value) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m010516\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value;
                                            }
                                            
                                            float _tmp_11365 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value;
                                            _tmp_11365 *= 10.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_11365);
                                            uint16_t* _tmp_11364 = (uint16_t*) buffer; buffer += 2;
                                            *_tmp_11364 = static_cast<uint16_t>(_tmp_11365);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(AngleConfidence) name(confidence) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m010517\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value);
                                            }
                                            
                                            float _tmp_11367 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value;
                                            _tmp_11367 *= 10.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_11367);
                                            _tmp_11367 -= 1;
                                            uint8_t* _tmp_11366 = (uint8_t*) buffer; buffer += 1;
                                            *_tmp_11366 = static_cast<uint8_t>(_tmp_11367);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                return -1;
                                            }
                                        
                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle.size() != 0) {
                                            // Field:  type(CartesianAngle) name(y_angle) extGroup(0)
                                                // CartesianAngle  SEQUENCE
                                                    //  value      CartesianAngleValue     
                                                    //  confidence AngleConfidence         
                                                // Optional fields bytemap
                                                
                                                // Field:  type(CartesianAngleValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010518\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value;
                                                }
                                                
                                                float _tmp_11369 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value;
                                                _tmp_11369 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11369);
                                                uint16_t* _tmp_11368 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_11368 = static_cast<uint16_t>(_tmp_11369);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AngleConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010519\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value);
                                                }
                                                
                                                float _tmp_11371 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value;
                                                _tmp_11371 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11371);
                                                _tmp_11371 -= 1;
                                                uint8_t* _tmp_11370 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_11370 = static_cast<uint8_t>(_tmp_11371);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                    return -1;
                                                }
                                        }
                                        
                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle.size() != 0) {
                                            // Field:  type(CartesianAngle) name(x_angle) extGroup(0)
                                                // CartesianAngle  SEQUENCE
                                                    //  value      CartesianAngleValue     
                                                    //  confidence AngleConfidence         
                                                // Optional fields bytemap
                                                
                                                // Field:  type(CartesianAngleValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010520\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value;
                                                }
                                                
                                                float _tmp_11373 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value;
                                                _tmp_11373 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11373);
                                                uint16_t* _tmp_11372 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_11372 = static_cast<uint16_t>(_tmp_11373);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AngleConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010521\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value);
                                                }
                                                
                                                float _tmp_11375 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value;
                                                _tmp_11375 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11375);
                                                _tmp_11375 -= 1;
                                                uint8_t* _tmp_11374 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_11374 = static_cast<uint8_t>(_tmp_11375);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                    return -1;
                                                }
                                        }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity.size() != 0) {
                                    // Field:  type(CartesianAngularVelocityComponent) name(z_angular_velocity) extGroup(0)
                                        // CartesianAngularVelocityComponent  SEQUENCE
                                            //  value      CartesianAngularVelocityComponentValue     
                                            //  confidence AngularSpeedConfidence                     
                                        // Optional fields bytemap
                                        
                                        // Field:  type(CartesianAngularVelocityComponentValue) name(value) extGroup(0)
                                        // Integer
                                        
                                        // INT16  min(-255) max(256) span(512) dataType(Int16)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m010522\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value;
                                        }
                                        
                                        uint16_t* _tmp_11376 = (uint16_t*) buffer; buffer += 2;
                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value - -255;
                                        *_tmp_11376 = __aux64__;
                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -255) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value' (" << __aux64__ << ") less than (-255); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 256) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value' (" << __aux64__ << ") exceeds max allowable (256); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(AngularSpeedConfidence) name(confidence) extGroup(0)
                                        // Enumerated
                                        // INT32  min(0) max(7) span(8) dataType(Int32)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m010523\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value);
                                        }
                                        
                                        uint8_t* _tmp_11377 = (uint8_t*)buffer;
                                        buffer += 1;
                                        *_tmp_11377 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value; 
                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value; 
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 7) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (7); message dropped.";
                                            return -1;
                                        }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices.size() != 0) {
                                    // Field:  type(LowerTriangularPositiveSemidefiniteMatrices) name(lower_triangular_correlation_matrices) extGroup(0)
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(1) max(4) span(4) ext(false)
                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements.size();
                                    if(__aux64__ > 4) __aux64__ = 4;
                                    uint16_t* _tmp_11378 = (uint16_t*)buffer;
                                    buffer += 2;
                                    *_tmp_11378 = __aux64__ - 1;
                                    
                                    int __ifa = __aux64__;
                                    for(int a = 0; a < __ifa; a++) { 
                                        
                                            // LowerTriangularPositiveSemidefiniteMatrix  SEQUENCE
                                                //  componentsIncludedIntheMatrix MatrixIncludedComponents                             
                                                //  matrix                        LowerTriangularPositiveSemidefiniteMatrixColumns     
                                            // Optional fields bytemap
                                            
                                            // Field:  type(MatrixIncludedComponents) name(components_included_inthe_matrix) extGroup(0)
                                            // BitString
                                            // BIT_STRING  min(13) max(13) span(1)
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m010525\033[0m| denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].components_included_inthe_matrix.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].components_included_inthe_matrix.values.size());
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].components_included_inthe_matrix.values.size() < 13) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].components_included_inthe_matrix.value' " << (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].components_included_inthe_matrix.values.size()) << " is less than allowable (13); message dropped.";
                                                return -1;
                                            }
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].components_included_inthe_matrix.values.size() > 13) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].components_included_inthe_matrix.value' " << (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].components_included_inthe_matrix.values.size()) << " exceeds max allowable (13); message dropped.";
                                                return -1;
                                            }
                                            
                                            uint8_t* _ext_flag_5477 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].components_included_inthe_matrix.
                                            *_ext_flag_5477 = 0; 
                                            
                                            uint8_t* _tmp_11379 = (uint8_t*)buffer;
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].components_included_inthe_matrix.values.size();
                                            if(__aux64__ > 13) __aux64__ = 13;
                                            *_tmp_11379 = __aux64__ - 13;
                                            buffer += 1;
                                            
                                            int __ifb = __aux64__;
                                            for(int b = 0; b < __ifb; b++) {
                                                uint8_t* __b__ = (uint8_t*)buffer++;
                                                *__b__ = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].components_included_inthe_matrix.values[b]? 1: 0);
                                            }
                                            
                                            // Field:  type(LowerTriangularPositiveSemidefiniteMatrixColumns) name(matrix) extGroup(0)
                                            // SequenceOf
                                            // Data Type UInt8
                                            // SEQUENCE_OF  min(1) max(13) span(13) ext(true)
                                            uint8_t* _ext_flag_5478 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].matrix.
                                            *_ext_flag_5478 = 0; 
                                            
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].matrix.elements.size();
                                            if(__aux64__ > 13) __aux64__ = 13;
                                            uint16_t* _tmp_11380 = (uint16_t*)buffer;
                                            buffer += 2;
                                            *_tmp_11380 = __aux64__ - 1;
                                            
                                            int __ifc = __aux64__;
                                            for(int c = 0; c < __ifc; c++) { 
                                                
                                                // SequenceOf
                                                // Data Type UInt8
                                                // SEQUENCE_OF  min(1) max(13) span(13) ext(true)
                                                uint8_t* _ext_flag_5479 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].matrix.elements[c].
                                                *_ext_flag_5479 = 0; 
                                                
                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].matrix.elements[c].elements.size();
                                                if(__aux64__ > 13) __aux64__ = 13;
                                                uint16_t* _tmp_11381 = (uint16_t*)buffer;
                                                buffer += 2;
                                                *_tmp_11381 = __aux64__ - 1;
                                                
                                                int __ifd = __aux64__;
                                                for(int d = 0; d < __ifd; d++) { 
                                                    
                                                    // Integer
                                                    
                                                    // INT8  min(-100) max(101) span(202) dataType(Int8)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m010528\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].matrix.elements[c].elements[d].value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].matrix.elements[c].elements[d].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].matrix.elements[c].elements[d].value);
                                                    }
                                                    
                                                    uint8_t* _tmp_11382 = (uint8_t*) buffer++;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].matrix.elements[c].elements[d].value - -100;
                                                    *_tmp_11382 = __aux64__;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].matrix.elements[c].elements[d].value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < -100) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].matrix.elements[c].elements[d].value' (" << __aux64__ << ") less than (-100); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 101) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[a].matrix.elements[c].elements[d].value' (" << __aux64__ << ") exceeds max allowable (101); message dropped.";
                                                        return -1;
                                                    }
                                                    
                                                }
                                                
                                            }
                                            
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z.size() != 0) {
                                    // Field:  type(ObjectDimension) name(object_dimension_z) extGroup(0)
                                        // ObjectDimension  SEQUENCE
                                            //  value      ObjectDimensionValue          
                                            //  confidence ObjectDimensionConfidence     
                                        // Optional fields bytemap
                                        
                                        // Field:  type(ObjectDimensionValue) name(value) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m010529\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value);
                                        }
                                        
                                        float _tmp_11384 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value;
                                        _tmp_11384 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_11384);
                                        _tmp_11384 -= 1;
                                        uint8_t* _tmp_11383 = (uint8_t*) buffer; buffer += 1;
                                        *_tmp_11383 = static_cast<uint8_t>(_tmp_11384);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 256) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value' (" << __aux64__ << ") exceeds max allowable (256); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(ObjectDimensionConfidence) name(confidence) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m010530\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value);
                                        }
                                        
                                        float _tmp_11386 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value;
                                        _tmp_11386 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_11386);
                                        _tmp_11386 -= 1;
                                        uint8_t* _tmp_11385 = (uint8_t*) buffer; buffer += 1;
                                        *_tmp_11385 = static_cast<uint8_t>(_tmp_11386);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 32) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (32); message dropped.";
                                            return -1;
                                        }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y.size() != 0) {
                                    // Field:  type(ObjectDimension) name(object_dimension_y) extGroup(0)
                                        // ObjectDimension  SEQUENCE
                                            //  value      ObjectDimensionValue          
                                            //  confidence ObjectDimensionConfidence     
                                        // Optional fields bytemap
                                        
                                        // Field:  type(ObjectDimensionValue) name(value) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m010531\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value);
                                        }
                                        
                                        float _tmp_11388 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value;
                                        _tmp_11388 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_11388);
                                        _tmp_11388 -= 1;
                                        uint8_t* _tmp_11387 = (uint8_t*) buffer; buffer += 1;
                                        *_tmp_11387 = static_cast<uint8_t>(_tmp_11388);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 256) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value' (" << __aux64__ << ") exceeds max allowable (256); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(ObjectDimensionConfidence) name(confidence) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m010532\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value);
                                        }
                                        
                                        float _tmp_11390 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value;
                                        _tmp_11390 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_11390);
                                        _tmp_11390 -= 1;
                                        uint8_t* _tmp_11389 = (uint8_t*) buffer; buffer += 1;
                                        *_tmp_11389 = static_cast<uint8_t>(_tmp_11390);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 32) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (32); message dropped.";
                                            return -1;
                                        }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x.size() != 0) {
                                    // Field:  type(ObjectDimension) name(object_dimension_x) extGroup(0)
                                        // ObjectDimension  SEQUENCE
                                            //  value      ObjectDimensionValue          
                                            //  confidence ObjectDimensionConfidence     
                                        // Optional fields bytemap
                                        
                                        // Field:  type(ObjectDimensionValue) name(value) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m010533\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value);
                                        }
                                        
                                        float _tmp_11392 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value;
                                        _tmp_11392 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_11392);
                                        _tmp_11392 -= 1;
                                        uint8_t* _tmp_11391 = (uint8_t*) buffer; buffer += 1;
                                        *_tmp_11391 = static_cast<uint8_t>(_tmp_11392);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 256) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value' (" << __aux64__ << ") exceeds max allowable (256); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(ObjectDimensionConfidence) name(confidence) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m010534\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value);
                                        }
                                        
                                        float _tmp_11394 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value;
                                        _tmp_11394 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_11394);
                                        _tmp_11394 -= 1;
                                        uint8_t* _tmp_11393 = (uint8_t*) buffer; buffer += 1;
                                        *_tmp_11393 = static_cast<uint8_t>(_tmp_11394);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 32) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (32); message dropped.";
                                            return -1;
                                        }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age.size() != 0) {
                                    // Field:  type(PerceivedObject_DeltaTimeMilliSecondSigned_objectAge) name(object_age) extGroup(0)
                                    // Real
                                    
                                    // FLOAT  min(0) max(2047) span(2048) scaleDivisor(1000.0) dataType(Float)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010535\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value) << 
                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value;
                                    }
                                    
                                    float _tmp_11396 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value;
                                    _tmp_11396 *= 1000.0;
                                    __aux64__ = static_cast<uint64_t>(_tmp_11396);
                                    uint16_t* _tmp_11395 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_11395 = static_cast<uint16_t>(_tmp_11396);
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 2047) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value' (" << __aux64__ << ") exceeds max allowable (2047); message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality.size() != 0) {
                                    // Field:  type(ObjectPerceptionQuality) name(object_perception_quality) extGroup(0)
                                    // Integer
                                    
                                    // UINT8  min(0) max(15) span(16) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m010536\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value) << 
                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value);
                                    }
                                    
                                    uint8_t* _tmp_11397 = (uint8_t*) buffer++;
                                    *_tmp_11397 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 15) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list.size() != 0) {
                                    // Field:  type(SequenceOfIdentifier1B) name(sensor_id_list) extGroup(0)
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(1) max(128) span(128) ext(true)
                                    uint8_t* _ext_flag_5489 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].
                                    *_ext_flag_5489 = 0; 
                                    
                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements.size();
                                    if(__aux64__ > 128) __aux64__ = 128;
                                    uint16_t* _tmp_11398 = (uint16_t*)buffer;
                                    buffer += 2;
                                    *_tmp_11398 = __aux64__ - 1;
                                    
                                    int __ife = __aux64__;
                                    for(int e = 0; e < __ife; e++) { 
                                        
                                        // Integer
                                        
                                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m010538\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[e].value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[e].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[e].value);
                                        }
                                        
                                        uint8_t* _tmp_11399 = (uint8_t*) buffer++;
                                        *_tmp_11399 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[e].value; 
                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[e].value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[e].value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[e].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                            return -1;
                                        }
                                        
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification.size() != 0) {
                                    // Field:  type(ObjectClassDescription) name(classification) extGroup(0)
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(1) max(8) span(8) ext(false)
                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements.size();
                                    if(__aux64__ > 8) __aux64__ = 8;
                                    uint16_t* _tmp_11400 = (uint16_t*)buffer;
                                    buffer += 2;
                                    *_tmp_11400 = __aux64__ - 1;
                                    
                                    int __iff = __aux64__;
                                    for(int f = 0; f < __iff; f++) { 
                                        
                                            // ObjectClassWithConfidence  SEQUENCE
                                                //  objectClass ObjectClass         
                                                //  confidence  ConfidenceLevel     
                                            // Optional fields bytemap
                                            
                                            // Field:  type(ObjectClass) name(object_class) extGroup(0)
                                            // Choice
                                               // #0  vehicleSubClass   ObjectClass_TrafficParticipantType_vehicleSubClass
                                               // #1  vruSubClass   VruProfileAndSubprofile
                                               // #2  groupSubClass   VruClusterInformation
                                               // #3  otherSubClass   OtherSubClass
                                            uint8_t* _ext_flag_5491 = (uint8_t*) buffer; 
                                            buffer++;
                                            *_ext_flag_5491 = 0; 
                                            
                                            uint8_t* _choice_330 = (uint8_t*) buffer;
                                            buffer++;
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vehicle_sub_class.size() != 0) {  // CHOICE 0  fieldType(ObjectClass) 
                                                *_choice_330 = 0;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m010540\033[0m| Choice selection: 0";
                                            
                                                // Integer
                                                
                                                // UINT8  min(0) max(14) span(15) dataType(UInt8)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010541\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vehicle_sub_class[0].value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vehicle_sub_class[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vehicle_sub_class[0].value);
                                                }
                                                
                                                uint8_t* _tmp_11401 = (uint8_t*) buffer++;
                                                *_tmp_11401 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vehicle_sub_class[0].value; 
                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vehicle_sub_class[0].value;
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vehicle_sub_class[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vehicle_sub_class[0].value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                    return -1;
                                                }
                                            
                                            }
                                            else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class.size() != 0)  // CHOICE 1  fieldType(ObjectClass) 
                                            {
                                                *_choice_330 = 1;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m010542\033[0m| Choice selection: 1";
                                            
                                                // Choice
                                                   // #0  pedestrian   VruSubProfilePedestrian
                                                   // #1  bicyclistAndLightVruVehicle   VruSubProfileBicyclist
                                                   // #2  motorcyclist   VruSubProfileMotorcyclist
                                                   // #3  animal   VruSubProfileAnimal
                                                uint8_t* _ext_flag_5493 = (uint8_t*) buffer; 
                                                buffer++;
                                                *_ext_flag_5493 = 0; 
                                                
                                                uint8_t* _choice_331 = (uint8_t*) buffer;
                                                buffer++;
                                                
                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].pedestrian.size() != 0) {  // CHOICE 0  fieldType(VruProfileAndSubprofile) 
                                                    *_choice_331 = 0;  // Setting choice selection
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m010543\033[0m| Choice selection: 0";
                                                
                                                    // Integer
                                                    
                                                    // UINT8  min(0) max(15) span(16) dataType(UInt8)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m010544\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].pedestrian[0].value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].pedestrian[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].pedestrian[0].value);
                                                    }
                                                    
                                                    uint8_t* _tmp_11402 = (uint8_t*) buffer++;
                                                    *_tmp_11402 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].pedestrian[0].value; 
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].pedestrian[0].value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].pedestrian[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 15) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].pedestrian[0].value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                                                        return -1;
                                                    }
                                                
                                                }
                                                else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle.size() != 0)  // CHOICE 1  fieldType(VruProfileAndSubprofile) 
                                                {
                                                    *_choice_331 = 1;  // Setting choice selection
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m010545\033[0m| Choice selection: 1";
                                                
                                                    // Integer
                                                    
                                                    // UINT8  min(0) max(15) span(16) dataType(UInt8)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m010546\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value);
                                                    }
                                                    
                                                    uint8_t* _tmp_11403 = (uint8_t*) buffer++;
                                                    *_tmp_11403 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value; 
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 15) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                                                        return -1;
                                                    }
                                                
                                                }
                                                else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].motorcyclist.size() != 0)  // CHOICE 2  fieldType(VruProfileAndSubprofile) 
                                                {
                                                    *_choice_331 = 2;  // Setting choice selection
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m010547\033[0m| Choice selection: 2";
                                                
                                                    // Integer
                                                    
                                                    // UINT8  min(0) max(15) span(16) dataType(UInt8)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m010548\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].motorcyclist[0].value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].motorcyclist[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].motorcyclist[0].value);
                                                    }
                                                    
                                                    uint8_t* _tmp_11404 = (uint8_t*) buffer++;
                                                    *_tmp_11404 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].motorcyclist[0].value; 
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].motorcyclist[0].value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].motorcyclist[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 15) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].motorcyclist[0].value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                                                        return -1;
                                                    }
                                                
                                                }
                                                else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].animal.size() != 0)  // CHOICE 3  fieldType(VruProfileAndSubprofile) 
                                                {
                                                    *_choice_331 = 3;  // Setting choice selection
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m010549\033[0m| Choice selection: 3";
                                                
                                                    // Integer
                                                    
                                                    // UINT8  min(0) max(15) span(16) dataType(UInt8)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m010550\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].animal[0].value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].animal[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].animal[0].value);
                                                    }
                                                    
                                                    uint8_t* _tmp_11405 = (uint8_t*) buffer++;
                                                    *_tmp_11405 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].animal[0].value; 
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].animal[0].value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].animal[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 15) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0].animal[0].value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                                                        return -1;
                                                    }
                                                
                                                }
                                                else
                                                {
                                                    logger->warning() << "Wrong option (" << static_cast<int>(*_choice_331) << ") selected in CHOICE VruProfileAndSubprofile in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.vru_sub_class[0]'; message dropped.";
                                                    return -1;
                                                }
                                            
                                            }
                                            else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class.size() != 0)  // CHOICE 2  fieldType(ObjectClass) 
                                            {
                                                *_choice_330 = 2;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m010551\033[0m| Choice selection: 2";
                                            
                                                    // VruClusterInformation  SEQUENCE
                                                        //  clusterId               Identifier1B         OPTIONAL  
                                                        //  clusterBoundingBoxShape Shape                OPTIONAL  
                                                        //  clusterCardinalitySize  CardinalNumber1B       
                                                        //  clusterProfiles         VruClusterProfiles   OPTIONAL  
                                                        //  ...
                                                    uint8_t* _ext_flag_5498 = (uint8_t*) buffer++;  // Write extension flag for VruClusterInformation
                                                    *_ext_flag_5498 = 0;  
                                                    
                                                    // Optional fields bytemap
                                                    char* _tmp_11406 = (char*) buffer++;
                                                    *_tmp_11406 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_id.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m010552\033[0m| Optional field cluster_id = " << *_tmp_11406;
                                                    char* _tmp_11407 = (char*) buffer++;
                                                    *_tmp_11407 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m010553\033[0m| Optional field cluster_bounding_box_shape = " << *_tmp_11407;
                                                    char* _tmp_11408 = (char*) buffer++;
                                                    *_tmp_11408 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_profiles.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m010554\033[0m| Optional field cluster_profiles = " << *_tmp_11408;
                                                    
                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_id.size() != 0) {
                                                        // Field:  type(Identifier1B) name(cluster_id) extGroup(0)
                                                        // Integer
                                                        
                                                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                                        if(debug) {
                                                            logger->debug() << "|\033[38;5;94m010555\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_id[0].value) << 
                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_id[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_id[0].value);
                                                        }
                                                        
                                                        uint8_t* _tmp_11409 = (uint8_t*) buffer++;
                                                        *_tmp_11409 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_id[0].value; 
                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_id[0].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_id[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape.size() != 0) {
                                                        // Field:  type(Shape) name(cluster_bounding_box_shape) extGroup(0)
                                                        // Choice
                                                           // #0  rectangular   RectangularShape
                                                           // #1  circular   CircularShape
                                                           // #2  polygonal   PolygonalShape
                                                           // #3  elliptical   EllipticalShape
                                                           // #4  radial   RadialShape
                                                           // #5  radialShapes   RadialShapes
                                                        uint8_t* _ext_flag_5500 = (uint8_t*) buffer; 
                                                        buffer++;
                                                        *_ext_flag_5500 = 0; 
                                                        
                                                        uint8_t* _choice_332 = (uint8_t*) buffer;
                                                        buffer++;
                                                        
                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular.size() != 0) {  // CHOICE 0  fieldType(Shape) 
                                                            *_choice_332 = 0;  // Setting choice selection
                                                        
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m010556\033[0m| Choice selection: 0";
                                                        
                                                                // RectangularShape  SEQUENCE
                                                                    //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                    //  semiLength          StandardLength12b       
                                                                    //  semiBreadth         StandardLength12b       
                                                                    //  orientation         CartesianAngleValue   OPTIONAL  
                                                                    //  height              StandardLength12b     OPTIONAL  
                                                                // Optional fields bytemap
                                                                char* _tmp_11410 = (char*) buffer++;
                                                                *_tmp_11410 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m010557\033[0m| Optional field shape_reference_point = " << *_tmp_11410;
                                                                char* _tmp_11411 = (char*) buffer++;
                                                                *_tmp_11411 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m010558\033[0m| Optional field orientation = " << *_tmp_11411;
                                                                char* _tmp_11412 = (char*) buffer++;
                                                                *_tmp_11412 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m010559\033[0m| Optional field height = " << *_tmp_11412;
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point.size() != 0) {
                                                                    // Field:  type(CartesianPosition3d) name(shape_reference_point) extGroup(0)
                                                                        // CartesianPosition3d  SEQUENCE
                                                                            //  xCoordinate CartesianCoordinate     
                                                                            //  yCoordinate CartesianCoordinate     
                                                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                        // Optional fields bytemap
                                                                        char* _tmp_11413 = (char*) buffer++;
                                                                        *_tmp_11413 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m010560\033[0m| Optional field z_coordinate = " << *_tmp_11413;
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(x_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m010561\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_11415 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value;
                                                                        _tmp_11415 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_11415);
                                                                        _tmp_11415 -= -32768;
                                                                        uint16_t* _tmp_11414 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_11414 = static_cast<uint16_t>(_tmp_11415);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(y_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m010562\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_11417 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value;
                                                                        _tmp_11417 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_11417);
                                                                        _tmp_11417 -= -32768;
                                                                        uint16_t* _tmp_11416 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_11416 = static_cast<uint16_t>(_tmp_11417);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                            // Field:  type(CartesianCoordinate) name(z_coordinate) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->debug() << "|\033[38;5;94m010563\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_11419 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            _tmp_11419 *= 100.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_11419);
                                                                            _tmp_11419 -= -32768;
                                                                            uint16_t* _tmp_11418 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_11418 = static_cast<uint16_t>(_tmp_11419);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                }
                                                                
                                                                // Field:  type(StandardLength12b) name(semi_length) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m010564\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value;
                                                                }
                                                                
                                                                float _tmp_11421 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value;
                                                                _tmp_11421 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_11421);
                                                                uint16_t* _tmp_11420 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_11420 = static_cast<uint16_t>(_tmp_11421);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                // Field:  type(StandardLength12b) name(semi_breadth) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m010565\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value;
                                                                }
                                                                
                                                                float _tmp_11423 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value;
                                                                _tmp_11423 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_11423);
                                                                uint16_t* _tmp_11422 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_11422 = static_cast<uint16_t>(_tmp_11423);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation.size() != 0) {
                                                                    // Field:  type(CartesianAngleValue) name(orientation) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m010566\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_11425 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value;
                                                                    _tmp_11425 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_11425);
                                                                    uint16_t* _tmp_11424 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_11424 = static_cast<uint16_t>(_tmp_11425);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height.size() != 0) {
                                                                    // Field:  type(StandardLength12b) name(height) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m010567\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_11427 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value;
                                                                    _tmp_11427 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_11427);
                                                                    uint16_t* _tmp_11426 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_11426 = static_cast<uint16_t>(_tmp_11427);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                        
                                                        }
                                                        else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular.size() != 0)  // CHOICE 1  fieldType(Shape) 
                                                        {
                                                            *_choice_332 = 1;  // Setting choice selection
                                                        
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m010568\033[0m| Choice selection: 1";
                                                        
                                                                // CircularShape  SEQUENCE
                                                                    //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                    //  radius              StandardLength12b       
                                                                    //  height              StandardLength12b     OPTIONAL  
                                                                // Optional fields bytemap
                                                                char* _tmp_11428 = (char*) buffer++;
                                                                *_tmp_11428 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m010569\033[0m| Optional field shape_reference_point = " << *_tmp_11428;
                                                                char* _tmp_11429 = (char*) buffer++;
                                                                *_tmp_11429 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m010570\033[0m| Optional field height = " << *_tmp_11429;
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point.size() != 0) {
                                                                    // Field:  type(CartesianPosition3d) name(shape_reference_point) extGroup(0)
                                                                        // CartesianPosition3d  SEQUENCE
                                                                            //  xCoordinate CartesianCoordinate     
                                                                            //  yCoordinate CartesianCoordinate     
                                                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                        // Optional fields bytemap
                                                                        char* _tmp_11430 = (char*) buffer++;
                                                                        *_tmp_11430 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m010571\033[0m| Optional field z_coordinate = " << *_tmp_11430;
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(x_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m010572\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_11432 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value;
                                                                        _tmp_11432 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_11432);
                                                                        _tmp_11432 -= -32768;
                                                                        uint16_t* _tmp_11431 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_11431 = static_cast<uint16_t>(_tmp_11432);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(y_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m010573\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_11434 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value;
                                                                        _tmp_11434 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_11434);
                                                                        _tmp_11434 -= -32768;
                                                                        uint16_t* _tmp_11433 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_11433 = static_cast<uint16_t>(_tmp_11434);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                            // Field:  type(CartesianCoordinate) name(z_coordinate) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->debug() << "|\033[38;5;94m010574\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_11436 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            _tmp_11436 *= 100.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_11436);
                                                                            _tmp_11436 -= -32768;
                                                                            uint16_t* _tmp_11435 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_11435 = static_cast<uint16_t>(_tmp_11436);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                }
                                                                
                                                                // Field:  type(StandardLength12b) name(radius) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m010575\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value;
                                                                }
                                                                
                                                                float _tmp_11438 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value;
                                                                _tmp_11438 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_11438);
                                                                uint16_t* _tmp_11437 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_11437 = static_cast<uint16_t>(_tmp_11438);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height.size() != 0) {
                                                                    // Field:  type(StandardLength12b) name(height) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m010576\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_11440 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value;
                                                                    _tmp_11440 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_11440);
                                                                    uint16_t* _tmp_11439 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_11439 = static_cast<uint16_t>(_tmp_11440);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                        
                                                        }
                                                        else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal.size() != 0)  // CHOICE 2  fieldType(Shape) 
                                                        {
                                                            *_choice_332 = 2;  // Setting choice selection
                                                        
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m010577\033[0m| Choice selection: 2";
                                                        
                                                                // PolygonalShape  SEQUENCE
                                                                    //  shapeReferencePoint CartesianPosition3d             OPTIONAL  
                                                                    //  polygon             SequenceOfCartesianPosition3d     
                                                                    //  height              StandardLength12b               OPTIONAL  
                                                                // Optional fields bytemap
                                                                char* _tmp_11441 = (char*) buffer++;
                                                                *_tmp_11441 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m010578\033[0m| Optional field shape_reference_point = " << *_tmp_11441;
                                                                char* _tmp_11442 = (char*) buffer++;
                                                                *_tmp_11442 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m010579\033[0m| Optional field height = " << *_tmp_11442;
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point.size() != 0) {
                                                                    // Field:  type(CartesianPosition3d) name(shape_reference_point) extGroup(0)
                                                                        // CartesianPosition3d  SEQUENCE
                                                                            //  xCoordinate CartesianCoordinate     
                                                                            //  yCoordinate CartesianCoordinate     
                                                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                        // Optional fields bytemap
                                                                        char* _tmp_11443 = (char*) buffer++;
                                                                        *_tmp_11443 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m010580\033[0m| Optional field z_coordinate = " << *_tmp_11443;
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(x_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m010581\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_11445 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value;
                                                                        _tmp_11445 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_11445);
                                                                        _tmp_11445 -= -32768;
                                                                        uint16_t* _tmp_11444 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_11444 = static_cast<uint16_t>(_tmp_11445);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(y_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m010582\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_11447 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value;
                                                                        _tmp_11447 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_11447);
                                                                        _tmp_11447 -= -32768;
                                                                        uint16_t* _tmp_11446 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_11446 = static_cast<uint16_t>(_tmp_11447);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                            // Field:  type(CartesianCoordinate) name(z_coordinate) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->debug() << "|\033[38;5;94m010583\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_11449 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            _tmp_11449 *= 100.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_11449);
                                                                            _tmp_11449 -= -32768;
                                                                            uint16_t* _tmp_11448 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_11448 = static_cast<uint16_t>(_tmp_11449);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                }
                                                                
                                                                // Field:  type(SequenceOfCartesianPosition3d) name(polygon) extGroup(0)
                                                                // SequenceOf
                                                                // Data Type UInt8
                                                                // SEQUENCE_OF  min(1) max(16) span(16) ext(true)
                                                                uint8_t* _ext_flag_5516 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.
                                                                *_ext_flag_5516 = 0; 
                                                                
                                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements.size();
                                                                if(__aux64__ > 16) __aux64__ = 16;
                                                                uint16_t* _tmp_11450 = (uint16_t*)buffer;
                                                                buffer += 2;
                                                                *_tmp_11450 = __aux64__ - 1;
                                                                
                                                                int __ifg = __aux64__;
                                                                for(int g = 0; g < __ifg; g++) { 
                                                                    
                                                                        // CartesianPosition3d  SEQUENCE
                                                                            //  xCoordinate CartesianCoordinate     
                                                                            //  yCoordinate CartesianCoordinate     
                                                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                        // Optional fields bytemap
                                                                        char* _tmp_11451 = (char*) buffer++;
                                                                        *_tmp_11451 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[g].z_coordinate.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m010585\033[0m| Optional field z_coordinate = " << *_tmp_11451;
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(x_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m010586\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[g].x_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[g].x_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[g].x_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_11453 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[g].x_coordinate.value;
                                                                        _tmp_11453 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_11453);
                                                                        _tmp_11453 -= -32768;
                                                                        uint16_t* _tmp_11452 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_11452 = static_cast<uint16_t>(_tmp_11453);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[g].x_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[g].x_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(y_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m010587\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[g].y_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[g].y_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[g].y_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_11455 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[g].y_coordinate.value;
                                                                        _tmp_11455 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_11455);
                                                                        _tmp_11455 -= -32768;
                                                                        uint16_t* _tmp_11454 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_11454 = static_cast<uint16_t>(_tmp_11455);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[g].y_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[g].y_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[g].z_coordinate.size() != 0) {
                                                                            // Field:  type(CartesianCoordinate) name(z_coordinate) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->debug() << "|\033[38;5;94m010588\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[g].z_coordinate[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[g].z_coordinate[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[g].z_coordinate[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_11457 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[g].z_coordinate[0].value;
                                                                            _tmp_11457 *= 100.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_11457);
                                                                            _tmp_11457 -= -32768;
                                                                            uint16_t* _tmp_11456 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_11456 = static_cast<uint16_t>(_tmp_11457);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[g].z_coordinate[0].value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[g].z_coordinate[0].value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                        
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height.size() != 0) {
                                                                    // Field:  type(StandardLength12b) name(height) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m010589\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_11459 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value;
                                                                    _tmp_11459 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_11459);
                                                                    uint16_t* _tmp_11458 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_11458 = static_cast<uint16_t>(_tmp_11459);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                        
                                                        }
                                                        else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical.size() != 0)  // CHOICE 3  fieldType(Shape) 
                                                        {
                                                            *_choice_332 = 3;  // Setting choice selection
                                                        
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m010590\033[0m| Choice selection: 3";
                                                        
                                                                // EllipticalShape  SEQUENCE
                                                                    //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                    //  semiMajorAxisLength StandardLength12b       
                                                                    //  semiMinorAxisLength StandardLength12b       
                                                                    //  orientation         CartesianAngleValue   OPTIONAL  
                                                                    //  height              StandardLength12b     OPTIONAL  
                                                                // Optional fields bytemap
                                                                char* _tmp_11460 = (char*) buffer++;
                                                                *_tmp_11460 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m010591\033[0m| Optional field shape_reference_point = " << *_tmp_11460;
                                                                char* _tmp_11461 = (char*) buffer++;
                                                                *_tmp_11461 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m010592\033[0m| Optional field orientation = " << *_tmp_11461;
                                                                char* _tmp_11462 = (char*) buffer++;
                                                                *_tmp_11462 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m010593\033[0m| Optional field height = " << *_tmp_11462;
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point.size() != 0) {
                                                                    // Field:  type(CartesianPosition3d) name(shape_reference_point) extGroup(0)
                                                                        // CartesianPosition3d  SEQUENCE
                                                                            //  xCoordinate CartesianCoordinate     
                                                                            //  yCoordinate CartesianCoordinate     
                                                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                        // Optional fields bytemap
                                                                        char* _tmp_11463 = (char*) buffer++;
                                                                        *_tmp_11463 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m010594\033[0m| Optional field z_coordinate = " << *_tmp_11463;
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(x_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m010595\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_11465 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value;
                                                                        _tmp_11465 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_11465);
                                                                        _tmp_11465 -= -32768;
                                                                        uint16_t* _tmp_11464 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_11464 = static_cast<uint16_t>(_tmp_11465);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(y_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m010596\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_11467 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value;
                                                                        _tmp_11467 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_11467);
                                                                        _tmp_11467 -= -32768;
                                                                        uint16_t* _tmp_11466 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_11466 = static_cast<uint16_t>(_tmp_11467);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                            // Field:  type(CartesianCoordinate) name(z_coordinate) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->debug() << "|\033[38;5;94m010597\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_11469 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            _tmp_11469 *= 100.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_11469);
                                                                            _tmp_11469 -= -32768;
                                                                            uint16_t* _tmp_11468 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_11468 = static_cast<uint16_t>(_tmp_11469);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                }
                                                                
                                                                // Field:  type(StandardLength12b) name(semi_major_axis_length) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m010598\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value;
                                                                }
                                                                
                                                                float _tmp_11471 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value;
                                                                _tmp_11471 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_11471);
                                                                uint16_t* _tmp_11470 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_11470 = static_cast<uint16_t>(_tmp_11471);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                // Field:  type(StandardLength12b) name(semi_minor_axis_length) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m010599\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value;
                                                                }
                                                                
                                                                float _tmp_11473 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value;
                                                                _tmp_11473 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_11473);
                                                                uint16_t* _tmp_11472 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_11472 = static_cast<uint16_t>(_tmp_11473);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation.size() != 0) {
                                                                    // Field:  type(CartesianAngleValue) name(orientation) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m010600\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_11475 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value;
                                                                    _tmp_11475 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_11475);
                                                                    uint16_t* _tmp_11474 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_11474 = static_cast<uint16_t>(_tmp_11475);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height.size() != 0) {
                                                                    // Field:  type(StandardLength12b) name(height) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m010601\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_11477 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value;
                                                                    _tmp_11477 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_11477);
                                                                    uint16_t* _tmp_11476 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_11476 = static_cast<uint16_t>(_tmp_11477);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                        
                                                        }
                                                        else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial.size() != 0)  // CHOICE 4  fieldType(Shape) 
                                                        {
                                                            *_choice_332 = 4;  // Setting choice selection
                                                        
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m010602\033[0m| Choice selection: 4";
                                                        
                                                                // RadialShape  SEQUENCE
                                                                    //  shapeReferencePoint         CartesianPosition3d   OPTIONAL  
                                                                    //  range                       StandardLength12b       
                                                                    //  horizontalOpeningAngleStart CartesianAngleValue     
                                                                    //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                                                    //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                                                    //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                                                // Optional fields bytemap
                                                                char* _tmp_11478 = (char*) buffer++;
                                                                *_tmp_11478 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m010603\033[0m| Optional field shape_reference_point = " << *_tmp_11478;
                                                                char* _tmp_11479 = (char*) buffer++;
                                                                *_tmp_11479 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m010604\033[0m| Optional field vertical_opening_angle_start = " << *_tmp_11479;
                                                                char* _tmp_11480 = (char*) buffer++;
                                                                *_tmp_11480 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m010605\033[0m| Optional field vertical_opening_angle_end = " << *_tmp_11480;
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point.size() != 0) {
                                                                    // Field:  type(CartesianPosition3d) name(shape_reference_point) extGroup(0)
                                                                        // CartesianPosition3d  SEQUENCE
                                                                            //  xCoordinate CartesianCoordinate     
                                                                            //  yCoordinate CartesianCoordinate     
                                                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                        // Optional fields bytemap
                                                                        char* _tmp_11481 = (char*) buffer++;
                                                                        *_tmp_11481 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m010606\033[0m| Optional field z_coordinate = " << *_tmp_11481;
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(x_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m010607\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_11483 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value;
                                                                        _tmp_11483 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_11483);
                                                                        _tmp_11483 -= -32768;
                                                                        uint16_t* _tmp_11482 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_11482 = static_cast<uint16_t>(_tmp_11483);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(y_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m010608\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_11485 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value;
                                                                        _tmp_11485 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_11485);
                                                                        _tmp_11485 -= -32768;
                                                                        uint16_t* _tmp_11484 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_11484 = static_cast<uint16_t>(_tmp_11485);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                            // Field:  type(CartesianCoordinate) name(z_coordinate) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->debug() << "|\033[38;5;94m010609\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_11487 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            _tmp_11487 *= 100.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_11487);
                                                                            _tmp_11487 -= -32768;
                                                                            uint16_t* _tmp_11486 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_11486 = static_cast<uint16_t>(_tmp_11487);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                }
                                                                
                                                                // Field:  type(StandardLength12b) name(range) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m010610\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value;
                                                                }
                                                                
                                                                float _tmp_11489 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value;
                                                                _tmp_11489 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_11489);
                                                                uint16_t* _tmp_11488 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_11488 = static_cast<uint16_t>(_tmp_11489);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                // Field:  type(CartesianAngleValue) name(horizontal_opening_angle_start) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m010611\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value;
                                                                }
                                                                
                                                                float _tmp_11491 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value;
                                                                _tmp_11491 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_11491);
                                                                uint16_t* _tmp_11490 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_11490 = static_cast<uint16_t>(_tmp_11491);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                // Field:  type(CartesianAngleValue) name(horizontal_opening_angle_end) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m010612\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value;
                                                                }
                                                                
                                                                float _tmp_11493 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value;
                                                                _tmp_11493 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_11493);
                                                                uint16_t* _tmp_11492 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_11492 = static_cast<uint16_t>(_tmp_11493);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start.size() != 0) {
                                                                    // Field:  type(CartesianAngleValue) name(vertical_opening_angle_start) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m010613\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_11495 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value;
                                                                    _tmp_11495 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_11495);
                                                                    uint16_t* _tmp_11494 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_11494 = static_cast<uint16_t>(_tmp_11495);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end.size() != 0) {
                                                                    // Field:  type(CartesianAngleValue) name(vertical_opening_angle_end) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m010614\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_11497 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value;
                                                                    _tmp_11497 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_11497);
                                                                    uint16_t* _tmp_11496 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_11496 = static_cast<uint16_t>(_tmp_11497);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                        
                                                        }
                                                        else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes.size() != 0)  // CHOICE 5  fieldType(Shape) 
                                                        {
                                                            *_choice_332 = 5;  // Setting choice selection
                                                        
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m010615\033[0m| Choice selection: 5";
                                                        
                                                                // RadialShapes  SEQUENCE
                                                                    //  refPointId       Identifier1B                 
                                                                    //  xCoordinate      CartesianCoordinateSmall     
                                                                    //  yCoordinate      CartesianCoordinateSmall     
                                                                    //  zCoordinate      CartesianCoordinateSmall   OPTIONAL  
                                                                    //  radialShapesList RadialShapesList             
                                                                // Optional fields bytemap
                                                                char* _tmp_11498 = (char*) buffer++;
                                                                *_tmp_11498 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m010616\033[0m| Optional field z_coordinate = " << *_tmp_11498;
                                                                
                                                                // Field:  type(Identifier1B) name(ref_point_id) extGroup(0)
                                                                // Integer
                                                                
                                                                // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m010617\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value);
                                                                }
                                                                
                                                                uint8_t* _tmp_11499 = (uint8_t*) buffer++;
                                                                *_tmp_11499 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value; 
                                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value;
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                // Field:  type(CartesianCoordinateSmall) name(x_coordinate) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m010618\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value;
                                                                }
                                                                
                                                                float _tmp_11501 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value;
                                                                _tmp_11501 *= 100.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_11501);
                                                                _tmp_11501 -= -3094;
                                                                uint16_t* _tmp_11500 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_11500 = static_cast<uint16_t>(_tmp_11501);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value' (" << __aux64__ << ") less than (-3094); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value' (" << __aux64__ << ") exceeds max allowable (1001); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                // Field:  type(CartesianCoordinateSmall) name(y_coordinate) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m010619\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value;
                                                                }
                                                                
                                                                float _tmp_11503 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value;
                                                                _tmp_11503 *= 100.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_11503);
                                                                _tmp_11503 -= -3094;
                                                                uint16_t* _tmp_11502 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_11502 = static_cast<uint16_t>(_tmp_11503);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value' (" << __aux64__ << ") less than (-3094); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value' (" << __aux64__ << ") exceeds max allowable (1001); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate.size() != 0) {
                                                                    // Field:  type(CartesianCoordinateSmall) name(z_coordinate) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m010620\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_11505 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value;
                                                                    _tmp_11505 *= 100.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_11505);
                                                                    _tmp_11505 -= -3094;
                                                                    uint16_t* _tmp_11504 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_11504 = static_cast<uint16_t>(_tmp_11505);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value' (" << __aux64__ << ") less than (-3094); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value' (" << __aux64__ << ") exceeds max allowable (1001); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                                
                                                                // Field:  type(RadialShapesList) name(radial_shapes_list) extGroup(0)
                                                                // SequenceOf
                                                                // Data Type UInt8
                                                                // SEQUENCE_OF  min(1) max(16) span(16) ext(true)
                                                                uint8_t* _ext_flag_5540 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.
                                                                *_ext_flag_5540 = 0; 
                                                                
                                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements.size();
                                                                if(__aux64__ > 16) __aux64__ = 16;
                                                                uint16_t* _tmp_11506 = (uint16_t*)buffer;
                                                                buffer += 2;
                                                                *_tmp_11506 = __aux64__ - 1;
                                                                
                                                                int __ifh = __aux64__;
                                                                for(int h = 0; h < __ifh; h++) { 
                                                                    
                                                                        // RadialShapeDetails  SEQUENCE
                                                                            //  range                       StandardLength12b       
                                                                            //  horizontalOpeningAngleStart CartesianAngleValue     
                                                                            //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                                                            //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                                                            //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                                                        // Optional fields bytemap
                                                                        char* _tmp_11507 = (char*) buffer++;
                                                                        *_tmp_11507 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_start.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m010622\033[0m| Optional field vertical_opening_angle_start = " << *_tmp_11507;
                                                                        char* _tmp_11508 = (char*) buffer++;
                                                                        *_tmp_11508 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_end.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m010623\033[0m| Optional field vertical_opening_angle_end = " << *_tmp_11508;
                                                                        
                                                                        // Field:  type(StandardLength12b) name(range) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m010624\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].range.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].range.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].range.value;
                                                                        }
                                                                        
                                                                        float _tmp_11510 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].range.value;
                                                                        _tmp_11510 *= 10.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_11510);
                                                                        uint16_t* _tmp_11509 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_11509 = static_cast<uint16_t>(_tmp_11510);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].range.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].range.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianAngleValue) name(horizontal_opening_angle_start) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m010625\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_start.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_start.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_start.value;
                                                                        }
                                                                        
                                                                        float _tmp_11512 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_start.value;
                                                                        _tmp_11512 *= 10.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_11512);
                                                                        uint16_t* _tmp_11511 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_11511 = static_cast<uint16_t>(_tmp_11512);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_start.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_start.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianAngleValue) name(horizontal_opening_angle_end) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m010626\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_end.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_end.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_end.value;
                                                                        }
                                                                        
                                                                        float _tmp_11514 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_end.value;
                                                                        _tmp_11514 *= 10.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_11514);
                                                                        uint16_t* _tmp_11513 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_11513 = static_cast<uint16_t>(_tmp_11514);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_end.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_end.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_start.size() != 0) {
                                                                            // Field:  type(CartesianAngleValue) name(vertical_opening_angle_start) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->debug() << "|\033[38;5;94m010627\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_start[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_start[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_start[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_11516 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_start[0].value;
                                                                            _tmp_11516 *= 10.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_11516);
                                                                            uint16_t* _tmp_11515 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_11515 = static_cast<uint16_t>(_tmp_11516);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_start[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_start[0].value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_end.size() != 0) {
                                                                            // Field:  type(CartesianAngleValue) name(vertical_opening_angle_end) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->debug() << "|\033[38;5;94m010628\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_end[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_end[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_end[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_11518 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_end[0].value;
                                                                            _tmp_11518 *= 10.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_11518);
                                                                            uint16_t* _tmp_11517 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_11517 = static_cast<uint16_t>(_tmp_11518);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_end[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_end[0].value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                        
                                                                }
                                                        
                                                        }
                                                        else
                                                        {
                                                            logger->warning() << "Wrong option (" << static_cast<int>(*_choice_332) << ") selected in CHOICE Shape in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_bounding_box_shape[0]'; message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    // Field:  type(CardinalNumber1B) name(cluster_cardinality_size) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m010629\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_cardinality_size.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_cardinality_size.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_cardinality_size.value);
                                                    }
                                                    
                                                    uint8_t* _tmp_11519 = (uint8_t*) buffer++;
                                                    *_tmp_11519 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_cardinality_size.value; 
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_cardinality_size.value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_cardinality_size.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_cardinality_size.value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                        return -1;
                                                    }
                                                    
                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_profiles.size() != 0) {
                                                        // Field:  type(VruClusterProfiles) name(cluster_profiles) extGroup(0)
                                                        // BitString
                                                        // BIT_STRING  min(4) max(4) span(1)
                                                        if(debug)
                                                            logger->debug() << "|\033[38;5;94m010630\033[0m| denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_profiles[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_profiles[0].values.size());
                                                        
                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_profiles[0].values.size() < 4) {
                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_profiles[0].value' " << (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_profiles[0].values.size()) << " is less than allowable (4); message dropped.";
                                                            return -1;
                                                        }
                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_profiles[0].values.size() > 4) {
                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_profiles[0].value' " << (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_profiles[0].values.size()) << " exceeds max allowable (4); message dropped.";
                                                            return -1;
                                                        }
                                                        
                                                        uint8_t* _tmp_11520 = (uint8_t*)buffer;
                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_profiles[0].values.size();
                                                        if(__aux64__ > 4) __aux64__ = 4;
                                                        *_tmp_11520 = __aux64__ - 4;
                                                        buffer += 1;
                                                        
                                                        int __ifi = __aux64__;
                                                        for(int i = 0; i < __ifi; i++) {
                                                            uint8_t* __b__ = (uint8_t*)buffer++;
                                                            *__b__ = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.group_sub_class[0].cluster_profiles[0].values[i]? 1: 0);
                                                        }
                                                    }
                                                    
                                                    if(*_ext_flag_5498) {
                                                    }
                                            
                                            }
                                            else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.other_sub_class.size() != 0)  // CHOICE 3  fieldType(ObjectClass) 
                                            {
                                                *_choice_330 = 3;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m010631\033[0m| Choice selection: 3";
                                            
                                                // Integer
                                                
                                                // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010632\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.other_sub_class[0].value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.other_sub_class[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.other_sub_class[0].value);
                                                }
                                                
                                                uint8_t* _tmp_11522 = (uint8_t*) buffer++;
                                                *_tmp_11522 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.other_sub_class[0].value; 
                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.other_sub_class[0].value;
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.other_sub_class[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class.other_sub_class[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                    return -1;
                                                }
                                            
                                            }
                                            else
                                            {
                                                logger->warning() << "Wrong option (" << static_cast<int>(*_choice_330) << ") selected in CHOICE ObjectClass in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].object_class'; message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(ConfidenceLevel) name(confidence) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(1) max(101) span(101) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m010633\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].confidence.value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].confidence.value);
                                            }
                                            
                                            uint8_t* _tmp_11523 = (uint8_t*) buffer++;
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].confidence.value - 1;
                                            *_tmp_11523 = __aux64__;
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].confidence.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 101) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[f].confidence.value' (" << __aux64__ << ") exceeds max allowable (101); message dropped.";
                                                return -1;
                                            }
                                            
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position.size() != 0) {
                                    // Field:  type(MapPosition) name(map_position) extGroup(0)
                                        // MapPosition  SEQUENCE
                                            //  mapReference             MapReference               OPTIONAL  
                                            //  laneId                   Identifier1B               OPTIONAL  
                                            //  connectionId             Identifier1B               OPTIONAL  
                                            //  longitudinalLanePosition LongitudinalLanePosition   OPTIONAL  
                                            //  ...
                                        uint8_t* _ext_flag_5549 = (uint8_t*) buffer++;  // Write extension flag for MapPosition
                                        *_ext_flag_5549 = 0;  
                                        
                                        // Optional fields bytemap
                                        char* _tmp_11524 = (char*) buffer++;
                                        *_tmp_11524 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m010634\033[0m| Optional field map_reference = " << *_tmp_11524;
                                        char* _tmp_11525 = (char*) buffer++;
                                        *_tmp_11525 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m010635\033[0m| Optional field lane_id = " << *_tmp_11525;
                                        char* _tmp_11526 = (char*) buffer++;
                                        *_tmp_11526 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m010636\033[0m| Optional field connection_id = " << *_tmp_11526;
                                        char* _tmp_11527 = (char*) buffer++;
                                        *_tmp_11527 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m010637\033[0m| Optional field longitudinal_lane_position = " << *_tmp_11527;
                                        
                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference.size() != 0) {
                                            // Field:  type(MapReference) name(map_reference) extGroup(0)
                                            // Choice
                                               // #0  roadsegment   RoadSegmentReferenceId
                                               // #1  intersection   IntersectionReferenceId
                                            uint8_t* _choice_333 = (uint8_t*) buffer;
                                            buffer++;
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment.size() != 0) {  // CHOICE 0  fieldType(MapReference) 
                                                *_choice_333 = 0;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m010638\033[0m| Choice selection: 0";
                                            
                                                    // RoadSegmentReferenceId  SEQUENCE
                                                        //  region     Identifier2B   OPTIONAL  
                                                        //  id         Identifier2B     
                                                    // Optional fields bytemap
                                                    char* _tmp_11528 = (char*) buffer++;
                                                    *_tmp_11528 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m010639\033[0m| Optional field region = " << *_tmp_11528;
                                                    
                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region.size() != 0) {
                                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                                        // Integer
                                                        
                                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                        if(debug) {
                                                            logger->debug() << "|\033[38;5;94m010640\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value) << 
                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value;
                                                        }
                                                        
                                                        uint16_t* _tmp_11529 = (uint16_t*) buffer; buffer += 2;
                                                        *_tmp_11529 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value; 
                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m010641\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value;
                                                    }
                                                    
                                                    uint16_t* _tmp_11530 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_11530 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value; 
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                        return -1;
                                                    }
                                            
                                            }
                                            else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection.size() != 0)  // CHOICE 1  fieldType(MapReference) 
                                            {
                                                *_choice_333 = 1;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m010642\033[0m| Choice selection: 1";
                                            
                                                    // IntersectionReferenceId  SEQUENCE
                                                        //  region     Identifier2B   OPTIONAL  
                                                        //  id         Identifier2B     
                                                    // Optional fields bytemap
                                                    char* _tmp_11531 = (char*) buffer++;
                                                    *_tmp_11531 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m010643\033[0m| Optional field region = " << *_tmp_11531;
                                                    
                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region.size() != 0) {
                                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                                        // Integer
                                                        
                                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                        if(debug) {
                                                            logger->debug() << "|\033[38;5;94m010644\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value) << 
                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value;
                                                        }
                                                        
                                                        uint16_t* _tmp_11532 = (uint16_t*) buffer; buffer += 2;
                                                        *_tmp_11532 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value; 
                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m010645\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value;
                                                    }
                                                    
                                                    uint16_t* _tmp_11533 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_11533 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value; 
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                        return -1;
                                                    }
                                            
                                            }
                                            else
                                            {
                                                logger->warning() << "Wrong option (" << static_cast<int>(*_choice_333) << ") selected in CHOICE MapReference in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0]'; message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id.size() != 0) {
                                            // Field:  type(Identifier1B) name(lane_id) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m010646\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value);
                                            }
                                            
                                            uint8_t* _tmp_11534 = (uint8_t*) buffer++;
                                            *_tmp_11534 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value; 
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id.size() != 0) {
                                            // Field:  type(Identifier1B) name(connection_id) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m010647\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value);
                                            }
                                            
                                            uint8_t* _tmp_11535 = (uint8_t*) buffer++;
                                            *_tmp_11535 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value; 
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position.size() != 0) {
                                            // Field:  type(LongitudinalLanePosition) name(longitudinal_lane_position) extGroup(0)
                                                // LongitudinalLanePosition  SEQUENCE
                                                    //  longitudinalLanePositionValue      LongitudinalLanePositionValue          
                                                    //  longitudinalLanePositionConfidence LongitudinalLanePositionConfidence     
                                                // Optional fields bytemap
                                                
                                                // Field:  type(LongitudinalLanePositionValue) name(longitudinal_lane_position_value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(32767) span(32768) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010648\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                                }
                                                
                                                float _tmp_11537 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                                _tmp_11537 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11537);
                                                uint16_t* _tmp_11536 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_11536 = static_cast<uint16_t>(_tmp_11537);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(LongitudinalLanePositionConfidence) name(longitudinal_lane_position_confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(1023) span(1024) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m010649\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                                }
                                                
                                                float _tmp_11539 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                                _tmp_11539 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_11539);
                                                uint16_t* _tmp_11538 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_11538 = static_cast<uint16_t>(_tmp_11539);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 1023) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' (" << __aux64__ << ") exceeds max allowable (1023); message dropped.";
                                                    return -1;
                                                }
                                        }
                                        
                                        if(*_ext_flag_5549) {
                                        }
                                }
                                
                                if(*_ext_flag_5434) {
                                }
                            
                            if(ros->denm.alacarte[0].precrash[0].object_station_id.size() != 0) {
                                // Field:  type(StationId) name(object_station_id) extGroup(0)
                                // Integer
                                
                                // UINT32  min(0) max(4294967295) span(4294967296) dataType(UInt32)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m010650\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].object_station_id[0].value) << 
                                                 " denm.alacarte[0].precrash[0].object_station_id[0].value: " << ros->denm.alacarte[0].precrash[0].object_station_id[0].value;
                                }
                                
                                uint32_t* _tmp_11542 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_11542 = ros->denm.alacarte[0].precrash[0].object_station_id[0].value; 
                                __aux64__ = ros->denm.alacarte[0].precrash[0].object_station_id[0].value;
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].object_station_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 4294967295) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].object_station_id[0].value' (" << __aux64__ << ") exceeds max allowable (4294967295); message dropped.";
                                    return -1;
                                }
                            }
                            
                            if(ros->denm.alacarte[0].precrash[0].time_to_collision.size() != 0) {
                                // Field:  type(DeltaTimeMilliSecondPositive) name(time_to_collision) extGroup(0)
                                // Real
                                
                                // FLOAT  min(1) max(10000) span(10000) scaleDivisor(1000.0) dataType(Float)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m010651\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].time_to_collision[0].value) << 
                                                 " denm.alacarte[0].precrash[0].time_to_collision[0].value: " << ros->denm.alacarte[0].precrash[0].time_to_collision[0].value;
                                }
                                
                                float _tmp_11544 = ros->denm.alacarte[0].precrash[0].time_to_collision[0].value;
                                _tmp_11544 *= 1000.0;
                                __aux64__ = static_cast<uint64_t>(_tmp_11544);
                                _tmp_11544 -= 1;
                                uint16_t* _tmp_11543 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_11543 = static_cast<uint16_t>(_tmp_11544);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].time_to_collision[0].value' (" << __aux64__ << ") less than (1); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 10000) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].time_to_collision[0].value' (" << __aux64__ << ") exceeds max allowable (10000); message dropped.";
                                    return -1;
                                }
                            }
                            
                            if(ros->denm.alacarte[0].precrash[0].impact_section.size() != 0) {
                                // Field:  type(ObjectFace) name(impact_section) extGroup(0)
                                // Enumerated
                                // INT32  min(0) max(5) span(6) dataType(Int32)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m010652\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].impact_section[0].value) << 
                                                 " denm.alacarte[0].precrash[0].impact_section[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].impact_section[0].value);
                                }
                                
                                uint8_t* _tmp_11545 = (uint8_t*)buffer;
                                buffer += 1;
                                *_tmp_11545 = ros->denm.alacarte[0].precrash[0].impact_section[0].value; 
                                __aux64__ = ros->denm.alacarte[0].precrash[0].impact_section[0].value; 
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].impact_section[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 5) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].impact_section[0].value' (" << __aux64__ << ") exceeds max allowable (5); message dropped.";
                                    return -1;
                                }
                            }
                            
                            if(ros->denm.alacarte[0].precrash[0].estimated_braking_distance.size() != 0) {
                                // Field:  type(StandardLength12b) name(estimated_braking_distance) extGroup(0)
                                // Real
                                
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m010653\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].estimated_braking_distance[0].value) << 
                                                 " denm.alacarte[0].precrash[0].estimated_braking_distance[0].value: " << ros->denm.alacarte[0].precrash[0].estimated_braking_distance[0].value;
                                }
                                
                                float _tmp_11547 = ros->denm.alacarte[0].precrash[0].estimated_braking_distance[0].value;
                                _tmp_11547 *= 10.0;
                                __aux64__ = static_cast<uint64_t>(_tmp_11547);
                                uint16_t* _tmp_11546 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_11546 = static_cast<uint16_t>(_tmp_11547);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].estimated_braking_distance[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].estimated_braking_distance[0].value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                    return -1;
                                }
                            }
                            
                            if(*_ext_flag_5433) {
                            }
                    }
                    
                    *_tmp_11210_openType = buffer - _tmp_11211_start;  // OpenType length
                }
        }
    
	
            return buffer - start;
        }
    } 
}